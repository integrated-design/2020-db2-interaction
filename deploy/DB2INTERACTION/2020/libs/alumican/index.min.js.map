{"version":3,"sources":["../src/alumican/cmd/Parallel.ts","../src/alumican/scn/SceneManagerRequireSceneEvent.ts","../src/alumican/index.ts","../src/alumican/alm/debug/Logger.ts","../src/alumican/alm/util/Time.ts","../src/alumican/alm/math/Easing.ts","../src/alumican/alm/browser/QueryString.ts","../src/alumican/alm/debug/FpsMonitor.ts","../src/alumican/alm/event/Event.ts","../src/alumican/alm/event/EventDispatcher.ts","../src/alumican/cmd/CommandState.ts","../src/alumican/cmd/CommandEvent.ts","../src/alumican/cmd/Command.ts","../src/alumican/cmd/CommandList.ts","../src/alumican/cmd/Break.ts","../src/alumican/cmd/Return.ts","../src/alumican/cmd/Log.ts","../src/alumican/cmd/Wait.ts","../src/alumican/cmd/Func.ts","../src/alumican/cmd/Listen.ts","../src/alumican/cmd/Tween.ts","../src/alumican/cmd/Serial.ts","../src/alumican/alm/geom/Vector2.ts","../src/alumican/alm/geom/Vector3.ts","../src/alumican/alm/geom/Rectangle.ts","../src/alumican/alm/geom/Boxer.ts","../src/alumican/alm/util/Obj.ts","../src/alumican/alm/util/Arr.ts","../src/alumican/alm/util/Num.ts","../src/alumican/alm/util/Str.ts","../src/alumican/alm/util/Cmd.ts","../src/alumican/alm/util/Dom.ts","../src/alumican/alm/resource/ObjectPool.ts","../src/alumican/alm/state/Lottery.ts","../src/alumican/alm/state/Switcher.ts","../src/alumican/alm/state/SwitcherEvent.ts","../src/alumican/alm/state/LoHi.ts","../src/alumican/alm/state/LoHiEvent.ts","../src/alumican/alm/math/EasingValue.ts","../src/alumican/alm/math/SpringValue.ts","../src/alumican/alm/math/SimpleAverage.ts","../src/alumican/alm/math/SimpleMovingAverage.ts","../src/alumican/alm/math/MaxValue.ts","../src/alumican/alm/math/Circular.ts","../src/alumican/alm/time/AnimationFrameTicker.ts","../src/alumican/alm/time/AnimationFrameTickerEvent.ts","../src/alumican/alm/time/Timer.ts","../src/alumican/alm/time/TimerEvent.ts","../src/alumican/alm/io/FileLoader.ts","../src/alumican/alm/io/FileLoaderProgressEvent.ts","../src/alumican/alm/io/FileLoaderSuccessEvent.ts","../src/alumican/alm/io/FileLoaderErrorEvent.ts","../src/alumican/alm/io/FileQuery.ts","../src/alumican/alm/audio/core/AudioClip.ts","../src/alumican/alm/audio/AudioPlayer.ts","../src/alumican/alm/audio/CrossOverLoopAudio.ts","../src/alumican/alm/audio/FootstepAudio.ts","../src/alumican/alm/view/ViewEvent.ts","../src/alumican/alm/view/View.ts","../src/alumican/alm/view/ButtonBehavior.ts","../src/alumican/alm/view/SelectionBehavior.ts","../src/alumican/alm/browser/DeviceInfo.ts","../src/alumican/alm/browser/LocalStorage.ts","../src/alumican/alm/browser/KeyWatcher.ts","../src/alumican/alm/browser/KeyWatcherEvent.ts","../src/alumican/alm/browser/WindowWatcher.ts","../src/alumican/alm/browser/WindowWatcherEvent.ts","../src/alumican/alm/browser/ScrollSectionTriggerEvent.ts","../src/alumican/alm/browser/ScrollSectionTrigger.ts","../src/alumican/alm/browser/ResponsiveObserver.ts","../src/alumican/alm/browser/ResponsiveObserverEvent.ts","../src/alumican/scn/Scene.ts","../src/alumican/scn/SceneEvent.ts","../src/alumican/scn/SceneTransferInfo.ts","../src/alumican/scn/SceneState.ts","../src/alumican/scn/core/Direction.ts","../src/alumican/scn/core/Waypoint.ts","../src/alumican/scn/core/RootScene.ts","../src/alumican/scn/SceneManager.ts","../src/alumican/scn/SceneManagerEvent.ts"],"names":["cmd","scn","alm","trace","messages","_i","arguments","length","debug","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","util","Time","now","window","performance","Date","math","Easing","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","createEaseInElastic","s","p","a","asin","createEaseOutElastic","createEaseInOutElastic","easeInElastic","defaultEaseInElastic","easeOutElastic","defaultEaseOutElastic","easeInOutElastic","defaultEaseInOutElastic","createEaseInBack","createEaseOutBack","createEaseInOutBack","easeInBack","easeOutBack","defaultEaseOutBack","easeInOutBack","defaultEaseInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","defaultEaseInBack","browser","QueryString","url","this","set","prototype","index","search","indexOf","substring","location","hash","pair","pairs","split","i","getString","key","defaultValue","value","undefined","getInt","parseInt","isNaN","getFloat","parseFloat","getBool","getHash","setHash","setParam","removeParam","hasParam","LoggerLevel","NullLogging","verbose","prefix","warn","error","ConsoleLogging","console","Array","slice","call","concat","log","DOMLogging","print","line","join","html","dom","innerHTML","innerText","ParallelLogging","n","loggers","setLevelByQuery","level","Silent","setNamespace","namespace","Verbose","logger","Info","Warn","Error","stackTrace","FpsMonitor","reset","frameRate","frameCount","startTime","actualFrameRate","dummyFrameRate","update","currentTime","elapsedTime","setDummyFrameRate","clearDummyFrameRate","getFrameRate","Event","type","data","event","event_1","EventDispatcher","listeners","addEventListener","eventType","listener","numListeners","push","removeEventListener","splice","removeAllEventListener","hasEventListener","dispatchEvent","dispatchEventType","eventTarget","CommandState","_super","CommandEvent","__extends","clone","toString","COMPLETE","Command","execute","state","Sleeping","Executing","getExecuteFunction","interrupt","Interrupting","getInterruptFunction","destroy","getDestroyFunction","parent","executeFunction","interruptFunction","destroyFunction","notifyComplete","implExecuteFunction","command","implInterruptFunction","implDestroyFunction","setExecuteFunction","func","setInterruptFunction","setDestroyFunction","getState","getParent","setParent","getSelf","self","_this","CommandList","addCommand","commands","preProcess","getCommands","insertCommand","insertCommandAt","__spreadArrays","addCommandArray","insertCommandArray","insertCommandArrayAt","getLength","getCommandByIndex","numCommands","Func","Break","Return","Log","getMessages","setMessages","Wait","timerId","setTimeout","completeHandler","time","cancel","clearTimeout","getTime","setTime","eventDispatcher","args","getFunction","setFunction","getArguments","setArguments","getEventDispatcher","setEventDispatcher","getEventType","setEventType","Listen","Tween","internalFrom","to","from","tweenTarget","duration","setInterval","intervalHandler","updateInterval","onStart","progressTime","progressValue","onUpdate","onComplete","easing","clearInterval","timeRatio","value0","getTarget","setTarget","getDuration","setDuration","getTo","setTo","getFrom","setFrom","getEasing","setEasing","getOnStart","setOnStart","getOnUpdate","setOnUpdate","getOnComplete","setOnComplete","getProgressTime","getProgressValue","getUpdateInterval","setUpdateInterval","milliseconds","Serial","position","next","currentCommand","isPaused","isCompleteOnPaused","implNotifyBreak","implNotifyReturn","getPosition","Parallel","completeCount","command_1","command_2","command_3","getCompleteCount","geom","Vector2","x","y","copyTo","point","getClone","zero","normalize","l","getSquareDistance","dx","dy","getDistance","Vector3","z","dz","Rectangle","width","height","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","tw","th","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","Obj","each","Object","keys","forEach","get","Arr","sequence","count","init","step","result","v","unique","list","filter","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","m","swap","index1","index2","tmp","shuffle","floor","random","sort","asc","b","Num","map","srcA","srcB","dstA","dstB","clamp","ease","min","max","randomInt","clampAbs","minAbs","maxAbs","abs","dist","x1","y1","x2","y2","squared","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","PI3","PI2","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","Str","toTimeString","hours","minutes","seconds","h","substr","Cmd","stop","c","single","Dom","instantiate","templateId","element","document","getElementById","cloneNode","removeAttribute","addPointerDownListener","addPointerUpListener","removePointerEventListener","removePointerUpListener","resource","ObjectPool","onRequireItem","onDestroyItem","initCount","growthCount","items","getItem","unshift","returnItem","item","reduce","shift","Lottery","values","initValues","restValues","restCount","isEmpty","onCheck","isAutoResetEnabled","add","getRestCount","getIsEmply","getIsAutoResetEnabled","setIsAutoResetEnabled","enabled","createIndices","Switcher","isLoopEnabled","itemCount","itemIds","itemIndexById","onChange","onPrev","onNext","setupById","ids","setup","setupByCount","currentItemIndex","currentItemId","oldItemIndex","oldItemId","gotoByIndex","itemIndex","useTransition","dispatchPagerEvent","SwitcherEvent","CHANGE","gotoById","itemId","hasOwnProperty","prev","getPrevItemIndex","PREV","getNextItemIndex","NEXT","getPrevItemId","getNextItemId","getIsLoopEnabled","setIsLoopEnabled","getItemCount","getCurrentItemIndex","getOldItemIndex","getCurrentItemId","getOldItemId","getItemIds","LoHi","lowThreshold","highThreshold","initValue","isHigh","_set","getIsHigh","getValue","getLowThreshold","getHighThreshold","setLowThreshold","threshold","setHighThreshold","LoHiEvent","LOW","HIGH","EasingValue","tolerance","d","SpringValue","spring","friction","acceleration","velocity","SimpleAverage","_value","_count","SimpleMovingAverage","maxCount","_maxCount","oldest","latest","MaxValue","maxLatestCount","_maxLatestCount","Number","MAX_VALUE","Circular","angle","setAngle","setVelocity","getAngle","getVelocity","getSin","getCos","getTan","tan","getMagnitude","getVector","xy","AnimationFrameTicker","updateHandler","requestId","requestAnimationFrame","targetFrameRate","frameStartTime","interval","toleranceDuration","AnimationFrameTickerEvent","TICK","isRunning","start","cancelAnimationFrame","getIsRunning","getTargetFrameRate","Timer","repeatCount","timerHandler","tStartTime","elapsedCount","isCompleted","tInterval","startInterval","dispatch","TimerEvent","tId","tRestTime","stopInterval","restart","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","io","FileLoader","totalThreadCount","fileLoadCompleteHandler","query","content","currentThreadCount","isLoading","isLoadComplete","param","onLoad","FileLoaderSuccessEvent","SUCCESS","fileLoadErrorHandler","onError","FileLoaderErrorEvent","ERROR","isLoading_","currentCount","totalCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","handlersByType","require","id","addQuery","FileQuery","String","load","progress","this_1","FileLoaderProgressEvent","query_1","handler","START","PROGRESS","addHandler","getType","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getContentByUrl","getContentByQueryId","textureId","getCurrentThreadCount","getTotalThreadCount","loadedCount","audio","AudioClip","context","destination","fileName","masterVolume","buffer","sourceNode","isAvailable","gainNode","createGain","connect","volume","applyVolume","request","XMLHttpRequest","responseType","onreadystatechange","readyState","status","decodeAudioData","response","open","send","play","loop","overwrite","createBufferSource","disconnect","getVolume","setVolume","volumeTween","fadeTo","fadeIn","fadeOut","stopOnComplete","gain","getIsAvailable","getCurrentTime","AudioPlayer","AudioContext","clipsById","masterGainNode","masterVolute","getClip","getMasterVolume","setMasterVolume","getInstance","instance","CrossOverLoopAudio","crossOverDuration","clipIndex","clipCount","playCurrent","audioPlayer","clipIds","clip","isPlaying","timeoutId","stopCurrent","FootstepAudio","intervalMin","intervalMax","clipId","isWaitingForFirstStep","intervalId","immediately","setSpeed","speedRatio","view","ViewEvent","INITIALIZE_BEGIN","INITIALIZE_END","FINALIZE_BEGIN","FINALIZE_END","READY_BEGIN","READY_END","SHOW_BEGIN","SHOW_END","HIDE_BEGIN","HIDE_END","view_1","View","viewCount","name","autoHideWithInit","isInitializing","isInitialized","isFinalizing","isFinalized","isReadying","isReadied","isShowing","isShown","isHiding","viewsById","initialize","implInitialize","hide","ready","implReady","finalize","implFinalize","show","getShowCommand","getHideCommand","showCommand","hideCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReadying","getIsReadied","getIsShowing","getIsShown","getIsHiding","getIsHidden","getIsFinalizing","getIsFinalized","getId","getView","getName","setName","getAutoHideWithInit","setAutoHideWithInit","getViewById","ButtonBehavior","hitArea","isHoverCursorEnabled","isPreventDefaultEnabled","isStopPropagationEnabled","mouseOverHandler","preventDefault","stopPropagation","over","applyMouseCursor","mouseOutHandler","out","mouseDownHandler","down","mouseUpHandler","up","clickHandler","click","touchStartHandler","touchEndHandler","touchCancelHandler","isEnabled","isOver","isDown","isOverInternal","isDownInternal","defaultMouseCursor","setHitArea","implButtonOver","_out","checkEnabled","implButtonOut","implButtonDown","_up","implButtonUp","implButtonClick","on","off","getIsEnabled","setIsEnabled","implButtonChangeEnabled","getIsOver","getIsDown","getHitArea","clearHitArea","getIsPreventDefaultEnabled","setIsPreventDefaultEnabled","getIsStopPropagationEnabled","setIsStopPropagationEnabled","getIsHoverCursorEnabled","setIsHoverCursorEnabled","style","cursor","SelectionBehavior","select","isSelected","implSelectionChanged","deselect","getIsSelected","DeviceInfo","u","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isIE","isEdge","isChrome","isSafari","isFireFox","isOpera","isUnknownBrowser","navigator_1","langFull","languages","language","lang","exception","isTouchEnabled","ontouchstart","isDownloadEnabled","devicePixelRatio","isRetina","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsIE","getIsEdge","getIsChrome","getIsSafari","getIsFireFox","getIsOpera","getIsUnknownBrowser","getLang","getLangFull","getIsTouchEnabled","getIsDownloadEnabled","getIsRetina","getDevicePixelRatio","getDpi","div","dpi","createElement","setAttribute","body","appendChild","offsetHeight","removeChild","LocalStorage","save","expiredAt","record","JSON","stringify","localStorage","setItem","saveWithTerm","parse","removeItem","remove","isAvailable_","toMilliseconds","dates","KeyCode","KeyWatcher","windowKeyDownHandler","windowKeyUpHandler","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","KeyWatcherEvent","KEY_DOWN","KEY_UP","isLongPressed","originalEvent","altKey","ctrlKey","shiftKey","WindowWatcher","windowResizeHandler","windowScrollHandler","windowWidth","innerWidth","windowHeight","innerHeight","scrollTop","pageYOffset","documentElement","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","WindowWatcherEvent","RESIZE","getWindow","getScrollTop","getScrollBottom","getWindowWidth","getWindowHeight","getIsMobileOrientationResize","isMobileOrientationResize","setIsMobileOrientationResize","windowOrientationChangeHandler","SCROLL","ScrollSectionTriggerEvent","currentSectionIndex","prevSectionIndex","ScrollSectionTrigger","updateScrollPosition","check","updateThresholdPosition","scrollPosition","triggerPositions","thresholdRatio","thresholdPosition","getCurrentIndex","getPrevIndex","getTriggerPositions","setTriggerPositions","positions","getThreshold","setThreshold","sectionIndex","nearestTriggerIndex","nearestScrolledTriggerPosition","nearestDistance","triggerPositionCount","scrolledTriggerPosition","distance","ResponsiveObserver","breakPoints","breakPointCount","currentIndex","prevIndex","setBreakpoints","getBreakPoints","getBreakPointCount","ResponsiveObserverEvent","Scene","addChild","child","childName","childrenByName","numChildren","addChildren","children","addedChildren","removeChildren","removedChildren","removeAllChildren","name_1","contains","getLastState","lastState","getChildByName","getChildrenByName","getNumChildren","getManager","getPath","manager","names","scene","getScenePathByNames","getTransferInfo","transferInfo","gotoScene","path","goto","_load","SceneState","Loading","SceneEvent","LOAD","implOnLoad","Idling","LOAD_COMPLETE","_unload","Unloading","UNLOAD","onUnload","implOnUnload","UNLOAD_COMPLETE","_arrive","Arriving","ARRIVE","onArrive","implOnArrive","ARRIVE_COMPLETE","_leave","Leaving","LEAVE","onLeave","implOnLeave","LEAVE_COMPLETE","_ascend","Ascending","ASCEND","onAscend","implOnAscend","ASCEND_COMPLETE","_descend","Descending","DESCEND","onDescend","implOnDescend","DESCEND_COMPLETE","SceneTransferInfo","getTransferId","transferId","getDeparturePath","departurePath","getDestinationPath","destinationPath","getSceneStateString","core","Direction","getDirectionString","direction","Static","Sibling","Ascend","Descend","Waypoint","getLevel","_setFrom","_setTo","RootScene","SceneManager","isDestinationChanged","newWaypoints","resolvePath","waypointIndex","createWaypoints","waypoints","setDirection","dumpWaypoint","eventIndex","SceneManagerEvent","TRANSFER_START","checkState","currentScene","normalized","name_2","pop","addSceneAt","success","getSceneNamesByPath","root","name_3","getRoot","getSceneByPath","getSceneBySceneNames","getParentSceneByPath","getSceneLevelByNames","departureNames","destinationNames","turningPath","turningLevel","turningNames","prevPath","name_4","dumpAllPath","_dumpAllPath","tmpTransferId","TRANSFER_COMPLETE","currentWaypoint","currentWaypointPath","SceneManagerRequireSceneEvent","REQUIRE_SCENE","sceneLeaveCompleteHandler","sceneUnloadCompleteHandler","sceneLoadCompleteHandler","sceneAscendCompleteHandler","sceneDescendCompleteHandler","sceneArriveCompleteHandler","rootSceneClass","scenePath","getVersion"],"mappings":"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","file":"index.min.js","sourcesContent":["/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Parallel extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.completeCount = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tprivate completeHandler = (event:Event<Command>):void => {\n\t\t\tif (++this.completeCount >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.completeCount = 0;\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.execute();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.interrupt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getCompleteCount():number { return this.completeCount; }\n\t\tprivate completeCount:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerRequireSceneEvent extends Event<SceneManager> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static REQUIRE_SCENE:string = 'SceneManagerRequireSceneEvent.requireScene';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:SceneManager, scenePath:string) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.scenePath = scenePath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerRequireSceneEvent {\n\t\t\treturn new SceneManagerRequireSceneEvent(this.type, this.target, this.scenePath);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerRequireSceneEvent] type = ' + this.type + ', scenePath = ' + this.scenePath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly scenePath:string;\n\t}\n}\n","/* ---------- project dependencies ---------- */\n\n\n/* ---------- project scripts ---------- */\n\n/// <reference path='alm/util/Time.ts' />\n/// <reference path='alm/math/Easing.ts' />\n/// <reference path='alm/browser/QueryString.ts' />\n\n/// <reference path='alm/debug/Logger.ts' />\n/// <reference path='alm/debug/FpsMonitor.ts' />\n\n/// <reference path='alm/event/Event.ts' />\n/// <reference path='alm/event/EventListener.ts' />\n/// <reference path='alm/event/EventDispatcher.ts' />\n/// <reference path='alm/event/IEventDispatcher.ts' />\n\n/// <reference path='cmd/CommandState.ts' />\n/// <reference path='cmd/CommandEvent.ts' />\n/// <reference path='cmd/Command.ts' />\n/// <reference path='cmd/CommandList.ts' />\n/// <reference path='cmd/Break.ts' />\n/// <reference path='cmd/Return.ts' />\n/// <reference path='cmd/Log.ts' />\n/// <reference path='cmd/Wait.ts' />\n/// <reference path='cmd/Func.ts' />\n/// <reference path='cmd/Listen.ts' />\n/// <reference path='cmd/Tween.ts' />\n/// <reference path='cmd/Serial.ts' />\n/// <reference path='cmd/Parallel.ts' />\n\n/// <reference path='alm/geom/Vector2.ts' />\n/// <reference path='alm/geom/Vector3.ts' />\n/// <reference path='alm/geom/Rectangle.ts' />\n/// <reference path='alm/geom/Boxer.ts' />\n\n/// <reference path='alm/util/Hash.ts' />\n/// <reference path='alm/util/Obj.ts' />\n/// <reference path='alm/util/Arr.ts' />\n/// <reference path='alm/util/Num.ts' />\n/// <reference path='alm/util/Str.ts' />\n/// <reference path='alm/util/Cmd.ts' />\n/// <reference path='alm/util/Dom.ts' />\n\n/// <reference path='alm/resource/ObjectPool.ts' />\n\n/// <reference path='alm/state/Lottery.ts' />\n/// <reference path='alm/state/Switcher.ts' />\n/// <reference path='alm/state/SwitcherEvent.ts' />\n/// <reference path='alm/state/LoHi.ts' />\n/// <reference path='alm/state/LoHiEvent.ts' />\n\n/// <reference path='alm/math/EasingValue.ts' />\n/// <reference path='alm/math/SpringValue.ts' />\n/// <reference path='alm/math/SimpleAverage.ts' />\n/// <reference path='alm/math/SimpleMovingAverage.ts' />\n/// <reference path='alm/math/MaxValue.ts' />\n/// <reference path='alm/math/Circular.ts' />\n\n/// <reference path='alm/time/AnimationFrameTicker.ts' />\n/// <reference path='alm/time/AnimationFrameTickerEvent.ts' />\n/// <reference path='alm/time/Timer.ts' />\n/// <reference path='alm/time/TimerEvent.ts' />\n\n/// <reference path='alm/io/FileLoader.ts' />\n/// <reference path='alm/io/FileLoaderProgressEvent.ts' />\n/// <reference path='alm/io/FileLoaderSuccessEvent.ts' />\n/// <reference path='alm/io/FileLoaderErrorEvent.ts' />\n/// <reference path='alm/io/FileQuery.ts' />\n/// <reference path='alm/io/IFileHandler.ts' />\n\n/// <reference path='alm/audio/core/AudioClip.ts' />\n/// <reference path='alm/audio/AudioPlayer.ts' />\n/// <reference path='alm/audio/CrossOverLoopAudio.ts' />\n/// <reference path='alm/audio/FootstepAudio.ts' />\n\n/// <reference path='alm/view/IView.ts' />\n/// <reference path='alm/view/ViewEvent.ts' />\n/// <reference path='alm/view/View.ts' />\n/// <reference path='alm/view/ButtonBehavior.ts' />\n/// <reference path='alm/view/IButton.ts' />\n/// <reference path='alm/view/SelectionBehavior.ts' />\n/// <reference path='alm/view/ISelection.ts' />\n\n/// <reference path='alm/browser/DeviceInfo.ts' />\n/// <reference path='alm/browser/LocalStorage.ts' />\n/// <reference path='alm/browser/KeyWatcher.ts' />\n/// <reference path='alm/browser/KeyWatcherEvent.ts' />\n/// <reference path='alm/browser/WindowWatcher.ts' />\n/// <reference path='alm/browser/WindowWatcherEvent.ts' />\n/// <reference path=\"alm/browser/ScrollSectionTriggerEvent.ts\" />\n/// <reference path=\"alm/browser/ScrollSectionTrigger.ts\" />\n/// <reference path=\"alm/browser/ResponsiveObserver.ts\" />\n/// <reference path=\"alm/browser/ResponsiveObserverEvent.ts\" />\n\n/// <reference path='scn/Scene.ts' />\n/// <reference path='scn/SceneEvent.ts' />\n/// <reference path='scn/SceneTransferInfo.ts' />\n/// <reference path='scn/SceneState.ts' />\n/// <reference path='scn/core/Direction.ts' />\n/// <reference path='scn/core/Waypoint.ts' />\n/// <reference path='scn/core/IRootScene.ts' />\n/// <reference path='scn/core/RootScene.ts' />\n/// <reference path='scn/SceneManager.ts' />\n/// <reference path='scn/SceneManagerEvent.ts' />\n/// <reference path='scn/SceneManagerRequireSceneEvent.ts' />\n\n\n/* ---------- init ---------- */\n\nnamespace alm {\n\n\t// Library version info\n\texport function getVersion():string {\n\t\treturn '0.0.1';\n\t}\n\n\t// Credit info\n\tconst style:string = 'color:#999;';\n\tconst print:Function = console.debug;\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('%c+ alumican.js', style);\n\tprint('%c+ version ' + getVersion(), style);\n\tprint('%c+ http://alumican.net', style);\n\tprint('%c+ https://github.com/alumican/alumican.js', style);\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('');\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.debug {\n\n\timport QueryString = alm.browser.QueryString;\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\n\n\n\n\texport interface ILogging {\n\n\t\tverbose(prefix:string, messages:any[]):void;\n\t\tinfo(prefix:string, messages:any[]):void;\n\t\twarn(prefix:string, messages:any[]):void;\n\t\terror(prefix:string, messages:any[]):void;\n\t}\n\n\n\n\n\n\texport class NullLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t}\n\t}\n\n\n\n\n\n\texport class ConsoleLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconsole.debug.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconsole.warn.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconsole.error.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\t}\n\n\n\n\n\n\texport class DOMLogging implements ILogging {\n\n\t\tconstructor(dom:HTMLElement, html:boolean) {\n\t\t\tthis.dom = dom;\n\t\t\tthis.html = html;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tprivate print(prefix:string, messages:any[]):void {\n\t\t\tconst line:string = prefix + messages.join(', ');\n\t\t\tif (this.html) {\n\t\t\t\tthis.dom.innerHTML = line + '<br>\\n' + this.dom.innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.dom.innerText = line + '\\n' + this.dom.innerText;\n\t\t\t}\n\t\t}\n\n\t\tprivate dom:HTMLElement;\n\t\tprivate html:boolean;\n\t}\n\n\n\n\n\n\texport class ParallelLogging implements ILogging {\n\n\t\tconstructor(loggers:ILogging[]) {\n\t\t\tthis.loggers = loggers;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].verbose(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].info(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].warn(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].error(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tprivate loggers:ILogging[];\n\t}\n\n\n\n\n\n\texport class Logger {\n\n\t\tpublic static level:number = LoggerLevel.Verbose;\n\t\tpublic static logger:ILogging = new ConsoleLogging();\n\t\tprivate static namespace:string = '';\n\n\t\tpublic static setLevelByQuery(key:string):void {\n\t\t\tconst level:number = new QueryString().getInt(key, LoggerLevel.Silent);\n\t\t\tLogger.level = isNaN(level) ? LoggerLevel.Silent : level;\n\t\t}\n\n\t\tpublic static setNamespace(namespace:string):void {\n\t\t\tLogger.namespace = namespace != '' ? (namespace + '#') : '';\n\t\t}\n\n\t\tpublic static verbose(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tLogger.logger.verbose('[' + Logger.namespace + 'Verbose] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static info(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) {\n\t\t\t\tLogger.logger.info('[' + Logger.namespace + 'Info   ] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static warn(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static error(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static stackTrace():void {\n\t\t\tconsole.trace();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n\nfunction trace(...messages:any[]):void {\n\talm.debug.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.errorIf.apply(null, arguments);\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Time {\n\n\t\t/**\n\t\t * 現在の時刻(ミリ秒)を取得する\n\t\t * @returns {number} UNIX時間（ミリ秒）\n\t\t */\n\t\tpublic static now():number {\n\t\t\treturn (window.performance || Date).now();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport type EasingFunction = (t:number)=>number;\n\n\texport class Easing {\n\n\t\tpublic static linear(t:number):number {\n\t\t\treturn t;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuad(t:number):number {\n\t\t\treturn (t /= 1) * t;\n\t\t}\n\n\t\tpublic static easeOutQuad(t:number):number {\n\t\t\treturn -(t /= 1) * (t - 2);\n\t\t}\n\n\t\tpublic static easeInOutQuad(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t;\n\t\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCubic(t:number):number {\n\t\t\treturn (t /= 1) * t * t;\n\t\t}\n\n\t\tpublic static easeOutCubic(t:number):number {\n\t\t\treturn (t = t - 1) * t * t + 1;\n\t\t}\n\n\t\tpublic static easeInOutCubic(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuart(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuart(t:number):number {\n\t\t\treturn -((t = t - 1) * t * t * t - 1);\n\t\t}\n\n\t\tpublic static easeInOutQuart(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t;\n\t\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuint(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuint(t:number):number {\n\t\t\treturn ((t = t - 1) * t * t * t * t + 1);\n\t\t}\n\n\t\tpublic static easeInOutQuint(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInSine(t:number):number {\n\t\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t\t}\n\n\t\tpublic static easeOutSine(t:number):number {\n\t\t\treturn Math.sin(t * (Math.PI / 2));\n\t\t}\n\n\t\tpublic static easeInOutSine(t:number):number {\n\t\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\treturn Math.pow(2, 10 * (t - 1));\n\t\t}\n\n\t\tpublic static easeOutExpo(t:number):number {\n\t\t\tif (t == 1) return 1;\n\t\t\treturn -Math.pow(2, -10 * t) + 1;\n\t\t}\n\n\t\tpublic static easeInOutExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\tif (t == 1) return 1;\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCirc(t:number):number {\n\t\t\treturn -(Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t}\n\n\t\tpublic static easeOutCirc(t:number):number {\n\t\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t\t}\n\n\t\tpublic static easeInOutCirc(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 0.5) == 2) return 1;\n\t\t\t\tif (p == 0) p = 0.3 * 1.5;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1) return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseOutElastic(t);\n\t\t}\n\n\t\tpublic static easeInOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutElastic(t);\n\t\t}\n\n\t\tprivate static defaultEaseInElastic:EasingFunction = Easing.createEaseInElastic();\n\t\tprivate static defaultEaseOutElastic:EasingFunction = Easing.createEaseOutElastic();\n\t\tprivate static defaultEaseInOutElastic:EasingFunction = Easing.createEaseInOutElastic();\n\n\n\n\n\n\t\tpublic static createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * (((s *= 1.525) + 1) * t - s);\n\t\t\t\treturn 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseOutBack(t);\n\t\t}\n\n\t\tpublic static easeInOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutBack(t);\n\t\t}\n\n\t\tprivate static defaultEaseInBack:EasingFunction = Easing.createEaseInBack();\n\t\tprivate static defaultEaseOutBack:EasingFunction = Easing.createEaseOutBack();\n\t\tprivate static defaultEaseInOutBack:EasingFunction = Easing.createEaseInOutBack();\n\n\n\n\n\n\t\tpublic static easeInBounce(t:number):number {\n\t\t\treturn 1 - Easing.easeOutBounce(1 - t);\n\t\t}\n\n\t\tpublic static easeOutBounce(t:number):number {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * t * t;\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInOutBounce(t:number):number {\n\t\t\tif (t < 0.5) return Easing.easeInBounce(t * 2) * 0.5;\n\t\t\treturn Easing.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t\t}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\timport Hash = alm.util.Hash;\n\n\texport class QueryString {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string = '') {\n\t\t\tthis.set(url);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(url:string = ''):void {\n\t\t\t// normalize url\n\t\t\tlet search:string = '';\n\t\t\tif (url != '') {\n\t\t\t\tconst index:number = url.indexOf('?');\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tsearch = url.substring(index);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsearch = location.search;\n\t\t\t}\n\t\t\t// parse query\n\t\t\tthis.hash = {};\n\t\t\tconst pairs:string[] = search.substring(1).split('&');\n\t\t\tlet pair:string[];\n\t\t\tfor(let i:number = 0; pairs[i]; ++i) {\n\t\t\t\tpair = pairs[i].split('=');\n\t\t\t\tthis.hash[pair[0]] = pair[1];\n\t\t\t}\n\t\t}\n\n\t\t// 'abc' -> 'abc'\n\t\tpublic getString(key:string, defaultValue:string):string {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : value;\n\t\t}\n\n\t\t// '123' -> 123\n\t\tpublic getInt(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseInt(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '1.23' -> 1.23\n\t\tpublic getFloat(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseFloat(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '0' -> false, otherwise true\n\t\tpublic getBool(key:string, defaultValue:boolean):boolean {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : (<any>value == true);\n\t\t}\n\n\t\tpublic getHash():Hash<string> {\n\t\t\treturn this.hash;\n\t\t}\n\n\t\tpublic setHash(hash:Hash<string>):void {\n\t\t\tthis.hash = hash;\n\t\t}\n\n\t\tpublic setParam(key:string, value:any):void {\n\t\t\tthis.hash[key] = value;\n\t\t}\n\n\t\tpublic removeParam(key:string):void {\n\t\t\tdelete this.hash[key];\n\t\t}\n\n\t\tpublic hasParam(key:string):boolean {\n\t\t\treturn this.hash[key] !== undefined;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate hash:Hash<string>;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.debug {\n\n\timport Time = alm.util.Time;\n\n\texport class FpsMonitor {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic reset():void {\n\t\t\tthis.frameRate = 0;\n\t\t\tthis.frameCount = 0;\n\t\t\tthis.startTime = Time.now();\n\t\t\tthis.actualFrameRate = -1;\n\t\t\tthis.dummyFrameRate = -1;\n\t\t}\n\n\t\tpublic update():void {\n\t\t\t++this.frameCount;\n\t\t\tconst currentTime:number = Time.now();\n\t\t\tconst elapsedTime:number = currentTime - this.startTime;\n\t\t\tif (elapsedTime >= 1000) {\n\t\t\t\tthis.actualFrameRate = 1000 * this.frameCount / elapsedTime;\n\t\t\t\tthis.frameCount = 0;\n\t\t\t\tthis.startTime = currentTime;\n\t\t\t\tif (this.dummyFrameRate < 0) {\n\t\t\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic setDummyFrameRate(frameRate:number):void {\n\t\t\tthis.dummyFrameRate = frameRate;\n\t\t\tthis.frameRate = this.dummyFrameRate;\n\t\t}\n\n\t\tpublic clearDummyFrameRate():void {\n\t\t\tthis.dummyFrameRate = -1;\n\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t}\n\n\t\tpublic getFrameRate():number {\n\t\t\treturn this.frameRate;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate frameRate:number;\n\t\tprivate frameCount:number;\n\t\tprivate startTime:number;\n\t\tprivate actualFrameRate:number;\n\t\tprivate dummyFrameRate:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\r\n\r\nnamespace alm.event {\r\n\r\n\texport class Event<Target = object, Data = any> {\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// CONSTRUCTOR\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tconstructor(type:string, target:Target, data:Data = null) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.target = target;\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// VARIABLE\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tpublic readonly type:string;\r\n\t\tpublic readonly target:Target;\r\n\t\tpublic readonly data:Data;\r\n\t}\r\n}\r\n","/// <reference path='../../index.ts' />\n\nnamespace alm.event {\n\n\timport Logger = alm.debug.Logger;\n\n\texport class EventDispatcher implements IEventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:EventDispatcher = null) {\n\t\t\tthis.target = target || this;\n\t\t\tthis.listeners = {};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] addEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) return;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.listeners[eventType] = listeners = [];\n\t\t\t}\n\t\t\tlisteners.push(listener);\n\t\t}\n\n\t\tpublic removeEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] removeEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) {\n\t\t\t\t\t\tlisteners.splice(i,  1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (listeners.length == 0) {\n\t\t\t\t\tdelete this.listeners[eventType];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic removeAllEventListener(eventType:string = null):void {\n\t\t\tif (eventType) {\n\t\t\t\tdelete this.listeners[eventType];\n\t\t\t} else {\n\t\t\t\tthis.listeners = {};\n\t\t\t}\n\t\t}\n\n\t\tpublic hasEventListener(eventType:string):boolean {\n\t\t\treturn this.listeners[eventType] != null;\n\t\t}\n\n\t\tpublic dispatchEvent(event:Event):void {\n\t\t\tlet listeners:EventListener[] = this.listeners[event.type];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tlisteners[i].call(this.target, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic dispatchEventType<T = any>(eventType:string, eventTarget:object = null, data:T = null):void {\n\t\t\tthis.dispatchEvent(new Event<object, T>(eventType, eventTarget, data));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:any;\n\t\tprivate listeners:util.Hash<EventListener[]>;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport enum CommandState {\n\t\tSleeping     = 0,\n\t\tExecuting    = 1,\n\t\tInterrupting = 2,\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class CommandEvent extends Event<Command> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Command) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():CommandEvent {\n\t\t\treturn new CommandEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[CommandEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Command extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(executeFunction:Function = null, interruptFunction:Function = null, destroyFunction:Function = null) {\n\t\t\tsuper();\n\n\t\t\tthis.setExecuteFunction(executeFunction);\n\t\t\tthis.setInterruptFunction(interruptFunction);\n\t\t\tthis.setDestroyFunction(destroyFunction);\n\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.self = this;\n\t\t\tthis.parent = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic execute():void {\n\t\t\tif (this.state > CommandState.Sleeping) {\n\t\t\t\tthrow new Error('[Command.execute] + Command is already executing.');\n\t\t\t}\n\t\t\tthis.state = CommandState.Executing;\n\t\t\tthis.getExecuteFunction().call(this, this);\n\t\t}\n\n\t\tpublic interrupt():void {\n\t\t\tif (this.state == CommandState.Executing) {\n\t\t\t\tthis.state = CommandState.Interrupting;\n\t\t\t\tthis.getInterruptFunction().call(this, this);\n\t\t\t}\n\t\t}\n\n\t\tpublic destroy():void {\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.getDestroyFunction().call(this, this);\n\t\t\tthis.parent = null;\n\t\t\tthis.executeFunction = null;\n\t\t\tthis.interruptFunction = null;\n\t\t\tthis.destroyFunction = null;\n\t\t}\n\n\t\tprotected notifyComplete():void {\n\t\t\tswitch (this.state) {\n\t\t\t\tcase CommandState.Sleeping:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Executing:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Interrupting:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getExecuteFunction():Function { return this.executeFunction || this.implExecuteFunction };\n\t\tpublic setExecuteFunction(func:Function):void { this.executeFunction = func; }\n\t\tprivate executeFunction:Function;\n\n\t\tpublic getInterruptFunction():Function { return this.interruptFunction || this.implInterruptFunction };\n\t\tpublic setInterruptFunction(func:Function):void { this.interruptFunction = func; }\n\t\tprivate interruptFunction:Function;\n\n\t\tpublic getDestroyFunction():Function { return this.destroyFunction || this.implDestroyFunction };\n\t\tpublic setDestroyFunction(func:Function):void { this.destroyFunction = func; }\n\t\tprivate destroyFunction:Function;\n\n\t\tpublic getState():CommandState { return this.state; }\n\t\tprivate state:CommandState;\n\n\t\tpublic getParent():Command { return this.parent; }\n\t\tpublic setParent(parent:Command):void { this.parent = parent; }\n\t\tprivate parent:Command;\n\n\t\tpublic getSelf():Command { return this.self; }\n\t\tprivate self:Command;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport abstract class CommandList extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper();\n\t\t\tthis.commands = [];\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tthis.commands = this.getCommands().concat(<Command[]>commands);\n\t\t\t}\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(0, ...commands);\n\t\t}\n\n\t\tprotected insertCommandAt(index:number, ...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tArray.prototype.splice.apply(this.getCommands(), (<any[]>[index, 0]).concat(commands));\n\t\t\t}\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprotected insertCommandArrayAt(index:number, commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(index, ...commands);\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn this.commands.length;\n\t\t}\n\n\t\tpublic getCommandByIndex(index:number):Command { return this.commands[index]; }\n\t\tpublic getCommands():Command[] { return this.commands; }\n\n\t\tprivate preProcess(commands:(Command|Function)[]):void {\n\t\t\tconst numCommands:number = commands.length;\n\t\t\tlet command:Command|Function;\n\t\t\tfor (let i:number = 0; i < numCommands; ++i) {\n\t\t\t\tcommand = commands[i];\n\t\t\t\tif (typeof(command) == 'function') commands[i] = command = new Func(command);\n\t\t\t\tcommand.setParent(this);\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\t\tprotected abstract implNotifyBreak():void;\n\t\tprotected abstract implNotifyReturn():void;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate commands:Command[];\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Break extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyBreak'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Return extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Log extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...messages:any[]) {\n\t\t\tsuper();\n\t\t\tthis.messages = messages;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call(this.messages));\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.messages = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getMessages():any[] { return this.messages; }\n\t\tpublic setMessages(messages:any[]):void { this.messages = messages; }\n\t\tprivate messages:any[];\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Wait extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(time:number = 1000) {\n\t\t\tsuper();\n\t\t\tthis.time = time;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.timerId = window.setTimeout(this.completeHandler, this.time);\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearTimeout(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate completeHandler = ():void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTime():number { return this.time; }\n\t\tpublic setTime(time:number):void { this.time = time; }\n\t\tprivate time:number;\n\n\t\tprivate timerId:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Func extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(func:Function = null, args:any[] = [], eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.func = func;\n\t\t\tthis.args = args;\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t\tthis.func(...this.args);\n\t\t\t} else {\n\t\t\t\tthis.func(...this.args);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.func = null;\n\t\t\tthis.args = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t\tthis.eventType = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getFunction():Function { return this.func; }\n\t\tpublic setFunction(func:Function):void { this.func = func; }\n\t\tprivate func:Function;\n\n\t\tpublic getArguments():any[] { return this.args; }\n\t\tpublic setArguments(args:any[]):void { this.args = args; }\n\t\tprivate args:any[];\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Listen extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.eventType = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Easing = alm.math.Easing;\n\timport EasingFunction = alm.math.EasingFunction;\n\timport Time = alm.util.Time;\n\n\texport type TweenCallbackFunction = (progressTime:number, progressValue:number) => void;\n\n\texport class Tween extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:Object, to:Object, from:Object = null, duration:number = 1000, easing:EasingFunction = Easing.linear, onStart:TweenCallbackFunction = null, onUpdate:TweenCallbackFunction = null, onComplete:TweenCallbackFunction = null) {\n\t\t\tsuper();\n\t\t\tthis.tweenTarget = target;\n\t\t\tthis.to = to;\n\t\t\tthis.from = from;\n\t\t\tthis.duration = duration;\n\t\t\tthis.easing = easing;\n\t\t\tthis.onStart = onStart;\n\t\t\tthis.onUpdate = onUpdate;\n\t\t\tthis.onComplete = onComplete;\n\t\t\tthis.progressTime = 0;\n\t\t\tthis.progressValue = 0;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.internalFrom = {};\n\t\t\tlet value0:number;\n\t\t\tlet value1:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue1 = this.to[key];\n\t\t\t\tif (this.from && this.from[key] != null) {\n\t\t\t\t\tthis.internalFrom[key] = this.from[key];\n\t\t\t\t} else {\n\t\t\t\t\tthis.internalFrom[key] = this.tweenTarget[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.duration > 0) {\n\t\t\t\tthis.timerId = window.setInterval(this.intervalHandler, Tween.updateInterval);\n\t\t\t\tthis.startTime = Time.now();\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t\tthis.apply(1);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\n\t\t\tthis.tweenTarget = null;\n\t\t\tthis.to = null;\n\t\t\tthis.from = null;\n\t\t\tthis.easing = null;\n\t\t\tthis.onStart = null;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.onComplete = null;\n\t\t\tthis.internalFrom = null;\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearInterval(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate apply(timeRatio:number):void {\n\t\t\tthis.progressTime = timeRatio;\n\t\t\tthis.progressValue = this.easing(this.progressTime);\n\t\t\tlet value0:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue0 = this.internalFrom[key];\n\t\t\t\tthis.tweenTarget[key] = value0 + (this.to[key] - value0) * this.progressValue;\n\t\t\t}\n\t\t}\n\n\t\tprivate intervalHandler = ():void => {\n\t\t\tconst elapsedTime:number = Time.now() - this.startTime;\n\t\t\tif (elapsedTime < this.duration) {\n\t\t\t\tthis.apply(elapsedTime / this.duration);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(1);\n\t\t\t\tthis.cancel();\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTarget():Object { return this.tweenTarget; }\n\t\tpublic setTarget(target:Object):void { this.tweenTarget = target; }\n\t\tprivate tweenTarget:Object;\n\n\t\tpublic getDuration():number { return this.duration; }\n\t\tpublic setDuration(duration:number):void { this.duration = duration; }\n\t\tprivate duration:number;\n\n\t\tpublic getTo():Object { return this.to; }\n\t\tpublic setTo(to:Object):void { this.to = to; }\n\t\tprivate to:Object;\n\n\t\tpublic getFrom():Object { return this.from; }\n\t\tpublic setFrom(from:Object):void { this.from = from; }\n\t\tprivate from:Object;\n\n\t\tpublic getEasing():EasingFunction { return this.easing; }\n\t\tpublic setEasing(easing:EasingFunction):void { this.easing = easing; }\n\t\tprivate easing:EasingFunction;\n\n\t\tpublic getOnStart():TweenCallbackFunction { return this.onStart; }\n\t\tpublic setOnStart(func:TweenCallbackFunction):void { this.onStart = func; }\n\t\tprivate onStart:TweenCallbackFunction;\n\n\t\tpublic getOnUpdate():TweenCallbackFunction { return this.onUpdate; }\n\t\tpublic setOnUpdate(func:TweenCallbackFunction):void { this.onUpdate = func; }\n\t\tprivate onUpdate:TweenCallbackFunction;\n\n\t\tpublic getOnComplete():TweenCallbackFunction { return this.onComplete; }\n\t\tpublic setOnComplete(func:TweenCallbackFunction):void { this.onComplete = func; }\n\t\tprivate onComplete:TweenCallbackFunction;\n\n\t\tpublic getProgressTime():number { return this.progressTime; }\n\t\tprivate progressTime:number;\n\n\t\tpublic getProgressValue():number { return this.progressValue; }\n\t\tprivate progressValue:number;\n\n\t\tprivate startTime:number;\n\t\tprivate timerId:number;\n\t\tprivate internalFrom:Object;\n\n\t\tpublic getUpdateInterval():number { return Tween.updateInterval; }\n\t\tpublic setUpdateInterval(milliseconds:number):void { Tween.updateInterval = milliseconds; }\n\t\tprivate static updateInterval:number = 1000 / 60;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Serial extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.currentCommand = null;\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.insertCommandAt(this.position + 1, ...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCommand = this.getCommandByIndex(this.position);\n\t\t\tthis.currentCommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand.execute();\n\t\t}\n\n\t\tprivate completeHandler = (event:Event<Command>):void => {\n\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand = null;\n\t\t\tif (++this.position >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.position = 0;\n\t\t\tif (this.getLength() > 0) {\n\t\t\t\tthis.next();\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.destroy();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getPosition():number { return this.position; }\n\t\tprivate position:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:geom.Rectangle, bounds:geom.Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):geom.Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new geom.Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new geom.Rectangle(tx, ty, tw, th);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Obj {\n\n\t\tpublic static each(target:any, func:(key:string, value:any) => void):void {\n\t\t\tif (target == null) return;\n\t\t\tObject.keys(target).forEach((key:string):void => {\n\t\t\t\tfunc(key, target[key]);\n\t\t\t});\n\t\t}\n\n\t\tpublic static get(target:any, key:string, defaultValue:any):any {\n\t\t\tconst value:any = target[key];\n\t\t\treturn typeof value !== 'undefined' ? value : defaultValue;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 等差数列を生成する\n\t\t * @param {number} count 要素数\n\t\t * @param {number} init 初期値\n\t\t * @param {number} step 等差\n\t\t * @returns {number[]} 出力配列\n\t\t */\n\t\tpublic static sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\t\tconst result:number[] = new Array(count);\n\t\t\tlet v:number = init;\n\t\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\t\tresult[i] = v;\n\t\t\t\tv += step;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * リスト内の要素を入れ替える\n\t\t * @param list 入出力配列\n\t\t * @param index1 インデックス1\n\t\t * @param index2 インデックス2\n\t\t */\n\t\tpublic static swap<T>(list:T[], index1:number, index2:number):void {\n\t\t\tconst tmp = list[index1];\n\t\t\tlist[index1] = list[index2];\n\t\t\tlist[index2] = tmp;\n\t\t}\n\n\t\t/**\n\t\t * リストをシャッフルする\n\t\t * by Fisher–Yatesアルゴリズム\n\t\t * @param list 入出力配列\n\t\t */\n\t\tpublic static shuffle<T>(list:T[]):void {\n\t\t\tfor(let i = list.length - 1; i > 0; --i) {\n\t\t\t\tArr.swap(list, i, Math.floor(Math.random() * (i + 1)));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * リストを数値としてソートする\n\t\t * @param list 入出力配列\n\t\t * @param asc trueで昇順, falseで降順\n\t\t */\n\t\tpublic static sort(list:number[], asc:boolean = true):void {\n\t\t\tlist.sort(asc ? function(a, b) { return a - b; } : function(a, b) { return b - a; });\n\t\t}\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\timport EasingFunction = alm.math.EasingFunction;\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲から範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {boolean} clamp trueの場合は入力値を[srcA, srcB]の範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcA:number, srcB:number, dstA:number, dstB:number, clamp:boolean = true):number {\n\t\t\tif (srcA === srcB) return dstA;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcA < srcB) {\n\t\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcA) * (dstB - dstA) / (srcB - srcA) + dstA;\n\t\t}\n\n\t\t/**\n\t\t * 値を特定の範囲からイージング関数を経由して特定の範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {EasingFunction} easing イージング関関数\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static ease(value:number, srcA:number, srcB:number, dstA:number, dstB:number, easing:EasingFunction):number {\n\t\t\tif (srcA === srcB) return dstA;\n\t\t\tif (srcA < srcB) {\n\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\treturn easing((value - srcA) / (srcB - srcA)) * (dstB - dstA) + dstA;\n\t\t\t} else {\n\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\treturn easing((value - srcB) / (srcA - srcB)) * (dstB - dstA) + dstA;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 乱数（小数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 乱数（整数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomInt(min:number = 0, max:number = 1):number {\n\t\t\treturn Math.floor(Num.random(min, max));\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 富豪を保ったまま、値の絶対値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} minAbs 最小値\n\t\t * @param {number} maxAbs 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clampAbs(value:number, minAbs:number, maxAbs:number):number {\n\t\t\tif (value > 0) {\n\t\t\t\treturn value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value);\n\t\t\t} else {\n\t\t\t\tvalue = Math.abs(value);\n\t\t\t\treturn -(value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static PI2:number = Math.PI * 2;\n\t\tpublic static PI3:number = Math.PI * 3;\n\t\tpublic static PI4:number = Math.PI * 4;\n\t\tpublic static PI5:number = Math.PI * 5;\n\t\tpublic static PI6:number = Math.PI * 6;\n\t\tpublic static PI_2:number = Math.PI / 2;\n\t\tpublic static PI_3:number = Math.PI / 3;\n\t\tpublic static PI_4:number = Math.PI / 4;\n\t\tpublic static PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = ('0' + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != '0') {\n\t\t\t\treturn h + ':' + ('0' + m).substr(-2, 2) + ':' + s;\n\t\t\t} else {\n\t\t\t\treturn m + ':' + s;\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Cmd {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\n\t\tpublic static single(execute:boolean, command:cmd.Command):cmd.Command {\n\t\t\tif (execute && command) command.execute();\n\t\t\treturn command;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Dom {\n\n\t\tpublic static instantiate(templateId:string):HTMLElement {\n\t\t\tconst element = <HTMLElement>document.getElementById(templateId).cloneNode(true);\n\t\t\telement.removeAttribute('id');\n\t\t\treturn element;\n\t\t}\n\n\t\tpublic static addPointerDownListener(target:HTMLElement, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.addEventListener('pointerdown', listener);\n\t\t}\n\n\t\tpublic static addPointerUpListener(target:HTMLElement, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.addEventListener('pointerup', listener);\n\t\t}\n\t\tpublic static removePointerEventListener(target:HTMLElement, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.removeEventListener('pointerdown', listener);\n\t\t}\n\n\t\tpublic static removePointerUpListener(target:HTMLElement, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.removeEventListener('pointerup', listener);\n\t\t}\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.resource {\n\n\texport class ObjectPool<T> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * ObjectPool class.\n\t\t * @class\n\t\t * @param {function} onRequireItem This callback function is called when new item is required.\n\t\t * @param {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @param {number} initCount Init item count.\n\t\t * @param {number} growthCount Growth item count.\n\t\t *\n\t\t * @property {number} initCount Init item count.\n\t\t * @property {number} growthCount Growth item count.\n\t\t * @property {function} onRequireItem This callback function is called when new item is required.\n\t\t * @property {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @property {Array} items Array of items.\n\t\t * @property {number} index Current index of items.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tconstructor(onRequireItem:() => T, onDestroyItem:(item:T) => void, initCount:number = 100, growthCount:number = 50) {\n\t\t\tthis.onRequireItem = onRequireItem;\n\t\t\tthis.onDestroyItem = onDestroyItem;\n\t\t\tthis.growthCount = growthCount;\n\t\t\tthis.items = new Array(initCount);\n\t\t\tfor (let i = 0; i < initCount; ++i) {\n\t\t\t\tthis.items[i] = this.onRequireItem();\n\t\t\t}\n\t\t\tthis.index = initCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * Get item from object pool.\n\t\t * @return {T} Item\n\t\t */\n\t\tpublic getItem():T {\n\t\t\tif (this.index > 0) {\n\t\t\t\treturn this.items[--this.index];\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.growthCount; ++i) {\n\t\t\t\tthis.items.unshift(this.onRequireItem());\n\t\t\t}\n\t\t\tthis.index = this.growthCount;\n\t\t\treturn this.getItem();\n\t\t}\n\n\t\t/**\n\t\t * Return item to object pool.\n\t\t * @param {T} Item.\n\t\t * @return void\n\t\t */\n\t\tpublic returnItem(item:T):void {\n\t\t\tthis.items[this.index++] = item;\n\t\t}\n\n\t\t/**\n\t\t * Optimize object pool size.\n\t\t * @return void\n\t\t */\n\t\tpublic reduce():void {\n\t\t\tconst n = this.index;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items.shift());\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t}\n\n\t\t/**\n\t\t * Destroy object pool.\n\t\t * @return void\n\t\t */\n\t\tpublic destroy():void {\n\t\t\tconst n = this.items.length;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items[i]);\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t\tthis.items = null;\n\t\t\tthis.onRequireItem = null;\n\t\t\tthis.onDestroyItem = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate items:T[];\n\t\tprivate index:number;\n\t\tprivate growthCount:number;\n\n\t\tpublic onRequireItem:() => T;\n\t\tpublic onDestroyItem:(item:T) => void;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class Lottery<T = any> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(values:T[] = null) {\n\t\t\tif (values) {\n\t\t\t\tthis.set(values);\n\t\t\t} else {\n\t\t\t\tthis.initValues = this.restValues = null;\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t\tthis.onCheck = null;\n\t\t\tthis.isAutoResetEnabled = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(values:T[]):void {\n\t\t\tthis.initValues = values.concat();\n\t\t\tthis.reset();\n\t\t}\n\n\t\tpublic get():T {\n\t\t\tif (this.isEmpty && this.isAutoResetEnabled) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tconst index:number = Math.floor(Math.random() * this.restCount);\n\t\t\tconst value:T = this.restValues[index];\n\t\t\tlet result:boolean = true;\n\t\t\tif (this.onCheck) result = this.onCheck(value);\n\t\t\tif (result) {\n\t\t\t\tthis.restValues.splice(index, 1);\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic add(value:T, reset:boolean = false):void {\n\t\t\tthis.initValues.push(value);\n\t\t\tthis.restValues.push(value);\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\tif (reset) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.restValues = this.initValues.concat();\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t}\n\n\t\tpublic getRestCount():number {\n\t\t\treturn this.restCount;\n\t\t}\n\n\t\tpublic getIsEmply():boolean {\n\t\t\treturn this.isEmpty;\n\t\t}\n\n\t\tpublic getIsAutoResetEnabled():boolean {\n\t\t\treturn this.isAutoResetEnabled;\n\t\t}\n\n\t\tpublic setIsAutoResetEnabled(enabled:boolean):void {\n\t\t\tthis.isAutoResetEnabled = enabled;\n\t\t}\n\n\t\tpublic static createIndices(count:number):Lottery<number> {\n\t\t\tconst values:number[] = new Array(count);\n\t\t\tfor (let i:number = 0; i < count; ++i) values[i] = i;\n\t\t\treturn new Lottery<number>(values);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onCheck:(value:T) => boolean;\n\n\t\tprivate isAutoResetEnabled:boolean;\n\t\tprivate isEmpty:boolean;\n\t\tprivate restCount:number;\n\t\tprivate restValues:T[];\n\t\tprivate initValues:T[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\timport Hash = alm.util.Hash;\n\n\texport class Switcher<T = string> extends alm.event.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.isLoopEnabled = true;\n\n\t\t\tthis.itemCount = 0;\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.onChange = null;\n\t\t\tthis.onPrev = null;\n\t\t\tthis.onNext = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic setupById(ids:T[]):void {\n\t\t\tthis.itemCount = ids.length;\n\t\t\tthis.itemIds = ids;\n\n\t\t\tthis.itemIndexById = {};\n\t\t\tfor (let i:number = 0; i < this.itemCount; ++i) {\n\t\t\t\tthis.itemIndexById[this.itemIds[i] as unknown as string] = i;\n\t\t\t}\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tpublic setupByCount(itemCount:number):void {\n\t\t\tthis.itemCount = itemCount;\n\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tprivate setup():void {\n\t\t\tthis.currentItemIndex = -1;\n\t\t\tthis.currentItemId = null;\n\n\t\t\tthis.oldItemIndex = -1;\n\t\t\tthis.oldItemId = null;\n\t\t}\n\n\t\tpublic gotoByIndex(itemIndex:number, useTransition:boolean = true):boolean {\n\t\t\tif (itemIndex < 0 || itemIndex >= this.itemCount) itemIndex = -1;\n\t\t\tif (itemIndex == this.currentItemIndex) return false;\n\n\t\t\tthis.oldItemIndex = this.currentItemIndex;\n\t\t\tthis.currentItemIndex = itemIndex;\n\n\t\t\tif (this.itemIds) {\n\t\t\t\tthis.oldItemId = this.oldItemIndex != -1 ? this.itemIds[this.oldItemIndex] : null;\n\t\t\t\tthis.currentItemId = this.currentItemIndex != -1 ? this.itemIds[this.currentItemIndex] : null;\n\t\t\t}\n\n\t\t\tthis.dispatchPagerEvent(SwitcherEvent.CHANGE, this.onChange, useTransition);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic gotoById(itemId:string, useTransition:boolean = true):boolean {\n\t\t\tconst itemIndex:number = this.itemIndexById.hasOwnProperty(itemId) ? this.itemIndexById[itemId] : -1;\n\t\t\treturn this.gotoByIndex(itemIndex, useTransition);\n\t\t}\n\n\t\tpublic prev(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.getPrevItemIndex();\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.PREV, this.onPrev, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic next(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.getNextItemIndex();\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.NEXT, this.onNext, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic getPrevItemIndex():number {\n\t\t\tlet itemIndex = this.currentItemIndex - 1;\n\t\t\tif (this.isLoopEnabled && itemIndex < 0) itemIndex = this.itemCount - 1;\n\t\t\treturn itemIndex;\n\t\t}\n\n\t\tpublic getPrevItemId():T {\n\t\t\treturn this.itemIds[this.getPrevItemIndex()];\n\t\t}\n\n\t\tpublic getNextItemIndex():number {\n\t\t\tlet itemIndex = this.currentItemIndex + 1;\n\t\t\tif (this.isLoopEnabled && itemIndex >= this.itemCount) itemIndex = 0;\n\t\t\treturn itemIndex;\n\t\t}\n\n\t\tpublic getNextItemId():T {\n\t\t\treturn this.itemIds[this.getNextItemIndex()];\n\t\t}\n\n\t\tprivate dispatchPagerEvent(eventType:string, callback:(event:SwitcherEvent<T>) => void, useTransition:boolean):void {\n\t\t\tconst event:SwitcherEvent<T> = new SwitcherEvent<T>(eventType, this, this.currentItemIndex, this.oldItemIndex, this.currentItemId, this.oldItemId, useTransition);\n\t\t\tif (callback) {\n\t\t\t\tcallback(event);\n\t\t\t}\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsLoopEnabled():boolean { return this.isLoopEnabled; }\n\t\tpublic setIsLoopEnabled(value:boolean):void { this.isLoopEnabled = value; }\n\t\tprivate isLoopEnabled:boolean;\n\n\t\tpublic getItemCount():number { return this.itemCount; }\n\t\tprivate itemCount:number;\n\n\t\tpublic getCurrentItemIndex():number { return this.currentItemIndex; }\n\t\tprivate currentItemIndex:number;\n\n\t\tpublic getOldItemIndex():number { return this.oldItemIndex; }\n\t\tprivate oldItemIndex:number;\n\n\t\tpublic getCurrentItemId():T { return this.currentItemId; }\n\t\tprivate currentItemId:T;\n\n\t\tpublic getOldItemId():T { return this.oldItemId; }\n\t\tprivate oldItemId:T;\n\n\t\tpublic getItemIds():T[] { return this.itemIds; }\n\t\tprivate itemIds:T[];\n\n\t\tprivate itemIndexById:Hash<number>;\n\n\t\tpublic onChange:(event:SwitcherEvent<T>) => void;\n\t\tpublic onPrev:(event:SwitcherEvent<T>) => void;\n\t\tpublic onNext:(event:SwitcherEvent<T>) => void;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class SwitcherEvent<T = string> extends alm.event.Event<Switcher<T>> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static PREV:string = 'prev';\n\t\tpublic static NEXT:string = 'next';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Switcher<T>, currentItemIndex:number, oldItemIndex:number, currentItemId:T, oldItemId:T, useTransition:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.currentItemIndex = currentItemIndex;\n\t\t\tthis.oldItemIndex = oldItemIndex;\n\t\t\tthis.currentItemId = currentItemId;\n\t\t\tthis.oldItemId = oldItemId;\n\t\t\tthis.useTransition = useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SwitcherEvent<T> {\n\t\t\treturn new SwitcherEvent<T>(this.type, this.target, this.currentItemIndex, this.oldItemIndex, this.currentItemId, this.oldItemId, this.useTransition);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SwitcherEvent] type = ' + this.type + ', ' + this.oldItemIndex + ' -> ' + this.currentItemIndex + ', transition = ' + this.useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentItemIndex:number;\n\t\tpublic readonly oldItemIndex:number;\n\t\tpublic readonly currentItemId:T;\n\t\tpublic readonly oldItemId:T;\n\t\tpublic readonly useTransition:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class LoHi extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(lowThreshold:number, highThreshold:number, initValue:number = 0) {\n\t\t\tsuper();\n\n\t\t\tthis.lowThreshold = lowThreshold;\n\t\t\tthis.highThreshold = highThreshold;\n\t\t\tthis.isHigh = false;\n\t\t\tthis._set(initValue, false);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * 新しい入力値を設定する\n\t\t * @param {number} value 入力値\n\t\t * @returns {boolean} 結果が更新されればtrue\n\t\t */\n\t\tpublic set(value:number):boolean {\n\t\t\treturn this._set(value, true);\n\t\t}\n\n\t\tpublic getIsHigh():boolean {\n\t\t\treturn this.isHigh;\n\t\t}\n\n\t\tpublic getValue():number {\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic getLowThreshold():number {\n\t\t\treturn this.lowThreshold;\n\t\t}\n\n\t\tpublic getHighThreshold():number {\n\t\t\treturn this.highThreshold;\n\t\t}\n\n\t\tpublic setLowThreshold(threshold:number):void {\n\t\t\tthis.lowThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tpublic setHighThreshold(threshold:number):void {\n\t\t\tthis.highThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tprivate _set(value:number, dispatchEvent:boolean):boolean {\n\t\t\tthis.value = value;\n\t\t\tif (this.isHigh && this.value < this.lowThreshold) {\n\t\t\t\tthis.isHigh = false;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.LOW, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (!this.isHigh && this.value > this.highThreshold) {\n\t\t\t\tthis.isHigh = true;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.HIGH, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate lowThreshold:number;\n\t\tprivate highThreshold:number;\n\t\tprivate value:number;\n\t\tprivate isHigh:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class LoHiEvent extends alm.event.Event<LoHi> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static LOW:string = 'low';\n\t\tpublic static HIGH:string = 'high';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:LoHi, isHigh:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.isHigh = isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():LoHiEvent {\n\t\t\treturn new LoHiEvent(this.type, this.target, this.isHigh);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[LoHiEvent] type = ' + this.type + ', isHigh = ' + this.isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly isHigh:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class EasingValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, easing:number = 0.1, tolerance:number = 0) {\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.easing = easing;\n\t\t\tthis.tolerance = tolerance;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tconst d:number = this.target - this.value;\n\t\t\t\tif (this.tolerance > 0 && Math.abs(d) <= this.tolerance) {\n\t\t\t\t\tthis.value = this.target;\n\t\t\t\t} else {\n\t\t\t\t\tthis.value += d * this.easing;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():EasingValue {\n\t\t\tconst v:EasingValue = new EasingValue(this.value, this.easing, this.tolerance);\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic easing:number;\n\t\tpublic tolerance:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SpringValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, spring:number = 0.1, friction:number = 0.9) {\n\t\t\tthis.acceleration = 0;\n\t\t\tthis.velocity = 0;\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.spring = spring;\n\t\t\tthis.friction = friction;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tthis.acceleration = (this.target - this.value) * this.spring;\n\t\t\t\tthis.velocity += this.acceleration;\n\t\t\t\tthis.velocity *= this.friction;\n\t\t\t\tthis.value += this.velocity;\n\t\t\t} else {\n\t\t\t\tthis.acceleration = 0;\n\t\t\t\tthis.velocity = 0;\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():SpringValue {\n\t\t\tconst v:SpringValue = new SpringValue(this.value, this.spring, this.friction);\n\t\t\tv.acceleration = this.acceleration;\n\t\t\tv.velocity = this.velocity;\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic velocity:number;\n\t\tpublic acceleration:number;\n\t\tpublic spring:number;\n\t\tpublic friction:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tthis._value = (this._value * this._count + n) / ++this._count;\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _count:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleMovingAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxCount:number) {\n\t\t\tthis.maxCount = this._maxCount = maxCount;\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._count = this._maxCount;\n\n\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\tthis._value -= oldest;\n\n\t\t\t\tconst latest:number = n / this._maxCount;\n\t\t\t\tthis._value += latest;\n\n\t\t\t\tthis.values.push(latest);\n\n\t\t\t} else {\n\t\t\t\tthis._value *= (this._count - 1);\n\t\t\t\tthis._value += n;\n\t\t\t\tthis._value /= this._count;\n\n\t\t\t\tthis.values.push(n / this._maxCount);\n\t\t\t}\n\n\t\t\t/*\n\t\t\tthis._values.push(n);\n\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._values.shift();\n\t\t\t\tthis._count = this._maxCount;\n\t\t\t}\n\n\t\t\tthis._value = 0;\n\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\tthis._value += this._values[i];\n\t\t\t}\n\t\t\tthis._value /= this._count;\n\t\t\t*/\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class MaxValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxLatestCount:number = 0) {\n\t\t\tthis.maxLatestCount = this._maxLatestCount = maxLatestCount;\n\t\t\tthis.value = this._value = -Number.MAX_VALUE;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (this._maxLatestCount > 0) {\n\t\t\t\tif (++this._count > this._maxLatestCount) {\n\t\t\t\t\tthis._count = this._maxLatestCount;\n\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\t\tif (this._value > oldest) {\n\t\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._value = -Number.MAX_VALUE;\n\t\t\t\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\t\t\t\tconst v:number = this.values[i];\n\t\t\t\t\t\t\tif (this._value < v) {\n\t\t\t\t\t\t\t\tthis._value = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++this._count;\n\t\t\t\tif (this._value < n) {\n\t\t\t\t\tthis._value = n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxLatestCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxLatestCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class Circular {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class AnimationFrameTicker extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * requestAnimationFrameベースでのFPSタイマー\n\t\t * @param {number} frameRate 目標フレームレート（0の場合はフレームレートを制限しない）\n\t\t * @param {number} tolerance 許容誤差（frameRateに対する割合）\n\t\t */\n\t\tconstructor(frameRate:number = 0, tolerance:number = 0.1) {\n\t\t\tsuper();\n\n\t\t\tthis.targetFrameRate = frameRate;\n\t\t\tthis.interval = 1000 / this.targetFrameRate;\n\n\t\t\tthis.tolerance = tolerance;\n\t\t\tthis.toleranceDuration = this.interval * this.tolerance;\n\n\t\t\tthis.isRunning = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.frameStartTime = Time.now();\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\twindow.cancelAnimationFrame(this.requestId);\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getTargetFrameRate():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tprivate setInterval(callback:Function):number {\n\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t}\n\n\t\tprivate clearInterval(requestId:number):void {\n\t\t\twindow.clearInterval(requestId);\n\t\t}\n\n\t\tprivate updateHandler = ():void => {\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t\tif (this.targetFrameRate > 0) {\n\t\t\t\tconst currentTime:number = Time.now();\n\t\t\t\tconst elapsedTime:number = currentTime - this.frameStartTime;\n\t\t\t\tif (elapsedTime >= this.interval - this.toleranceDuration) {\n\t\t\t\t\t//trace('[AnimationFrameTicker] frameRate : ' + (1000 / elapsedTime));\n\t\t\t\t\tthis.frameStartTime = currentTime;\n\t\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate requestId:number;\n\n\t\tprivate targetFrameRate:number;\n\t\tprivate tolerance:number;\n\t\tprivate toleranceDuration:number;\n\t\tprivate interval:number;\n\t\tprivate frameStartTime:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class AnimationFrameTickerEvent extends Event<AnimationFrameTicker> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:AnimationFrameTicker) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():AnimationFrameTickerEvent {\n\t\t\treturn new AnimationFrameTickerEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[AnimationFrameTickerEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class Timer extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = Time.now();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = Time.now() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = Time.now();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return Time.now() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class TimerEvent extends Event<Timer> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Timer, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.type, this.target, this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[TimerEvent] type = ' + this.type + ', elapsedCount = ' + this.elapsedCount + ', repeatCount=' + this.repeatCount + ', restCount=' + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly elapsedCount:number;\n\t\tpublic readonly repeatCount:number;\n\t\tpublic readonly restCount:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\texport type CompleteFunction = (content:any, info?:any) => void;\n\texport type ErrorFunction = (info?:any) => void;\n\n\texport class FileLoader extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(totalThreadCount:number = 3) {\n\t\t\tsuper();\n\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.currentThreadCount = 0;\n\t\t\tthis.totalThreadCount = totalThreadCount;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.handlersByType = {};\n\n\t\t\ttrace('[FileLoader] totalThreadCount : ' + this.totalThreadCount);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic require(url:string, type:string, id:string = ''):string {\n\t\t\treturn this.addQuery(type, url, {}, id);\n\t\t}\n\n\t\tprivate addQuery(type:string, url:string, param:any, id:string = ''):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:FileQuery = new FileQuery();\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\n\t\t\tif (id != '') {\n\t\t\t\tquery.id = id;\n\t\t\t} else {\n\t\t\t\tquery.id = String(FileLoader.id);\n\t\t\t\t++FileLoader.id;\n\t\t\t}\n\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tconst progress = this.currentCount / this.totalCount;\n\t\t\tif (this.currentCount == 0) {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.START, this, progress, this.currentCount, this.totalCount));\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.PROGRESS, this, progress, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\twhile (this.currentThreadCount < this.totalThreadCount) {\n\t\t\t\tif (this.loadingQueryIndex + 1 < this.totalCount) {\n\t\t\t\t\t// add thread\n\t\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\t\tquery.isLoading = true;\n\t\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\t\tif (handler) {\n\t\t\t\t\t\thandler.load(query.url, (content:any, info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content, info);\n\t\t\t\t\t\t},(info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadErrorHandler(query, info);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\t}\n\t\t\t\t\t// continue loop\n\n\t\t\t\t} else {\n\t\t\t\t\t// all finished\n\t\t\t\t\tthis.isLoading_ = false;\n\t\t\t\t\tthis.loadingQueries = [];\n\t\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.COMPLETE, this, progress, this.currentCount, this.totalCount));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\tif (handler) {\n\t\t\t\t\thandler.load(query.url, (content:any):void => {\n\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content);\n\t\t\t\t\t},(message:string = ''):void => {\n\t\t\t\t\t\tthis.fileLoadErrorHandler(query, message);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\tthis.next();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.dispatchEvent(new FileLoaderEvent(FileLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tpublic addHandler(handler:IFileHandler):void {\n\t\t\tthis.handlersByType[handler.getType()] = handler;\n\t\t}\n\n\t\tprivate fileLoadCompleteHandler = (query:FileQuery, content:any, info:object = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tquery.content = content;\n\t\t\tif (query.param.onLoad) {\n\t\t\t\tquery.param.onLoad(content, info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderSuccessEvent(FileLoaderSuccessEvent.SUCCESS, this, content, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tprivate fileLoadErrorHandler = (query:FileQuery, info:any = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tif (query.param.onError) {\n\t\t\t\tquery.param.onError(info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderErrorEvent(FileLoaderErrorEvent.ERROR, this, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tpublic getQueryByQueryId(queryId:string):FileQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\t\tpublic getQueryByUrl(url:string):FileQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\t\tpublic isLoading():boolean {\n\t\t\treturn this.isLoading_;\n\t\t}\n\n\t\tpublic getCurrentCount():number {\n\t\t\treturn this.currentCount;\n\t\t}\n\n\t\tpublic getTotalCount():number {\n\t\t\treturn this.totalCount;\n\t\t}\n\n\t\tpublic getContentByUrl<T = any>(url:string):T {\n\t\t\treturn this.queriesByUrl[url].content;\n\t\t}\n\n\t\tpublic getContentByQueryId<T = any>(textureId:string):T {\n\t\t\treturn this.queriesByQueryId[textureId].content;\n\t\t}\n\n\t\tpublic getCurrentThreadCount():number {\n\t\t\treturn this.currentThreadCount;\n\t\t}\n\n\t\tpublic getTotalThreadCount():number {\n\t\t\treturn this.totalThreadCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isLoading_:boolean;\n\n\t\tprivate currentCount:number;\n\t\tprivate totalCount:number;\n\n\t\tprivate currentThreadCount:number;\n\t\tprivate totalThreadCount:number;\n\n\t\tprivate loadingQueries:FileQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:util.Hash<FileQuery>;\n\t\tprivate queriesByUrl:util.Hash<FileQuery>;\n\n\t\tprivate handlersByType:util.Hash<IFileHandler>;\n\n\t\tprivate static id:number = 0;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderProgressEvent extends alm.event.Event<FileLoader> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic START:string = 'start';\n\t\tstatic PROGRESS:string = 'progress';\n\t\tstatic COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:FileLoader, progress:number = 0, loadedCount:number = 0, totalCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderProgressEvent {\n\t\t\treturn new FileLoaderProgressEvent(this.type, this.target, this.progress, this.loadedCount, this.totalCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderProgressEvent] type = ' + this.type + ', progress = ' + this.progress + ', loadedCount = ' + this.loadedCount + ', totalCount = ' + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly progress:number;\n\t\tpublic readonly loadedCount:number;\n\t\tpublic readonly totalCount:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderSuccessEvent extends alm.event.Event<FileLoader> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SUCCESS:string = 'success';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:FileLoader, content:any, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.content = content;\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderSuccessEvent {\n\t\t\treturn new FileLoaderSuccessEvent(this.type, this.target, this.content, this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderSuccessEvent] type = ' + this.type + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly content:any;\n\t\tpublic readonly info:any;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderErrorEvent extends alm.event.Event<FileLoader> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic ERROR:string = 'error';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:FileLoader, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderErrorEvent {\n\t\t\treturn new FileLoaderErrorEvent(this.type, this.target, this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderErrorEvent] type = ' + this.type + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly info:any;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileQuery {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}\n","/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Cmd = alm.util.Cmd;\n\timport Easing = alm.math.Easing;\n\n\texport class AudioClip {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(context:AudioContext, destination:AudioNode, fileName:string = '', masterVolume:number = 1) {\n\t\t\t//this.context = new AudioContext();\n\t\t\tthis.context = context;\n\t\t\tthis.masterVolume = masterVolume;\n\n\t\t\tthis.buffer = null;\n\t\t\tthis.sourceNode = null;\n\t\t\tthis.isAvailable = false;\n\n\t\t\tthis.duration = 0;\n\n\t\t\tthis.gainNode = this.context.createGain();\n\t\t\tthis.gainNode.connect(destination);\n\n\t\t\tthis.volume = 1;\n\t\t\tthis.applyVolume();\n\n\t\t\tif (fileName != '') {\n\t\t\t\tthis.load(fileName);\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic load(url:string):void {\n\t\t\tconst request:XMLHttpRequest = new XMLHttpRequest();\n\t\t\trequest.responseType = 'arraybuffer';\n\t\t\trequest.onreadystatechange = ():void => {\n\t\t\t\tif (request.readyState == 4) {\n\t\t\t\t\tif (request.status == 0 || request.status == 200) {\n\t\t\t\t\t\tthis.context.decodeAudioData(request.response, (buffer:AudioBuffer):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load complete :', url);\n\t\t\t\t\t\t\tthis.isAvailable = true;\n\t\t\t\t\t\t\tthis.buffer = buffer;\n\t\t\t\t\t\t\tthis.duration = this.buffer.duration;\n\t\t\t\t\t\t}, (error:Error):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load error :', error);\n\t\t\t\t\t\t\ttrace(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\trequest.open('GET', url, true);\n\t\t\trequest.send('');\n\t\t}\n\n\t\tpublic play(loop:boolean = false, overwrite:boolean = true):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tif (!overwrite && this.sourceNode) return;\n\t\t\tthis.stop();\n\t\t\tthis.sourceNode = this.context.createBufferSource();\n\t\t\tthis.sourceNode.buffer = this.buffer;\n\t\t\tthis.sourceNode.loop = loop;\n\t\t\tthis.sourceNode.connect(this.gainNode);\n\t\t\tthis.sourceNode.start(0);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (this.sourceNode) {\n\t\t\t\tthis.sourceNode.stop();\n\t\t\t\tthis.sourceNode.disconnect(this.gainNode);\n\t\t\t\tthis.sourceNode = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic getVolume():number {\n\t\t\treturn this.volume;\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tif (this.volume == volume) return;\n\t\t\tthis.volume = volume;\n\t\t\tthis.applyVolume();\n\t\t}\n\n\t\tpublic fadeTo(to:number, duration:number = 1000, onComplete:Function = null):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tthis.volumeTween = new cmd.Tween(this, { volume: to }, null, duration, Easing.linear, null, ():void => {\n\t\t\t\tthis.applyVolume();\n\t\t\t}, ():void => {\n\t\t\t\tif (onComplete) onComplete();\n\t\t\t});\n\t\t\tthis.volumeTween.execute();\n\t\t}\n\n\t\tpublic fadeIn(duration:number = 1000):void {\n\t\t\tthis.fadeTo(1, duration);\n\t\t}\n\n\t\tpublic fadeOut(duration:number = 1000, stopOnComplete:boolean = true):void {\n\t\t\tthis.fadeTo(0, duration, ():void => {\n\t\t\t\tif (stopOnComplete) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tprivate applyVolume():void {\n\t\t\tthis.gainNode.gain.value = this.volume * this.masterVolume;\n\t\t}\n\n\t\tpublic getIsAvailable():boolean {\n\t\t\treturn this.isAvailable;\n\t\t}\n\n\t\tpublic getDuration():number {\n\t\t\treturn this.duration;\n\t\t}\n\n\t\tpublic getCurrentTime():number {\n\t\t\treturn this.context.currentTime;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate volume:number;\n\t\tprivate masterVolume:number;\n\t\tprivate buffer:AudioBuffer;\n\t\tprivate duration:number;\n\t\tprivate sourceNode:AudioBufferSourceNode;\n\t\tprivate gainNode:GainNode;\n\t\tprivate volumeTween:cmd.Tween;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Hash = alm.util.Hash;\n\n\texport class AudioPlayer extends EventDispatcher {\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t\tsuper();\n\n\t\t\tconst AudioContext:any = window['AudioContext'] || window['webkitAudioContext'] || null;\n\t\t\tthis.isAvailable = AudioContext != null;\n\t\t\tif (this.isAvailable) {\n\t\t\t\tthis.context = new AudioContext();\n\t\t\t\tthis.clipsById = {};\n\n\t\t\t\tthis.masterGainNode = this.context.createGain();\n\t\t\t\tthis.masterGainNode.connect(this.context.destination);\n\t\t\t\tthis.masterVolume = 1;\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolute:number = 1, id:string = ''):boolean {\n\t\t\tif (!this.isAvailable) return false;\n\t\t\tif (id == '') id = url;\n\t\t\tif (this.clipsById[id]) return false;\n\t\t\tthis.clipsById[id] = new AudioClip(this.context, this.masterGainNode, url, masterVolute);\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic getClip(id:string):AudioClip {\n\t\t\tif (!this.isAvailable) return;\n\t\t\treturn this.clipsById[id];\n\t\t}\n\n\t\tpublic getMasterVolume():number {\n\t\t\tif (!this.isAvailable) return 0;\n\t\t\treturn this.masterVolume;\n\t\t}\n\n\t\tpublic setMasterVolume(volume:number):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tthis.masterVolume = volume;\n\t\t\tthis.masterGainNode.gain.value = this.masterVolume;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getInstance():AudioPlayer { return AudioPlayer.instance || (AudioPlayer.instance = new AudioPlayer()); }\n\t\tprivate static instance:AudioPlayer = null;\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate clipsById:Hash<AudioClip>;\n\n\t\tprivate masterGainNode:GainNode;\n\t\tprivate masterVolume:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\texport class CrossOverLoopAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(crossOverDuration:number = 1) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIndex = 0;\n\t\t\tthis.clipIds = [];\n\t\t\tthis.clip = null;\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\n\t\t\tthis.crossOverDuration = crossOverDuration;\n\t\t\tthis.timeoutId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play():void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.playCurrent();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\tthis.stopCurrent();\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.setVolume(this.volume);\n\t\t\t}\n\t\t}\n\n\t\tprivate playCurrent():void {\n\t\t\tthis.clip = this.audioPlayer.getClip(this.clipIds[this.clipIndex]);\n\t\t\tthis.clip.setVolume(this.volume);\n\t\t\tthis.clip.play(false, true);\n\n\t\t\tconst interval = (this.clip.getDuration() - this.crossOverDuration) * 1000;\n\t\t\tthis.timeoutId = window.setTimeout(this.timerHandler, interval);\n\t\t}\n\n\t\tprivate stopCurrent():void {\n\t\t\tif (this.timeoutId != -1) {\n\t\t\t\twindow.clearTimeout(this.timeoutId);\n\t\t\t\tthis.timeoutId = -1;\n\t\t\t}\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.stop();\n\t\t\t\tthis.clip = null;\n\t\t\t}\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tif (++this.clipIndex == this.clipCount) this.clipIndex = 0;\n\t\t\tthis.playCurrent();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clip:AudioClip;\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate isPlaying:boolean;\n\n\t\tprivate crossOverDuration:number;\n\t\tprivate timeoutId:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Num = alm.util.Num;\n\timport Easing = alm.math.Easing;\n\n\texport class FootstepAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(intervalMin:number = 0.12, intervalMax:number = 0.6) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.intervalMin = intervalMin;\n\t\t\tthis.intervalMax = intervalMax;\n\t\t\tthis.intervalId = -1;\n\t\t\tthis.interval = this.intervalMax;\n\n\t\t\tthis.clipIndex = -1;\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIds = [];\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play(immediately:boolean = true):void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.isWaitingForFirstStep = true;\n\t\t\tthis.startTime = immediately ? 0 : new Date().getTime();\n\t\t\tthis.intervalId = window.setInterval(this.timerHandler, 1000 / 60);\n\t\t\tthis.timerHandler();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\twindow.clearInterval(this.intervalId);\n\t\t}\n\n\t\tpublic setSpeed(speedRatio:number):void {\n\t\t\tthis.interval = Num.ease(speedRatio, 0, 1, this.intervalMax, this.intervalMin, Easing.easeOutSine);\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tconst interval = this.isWaitingForFirstStep ? (this.interval * 0.5) : this.interval;\n\t\t\tconst time = new Date().getTime();\n\t\t\tif (time - this.startTime >= interval * 1000) {\n\t\t\t\tthis.startTime = time;\n\t\t\t\tthis.isWaitingForFirstStep = false;\n\n\t\t\t\tif (++this.clipIndex >= this.clipCount) {\n\t\t\t\t\tthis.clipIndex = 0;\n\t\t\t\t}\n\t\t\t\tconst clipId = this.clipIds[this.clipIndex];\n\t\t\t\tthis.audioPlayer.getClip(clipId).setVolume(this.volume);\n\t\t\t\tthis.audioPlayer.getClip(clipId).play(false, true);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate startTime:number;\n\t\tprivate isWaitingForFirstStep:boolean;\n\n\t\tprivate intervalMin:number;\n\t\tprivate intervalMax:number;\n\t\tprivate interval:number;\n\t\tprivate intervalId:number;\n\n\t\tprivate isPlaying:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\timport Event = alm.event.Event;\n\n\texport class ViewEvent extends Event<View> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static INITIALIZE_BEGIN:string = 'initializeBegin';\n\t\tpublic static INITIALIZE_END:string = 'initializeEnd';\n\n\t\tpublic static FINALIZE_BEGIN:string = 'finalizeBegin';\n\t\tpublic static FINALIZE_END:string = 'finalizeEnd';\n\n\t\tpublic static READY_BEGIN:string = 'readyBegin';\n\t\tpublic static READY_END:string = 'readyEnd';\n\n\t\tpublic static SHOW_BEGIN:string = 'showBegin';\n\t\tpublic static SHOW_END:string = 'showEnd';\n\n\t\tpublic static HIDE_BEGIN:string = 'hideBegin';\n\t\tpublic static HIDE_END:string = 'hideEnd';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:View) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():ViewEvent {\n\t\t\treturn new ViewEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[ViewEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Logger = alm.debug.Logger;\n\n\texport abstract class View<T = any> extends EventDispatcher implements IView {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null, id:string = null) {\n\t\t\tsuper();\n\t\t\tthis.id = id != null ? id : String(View.viewCount);\n\t\t\tthis.view = view;\n\t\t\tthis.name = '';\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isFinalizing = false;\n\t\t\tthis.isFinalized = false;\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\n\t\t\tif (View.viewsById[this.id]) {\n\t\t\t\tLogger.warn('view id \\'' + this.id + '\\' is duplicate');\n\t\t\t}\n\t\t\tView.viewsById[this.id] = this;\n\t\t\t++View.viewCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.INITIALIZE_BEGIN, this));\n\n\t\t\t//if (View.viewsById[this.id] == null) {\n\t\t\t//\tView.viewsById[this.id] = this;\n\t\t\t//}\n\n\t\t\tthis.view = this.implInitialize();\n\t\t\tif (this.isInitializing) {\n\t\t\t\tthrowError(this.name || this, 'view is not assigned', !this.view);\n\t\t\t\tif (this.autoHideWithInit) {\n\t\t\t\t\tthis.hide(false);\n\t\t\t\t}\n\t\t\t\tthis.isInitializing = false;\n\t\t\t\tthis.isInitialized = true;\n\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.INITIALIZE_END, this));\n\t\t\t} else {\n\t\t\t\t// finalized while initializing\n\t\t\t\tthis.view = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReadying || this.isReadied) return;\n\t\t\tthis.isReadying = true;\n\t\t\tthrowError(this.name || this, 'ready() must be called after initialize()', !this.isInitialized);\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.READY_BEGIN, this));\n\t\t\tthis.implReady();\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = true;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.READY_END, this));\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tif (!this.isInitializing && !this.isInitialized) return;\n\t\t\tif (this.isFinalizing && this.isFinalized) return;\n\t\t\tthis.isFinalizing = true;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.FINALIZE_BEGIN, this));\n\t\t\tthis.implFinalize();\n\t\t\tthis.isFinalizing = false;\n\t\t\tthis.isFinalized = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.FINALIZE_END, this));\n\n\t\t\tdelete View.viewsById[this.id];\n\t\t\tView.viewsById[this.id] = null;\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, 'getShowCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, 'getShowCommand() is must be called after ready()', this.isReadying|| !this.isReadied);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.SHOW_BEGIN, this));\n\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.SHOW_END, this));\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, 'getHideCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, 'getHideCommand() is must be called after ready()', this.isReadying || !this.isReadied);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.HIDE_BEGIN, this));\n\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.HIDE_END, this));\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getIsInitializing():boolean {\n\t\t\treturn this.isInitializing;\n\t\t}\n\n\t\tpublic getIsInitialized():boolean {\n\t\t\treturn this.isInitialized;\n\t\t}\n\n\t\tpublic getIsReadying():boolean {\n\t\t\treturn this.isReadying;\n\t\t}\n\n\t\tpublic getIsReadied():boolean {\n\t\t\treturn this.isReadied;\n\t\t}\n\n\t\tpublic getIsShowing():boolean {\n\t\t\treturn this.isShowing;\n\t\t}\n\n\t\tpublic getIsShown():boolean {\n\t\t\treturn this.isShown;\n\t\t}\n\n\t\tpublic getIsHiding():boolean {\n\t\t\treturn this.isHiding;\n\t\t}\n\n\t\tpublic getIsHidden():boolean {\n\t\t\treturn !this.isShown;\n\t\t}\n\n\t\tpublic getIsFinalizing():boolean {\n\t\t\treturn this.isFinalizing;\n\t\t}\n\n\t\tpublic getIsFinalized():boolean {\n\t\t\treturn this.isFinalized;\n\t\t}\n\n\t\tpublic getId():string {\n\t\t\treturn this.id;\n\t\t}\n\n\t\tpublic getView():T {\n\t\t\treturn this.view;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic setName(value:string):void {\n\t\t\tthis.name = value;\n\t\t}\n\n\t\tpublic getAutoHideWithInit():boolean {\n\t\t\treturn this.autoHideWithInit;\n\t\t}\n\n\t\tpublic setAutoHideWithInit(value:boolean):void {\n\t\t\tthis.autoHideWithInit = value;\n\t\t}\n\n\n\n\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\tpublic static getViewById(id:string):View {\n\t\t\treturn View.viewsById[id];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate id:string;\n\t\tprivate view:T;\n\t\tprivate name:string;\n\t\tprivate autoHideWithInit:boolean;\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t\tprivate isInitializing:boolean;\n\t\tprivate isInitialized:boolean;\n\t\tprivate isFinalizing:boolean;\n\t\tprivate isFinalized:boolean;\n\t\tprivate isReadying:boolean;\n\t\tprivate isReadied:boolean;\n\t\tprivate isShowing:boolean;\n\t\tprivate isShown:boolean;\n\t\tprivate isHiding:boolean;\n\n\t\tprivate static viewCount:number = 0;\n\t\tprivate static viewsById:util.Hash<View> = {};\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\texport class ButtonBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:IButton, hitArea:HTMLElement = null, isHoverCursorEnabled:boolean = true, isPreventDefaultEnabled:boolean = true, isStopPropagationEnabled:boolean = true) {\n\t\t\tthis.target = target;\n\t\t\tthis.hitArea = null;\n\t\t\tthis.isHoverCursorEnabled = isHoverCursorEnabled;\n\t\t\tthis.isPreventDefaultEnabled = isPreventDefaultEnabled;\n\t\t\tthis.isStopPropagationEnabled = isStopPropagationEnabled;\n\t\t\tthis.isEnabled = true;\n\t\t\tthis.isOver = false;\n\t\t\tthis.isDown = false;\n\t\t\tthis.isOverInternal = false;\n\t\t\tthis.isDownInternal = false;\n\t\t\tthis.defaultMouseCursor = '';\n\n\t\t\tthis.setHitArea(hitArea);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic over(useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isOver) return;\n\t\t\t\tthis.isOver = true;\n\t\t\t\tthis.target.implButtonOver(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic out(useTransition:boolean = true):void {\n\t\t\tthis._out(true, useTransition);\n\t\t}\n\n\t\tprivate _out(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isOver) return;\n\t\t\t\tthis.isOver = false;\n\t\t\t\tthis.target.implButtonOut(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic down(useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isDown) return;\n\t\t\t\tthis.isDown = true;\n\t\t\t\tthis.target.implButtonDown(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic up(useTransition:boolean = true):void {\n\t\t\tthis._up(true, useTransition);\n\t\t}\n\n\t\tprivate _up(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isDown) return;\n\t\t\t\tthis.isDown = false;\n\t\t\t\tthis.target.implButtonUp(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic click(useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled) {\n\t\t\t\tthis.target.implButtonClick(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tprivate on():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.addEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.addEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.addEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.addEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.addEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.addEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.addEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.addEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tprivate off():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.removeEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.removeEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.removeEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.removeEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.removeEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.removeEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tpublic getIsEnabled():boolean {\n\t\t\treturn this.isEnabled;\n\t\t}\n\n\t\tpublic setIsEnabled(value:boolean, useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled != value) {\n\t\t\t\tthis.isEnabled = value;\n\t\t\t\tif (this.isEnabled) {\n\t\t\t\t\tif (this.isOverInternal) {\n\t\t\t\t\t\tthis.over();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDownInternal) {\n\t\t\t\t\t\tthis.down();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.isOver) {\n\t\t\t\t\t\tthis._out(false);\n\t\t\t\t\t\tthis.isOverInternal = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDown) {\n\t\t\t\t\t\tthis._up(false);\n\t\t\t\t\t\tthis.isDownInternal = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.target.implButtonChangeEnabled(this.isEnabled, useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsOver():boolean {\n\t\t\treturn this.isOver;\n\t\t}\n\n\t\tpublic getIsDown():boolean {\n\t\t\treturn this.isDown;\n\t\t}\n\n\t\tpublic getHitArea():HTMLElement {\n\t\t\treturn this.hitArea;\n\t\t}\n\n\t\tpublic setHitArea(hitArea:HTMLElement):void {\n\t\t\tif (this.hitArea !== hitArea) {\n\t\t\t\tthis.off();\n\t\t\t\tthis.hitArea = hitArea;\n\t\t\t\tthis.on();\n\t\t\t}\n\t\t}\n\n\t\tpublic clearHitArea():void {\n\t\t\tthis.setHitArea(null);\n\t\t}\n\n\t\tpublic getIsPreventDefaultEnabled():boolean {\n\t\t\treturn this.isPreventDefaultEnabled;\n\t\t}\n\n\t\tpublic setIsPreventDefaultEnabled(enabled:boolean):void {\n\t\t\tthis.isPreventDefaultEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsStopPropagationEnabled():boolean {\n\t\t\treturn this.isStopPropagationEnabled;\n\t\t}\n\n\t\tpublic setIsStopPropagationEnabled(enabled:boolean):void {\n\t\t\tthis.isStopPropagationEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsHoverCursorEnabled():boolean {\n\t\t\treturn this.isHoverCursorEnabled;\n\t\t}\n\n\t\tpublic setIsHoverCursorEnabled(enabled:boolean):void {\n\t\t\tthis.isHoverCursorEnabled = enabled;\n\t\t}\n\n\t\tprivate applyMouseCursor():void {\n\t\t\tif (this.isHoverCursorEnabled) {\n\t\t\t\tif (this.isOverInternal && this.isEnabled && this.hitArea != null) {\n\t\t\t\t\tthis.defaultMouseCursor = this.hitArea.style.cursor;\n\t\t\t\t\tthis.hitArea.style.cursor = 'pointer';\n\t\t\t\t} else {\n\t\t\t\t\tthis.hitArea.style.cursor = this.defaultMouseCursor != '' ? this.defaultMouseCursor : 'auto';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// --------------------------------------------------\n\t\t// Mouse Event\n\n\t\tprivate mouseOverHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.over();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseOutHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.out();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseDownHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate mouseUpHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\t\tprivate clickHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.click();\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Touch Event\n\n\t\tprivate touchStartHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate touchEndHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t\tthis.click();\n\t\t};\n\n\t\tprivate touchCancelHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:IButton;\n\t\tprivate hitArea:HTMLElement;\n\t\tprivate isEnabled:boolean;\n\t\tprivate isOver:boolean;\n\t\tprivate isDown:boolean;\n\t\tprivate isOverInternal:boolean;\n\t\tprivate isDownInternal:boolean;\n\t\tprivate isPreventDefaultEnabled:boolean;\n\t\tprivate isStopPropagationEnabled:boolean;\n\t\tprivate isHoverCursorEnabled:boolean;\n\t\tprivate defaultMouseCursor:string;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\texport class SelectionBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:ISelection) {\n\t\t\tthis.target = target;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic select(useTransition:boolean = true):void {\n\t\t\tif (this.isSelected) return;\n\t\t\tthis.isSelected = true;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic deselect(useTransition:boolean = true):void {\n\t\t\tif (!this.isSelected) return;\n\t\t\tthis.isSelected = false;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic getIsSelected():boolean {\n\t\t\treturn this.isSelected;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:ISelection;\n\t\tprivate isSelected:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\t// Device\n\t\t\tthis.isTablet = (u.indexOf('windows') != -1 && u.indexOf('touch') != -1)\n\t\t\t\t|| u.indexOf('ipad') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') == -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('tablet') != -1)\n\t\t\t\t|| u.indexOf('kindle') != -1\n\t\t\t\t|| u.indexOf('silk') != -1\n\t\t\t\t|| u.indexOf('playbook') != -1;\n\n\t\t\tthis.isMobile = (u.indexOf('windows') != -1 && u.indexOf('phone') != -1)\n\t\t\t\t|| u.indexOf('iphone') != -1\n\t\t\t\t|| u.indexOf('ipod') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| u.indexOf('blackberry') != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\t// OS\n\t\t\tthis.isIOS = u.indexOf('ipad') != -1 || u.indexOf('iphone') != -1 || u.indexOf('ipod') != -1;\n\t\t\tthis.isAndroid = u.indexOf('android') != -1 && u.indexOf('mobile') != -1;\n\n\t\t\t// Browser\n\t\t\tif(u.indexOf('msie') != -1 || u.indexOf('trident') != -1) {\n\t\t\t\tthis.isIE = true;\n\t\t\t} else if(u.indexOf('edge') != -1) {\n\t\t\t\tthis.isEdge = true;\n\t\t\t} else if(u.indexOf('chrome') != -1) {\n\t\t\t\tthis.isChrome = true;\n\t\t\t} else if(u.indexOf('safari') != -1) {\n\t\t\t\tthis.isSafari = true;\n\t\t\t} else if(u.indexOf('firefox') != -1) {\n\t\t\t\tthis.isFireFox = true;\n\t\t\t} else if(u.indexOf('opera') != -1) {\n\t\t\t\tthis.isOpera = true;\n\t\t\t} else {\n\t\t\t\tthis.isUnknownBrowser = true;\n\t\t\t}\n\n\t\t\t// Language\n\t\t\ttry {\n\t\t\t\tconst navigator = window.navigator;\n\t\t\t\tif (this.isChrome) {\n\t\t\t\t\tthis.langFull = (navigator.languages[0] || navigator['browserLanguage'] || navigator.language || navigator['userLanguage']);\n\t\t\t\t} else {\n\t\t\t\t\tthis.langFull = (navigator['browserLanguage'] || navigator.language || navigator['userLanguage']);\n\t\t\t\t}\n\t\t\t\tthis.lang = this.langFull.substr(0, 2);\n\t\t\t} catch (exception) {\n\t\t\t\tthis.lang =  undefined;\n\t\t\t\tthis.langFull =  undefined;\n\t\t\t}\n\n\t\t\t// Function\n\t\t\tthis.isTouchEnabled = (typeof window.ontouchstart) !== 'undefined';\n\t\t\tthis.isDownloadEnabled = !this.isIOS;\n\n\t\t\t// Resolution\n\t\t\tthis.devicePixelRatio = window.devicePixelRatio;\n\t\t\tthis.isRetina = this.devicePixelRatio > 1;\n\t\t}\n\n\t\t// --------------------\n\t\t// Device\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\t// --------------------\n\t\t// OS\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\t// --------------------\n\t\t// Browser\n\n\t\tpublic static getIsIE():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIE;\n\t\t}\n\n\t\tpublic static getIsEdge():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isEdge;\n\t\t}\n\n\t\tpublic static getIsChrome():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isChrome;\n\t\t}\n\n\t\tpublic static getIsSafari():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isSafari;\n\t\t}\n\n\t\tpublic static getIsFireFox():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isFireFox;\n\t\t}\n\n\t\tpublic static getIsOpera():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isOpera;\n\t\t}\n\n\t\tpublic static getIsUnknownBrowser():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isUnknownBrowser;\n\t\t}\n\n\t\t// --------------------\n\t\t// Language\n\n\t\tpublic static getLang():string {\n\t\t\tthis.initialize();\n\t\t\treturn this.lang;\n\t\t}\n\n\t\tpublic static getLangFull():string {\n\t\t\tthis.initialize();\n\t\t\treturn this.langFull;\n\t\t}\n\n\t\t// --------------------\n\t\t// Function\n\n\t\tpublic static getIsTouchEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTouchEnabled;\n\t\t}\n\n\t\tpublic static getIsDownloadEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDownloadEnabled;\n\t\t}\n\n\t\t// --------------------\n\t\t// Resolution\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\t\tpublic static getDevicePixelRatio():number {\n\t\t\tthis.initialize();\n\t\t\treturn this.devicePixelRatio;\n\t\t}\n\n\t\tpublic static getDpi():number {\n\t\t\tif (this.dpi == -1) {\n\t\t\t\tconst div:HTMLElement = document.createElement('div');\n\t\t\t\tdiv.setAttribute('style', 'height:1in;left:-100%;top:-100%;position:absolute;width:1in;');\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\tthis.dpi = div.offsetHeight;\n\t\t\t\tdocument.body.removeChild(div);\n\t\t\t}\n\t\t\treturn this.dpi;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean = false;\n\t\tprivate static isTablet:boolean = false;\n\t\tprivate static isMobile:boolean = false;\n\n\t\tprivate static isIOS:boolean = false;\n\t\tprivate static isAndroid:boolean = false;\n\n\t\tprivate static isIE:boolean = false;\n\t\tprivate static isEdge:boolean = false;\n\t\tprivate static isChrome:boolean = false;\n\t\tprivate static isSafari:boolean = false;\n\t\tprivate static isFireFox:boolean = false;\n\t\tprivate static isOpera:boolean = false;\n\t\tprivate static isUnknownBrowser:boolean = false;\n\n\t\tprivate static isTouchEnabled:boolean = false;\n\t\tprivate static isDownloadEnabled:boolean = false;\n\n\t\tprivate static isRetina:boolean = false;\n\t\tprivate static devicePixelRatio:number = 1;\n\t\tprivate static dpi:number = -1;\n\n\t\tprivate static lang:string;\n\t\tprivate static langFull:string;\n\n\t\tprivate static isInitialized:boolean = false;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\timport Time = alm.util.Time;\n\n\texport class LocalStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データをCookieに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param minutes 保存期間（分）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? Time.now() + milliseconds : -1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (Time.now() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem('__CKECK__', '__CKECK__');\n\t\t\t\t\tlocalStorage.removeItem('__CKECK__');\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\t// https://github.com/nfriend/ts-keycode-enum\n\texport enum KeyCode {\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n\n\n\n\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] start');\n\n\t\t\twindow.addEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.addEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] stop');\n\n\t\t\twindow.removeEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.removeEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:util.Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class KeyWatcherEvent extends alm.event.Event<KeyWatcher> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = 'keyUp';\n\t\tstatic KEY_DOWN:string = 'keyDown';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:KeyWatcher, originalEvent:KeyboardEvent = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.key = this.originalEvent.key;\n\t\t\tthis.keyCode = this.originalEvent.keyCode;\n\t\t\tthis.altKey = this.originalEvent.altKey;\n\t\t\tthis.ctrlKey = this.originalEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.originalEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.type, this.target, this.originalEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[KeyWatcherEvent] type = ' + this.type + ', key = ' + this.key + ', keyCode = ' + this.keyCode + ', altKey = ' + this.altKey + ', ctrlKey = ' + this.ctrlKey + ', shiftKey = ' + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly originalEvent:KeyboardEvent;\n\t\tpublic readonly key:string;\n\t\tpublic readonly keyCode:number;\n\t\tpublic readonly altKey:boolean;\n\t\tpublic readonly ctrlKey:boolean;\n\t\tpublic readonly shiftKey:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start(target:Window = null):void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] start');\n\n\t\t\tthis.window = target || window;\n\n\t\t\tthis.window.addEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('scroll', this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] stop');\n\n\t\t\tthis.window.removeEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('scroll', this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tthis.windowWidth = this.window.innerWidth;\n\t\t\tthis.windowHeight = this.window.innerHeight;\n\n\t\t\tthis.scrollTop = (this.window.pageYOffset !== undefined) ? this.window.pageYOffset : document.documentElement.scrollTop;\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\t\tprivate static resize(event:Event):void {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.RESIZE, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\tprivate static windowResizeHandler = (event:Event):void => {\n\t\t\tif (!DeviceInfo.getIsDesktop() && WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.resize');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowOrientationChangeHandler = (event:Event):void => {\n\t\t\tif (DeviceInfo.getIsDesktop() || !WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.orientationchange');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowScrollHandler = (event:Event):void => {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.SCROLL, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getWindow():Window { return this.window; }\n\t\tprivate static window:Window = null;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tpublic static getIsMobileOrientationResize():boolean { return this.isMobileOrientationResize; }\n\t\tpublic static setIsMobileOrientationResize(value:boolean):void { this.isMobileOrientationResize = value; }\n\t\tprivate static isMobileOrientationResize:boolean = true;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcherEvent extends alm.event.Event<WindowWatcher> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = 'scroll';\n\t\tstatic RESIZE:string = 'resize';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:WindowWatcher, originalEvent:Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():WindowWatcherEvent {\n\t\t\treturn new WindowWatcherEvent(this.type, this.target, this.originalEvent, this.scrollTop, this.scrollBottom, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[WindowWatcherEvent] type = ' + this.type + ', scrollTop = ' + this.scrollTop + ', scrollBottom = ' + this.scrollBottom + ', windowWidth = ' + this.windowWidth + ', windowHeight = ' + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly originalEvent:Event;\n\t\tpublic readonly scrollTop:number;\n\t\tpublic readonly scrollBottom:number;\n\t\tpublic readonly windowWidth:number;\n\t\tpublic readonly windowHeight:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\texport class ScrollSectionTriggerEvent extends alm.event.Event<ScrollSectionTrigger> {\n\n\t\tpublic static CHANGE:string = 'ScrollSectionTriggerEvent.CHANGE';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:ScrollSectionTrigger, currentSectionIndex:number, prevSectionIndex:number) {\n\t\t\tsuper(eventType, target);\n\n\t\t\tthis.currentSectionIndex = currentSectionIndex;\n\t\t\tthis.prevSectionIndex = prevSectionIndex;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentSectionIndex:number;\n\t\tpublic readonly prevSectionIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\timport Logger = alm.debug.Logger;\n\timport WindowWatcher = alm.browser.WindowWatcher;\n\timport WindowWatcherEvent = alm.browser.WindowWatcherEvent;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class ScrollSectionTrigger extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(threshold:number = 0.5) {\n\t\t\tsuper();\n\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.scrollPosition = null;\n\t\t\tthis.triggerPositions = [];\n\t\t\tthis.thresholdRatio = threshold;\n\t\t\tthis.thresholdPosition = null;\n\n\t\t\tthis.currentSectionIndex = -1;\n\t\t\tthis.prevSectionIndex = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.SCROLL, this.windowScrollHandler);\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.start();\n\n\t\t\tthis.updateThresholdPosition();\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.SCROLL, this.windowScrollHandler);\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.stop();\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getCurrentIndex():number {\n\t\t\treturn this.currentSectionIndex;\n\t\t}\n\n\t\tpublic getPrevIndex():number {\n\t\t\treturn this.prevSectionIndex;\n\t\t}\n\n\t\tpublic getTriggerPositions():number[] {\n\t\t\treturn this.triggerPositions.concat();\n\t\t}\n\n\t\tpublic setTriggerPositions(positions:number[]):void {\n\t\t\tthis.triggerPositions = positions.concat();\n\t\t\tthis.triggerPositions.sort((a, b):number => { return a - b; });\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tpublic getThreshold():number {\n\t\t\treturn this.thresholdRatio;\n\t\t}\n\n\t\tpublic setThreshold(ratio:number):void {\n\t\t\tthis.thresholdRatio = ratio;\n\t\t\tthis.updateThresholdPosition();\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tprivate check():void {\n\t\t\tif (this.scrollPosition == null) {\n\t\t\t\tLogger.warn('[RangeTrigger] current position is need set');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet nearestTriggerIndex = -1;\n\t\t\tlet nearestScrolledTriggerPosition = -1;\n\t\t\tlet nearestDistance:number = Number.MAX_VALUE;\n\t\t\tconst triggerPositionCount = this.triggerPositions.length;\n\t\t\tfor (let i = 0; i < triggerPositionCount; ++i) {\n\t\t\t\tconst scrolledTriggerPosition = this.triggerPositions[i] - this.scrollPosition;\n\t\t\t\tconst distance = Math.abs(scrolledTriggerPosition - this.thresholdPosition);\n\t\t\t\tif (distance < nearestDistance) {\n\t\t\t\t\tnearestDistance = distance;\n\t\t\t\t\tnearestTriggerIndex = i;\n\t\t\t\t\tnearestScrolledTriggerPosition = scrolledTriggerPosition;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestTriggerIndex >= 0) {\n\t\t\t\tlet sectionIndex = -1;\n\t\t\t\tif (nearestScrolledTriggerPosition > this.thresholdPosition) {\n\t\t\t\t\tsectionIndex = nearestTriggerIndex;\n\t\t\t\t} else {\n\t\t\t\t\tsectionIndex = nearestTriggerIndex + 1;\n\t\t\t\t}\n\n\t\t\t\tif (this.currentSectionIndex != sectionIndex) {\n\t\t\t\t\tthis.prevSectionIndex = this.currentSectionIndex;\n\t\t\t\t\tthis.currentSectionIndex = sectionIndex;\n\t\t\t\t\tthis.dispatchEvent(new ScrollSectionTriggerEvent(ScrollSectionTriggerEvent.CHANGE, this, this.currentSectionIndex, this.prevSectionIndex));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate updateThresholdPosition():void {\n\t\t\tthis.thresholdPosition = WindowWatcher.getWindowHeight() * this.thresholdRatio;\n\t\t}\n\n\t\tprivate updateScrollPosition():void {\n\t\t\tthis.scrollPosition = WindowWatcher.getScrollTop();\n\t\t}\n\n\t\tprivate windowScrollHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t};\n\n\t\tprivate windowResizeHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.updateThresholdPosition();\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate scrollPosition:number;\n\t\tprivate triggerPositions:number[];\n\t\tprivate thresholdRatio:number;\n\t\tprivate thresholdPosition:number;\n\n\t\tprivate currentSectionIndex:number;\n\t\tprivate prevSectionIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\timport WindowWatcher = alm.browser.WindowWatcher;\n\timport WindowWatcherEvent = alm.browser.WindowWatcherEvent;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class ResponsiveObserver extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.breakPoints = [];\n\t\t\tthis.breakPointCount = 0;\n\n\t\t\tthis.currentIndex = -1;\n\t\t\tthis.prevIndex = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.start();\n\n\t\t\tthis.check();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.stop();\n\t\t}\n\n\t\tpublic setBreakpoints(breakPoints:number[]):void {\n\t\t\tthis.breakPoints = breakPoints.concat();\n\t\t\tthis.breakPointCount = this.breakPoints.length;\n\t\t\tthis.breakPoints.sort((a, b):number => { return a - b; });\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getCurrentIndex():number {\n\t\t\treturn this.currentIndex;\n\t\t}\n\n\t\tpublic getPrevIndex():number {\n\t\t\treturn this.prevIndex;\n\t\t}\n\n\t\tpublic getBreakPoints():number[] {\n\t\t\treturn this.breakPoints.concat();\n\t\t}\n\n\t\tpublic getBreakPointCount():number {\n\t\t\treturn this.breakPointCount;\n\t\t}\n\n\t\tprivate check():void {\n\t\t\tconst windowWidth = WindowWatcher.getWindowWidth();\n\t\t\tlet index;\n\t\t\tfor (index = 0; index < this.breakPointCount; ++index) {\n\t\t\t\tif (windowWidth <= this.breakPoints[index]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.currentIndex == index) return;\n\t\t\tthis.prevIndex = this.currentIndex;\n\t\t\tthis.currentIndex = index;\n\t\t\ttrace('[ResponsiveObserver] switch index :', this.prevIndex, '->', this.currentIndex, ', window width =', windowWidth);\n\n\t\t\tthis.dispatchEvent(new ResponsiveObserverEvent(ResponsiveObserverEvent.CHANGE, this, this.currentIndex, this.prevIndex));\n\t\t}\n\n\t\tprivate windowResizeHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.check();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate breakPoints:number[];\n\t\tprivate breakPointCount:number;\n\n\t\tprivate currentIndex:number;\n\t\tprivate prevIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\texport class ResponsiveObserverEvent extends alm.event.Event<ResponsiveObserver> {\n\n\t\tpublic static CHANGE:string = 'ResponsiveObserverEvent.CHANGE';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:ResponsiveObserver, currentIndex:number, prevIndex:number) {\n\t\t\tsuper(eventType, target);\n\n\t\t\tthis.currentIndex = currentIndex;\n\t\t\tthis.prevIndex = prevIndex;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentIndex:number;\n\t\tpublic readonly prevIndex:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Hash = alm.util.Hash;\n\n\texport class Scene extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.state = SceneState.Idling;\n\t\t\tthis.parent = null;\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\tthis.transferInfo = null;\n\t\t\tthis.onLoad = null;\n\t\t\tthis.onUnload = null;\n\t\t\tthis.onArrive = null;\n\t\t\tthis.onLeave = null;\n\t\t\tthis.onAscend = null;\n\t\t\tthis.onDescend = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child name \\'' + childName + '\\' is already contained.');\n\t\t\t\t} else {\n\t\t\t\t\t++this.numChildren;\n\t\t\t\t\tchild.parent = this;\n\t\t\t\t\tthis.childrenByName[childName] = child;\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic removeChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\t--this.numChildren;\n\t\t\t\t\tchild.parent = null;\n\t\t\t\t\tdelete this.childrenByName[childName];\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child name \\'' + childName + '\\' is not contained.');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic addChildren(children:Scene[]):Scene[] {\n\t\t\tconst addedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.addChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\taddedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn addedChildren;\n\t\t}\n\n\t\tpublic removeChildren(children:Scene[]):Scene[] {\n\t\t\tconst removedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.removeChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\tremovedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn removedChildren;\n\t\t}\n\n\t\tpublic removeAllChildren():Scene[] {\n\t\t\tconst children:Scene[] = [];\n\t\t\tlet child:Scene;\n\t\t\tfor (let name in this.childrenByName) {\n\t\t\t\tchild = this.childrenByName[name];\n\t\t\t\tchild.parent = null;\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\treturn children;\n\t\t}\n\n\t\tpublic contains(child:Scene|string):boolean {\n\t\t\tif (child) {\n\t\t\t\treturn this.childrenByName[typeof child == 'string' ? child : child.name] != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getState():SceneState {\n\t\t\treturn this.state;\n\t\t}\n\n\t\tpublic getLastState():SceneState {\n\t\t\treturn this.lastState;\n\t\t}\n\n\t\tpublic getParent():Scene {\n\t\t\treturn this.parent;\n\t\t}\n\n\t\tpublic getChildByName(name:string):Scene {\n\t\t\treturn this.childrenByName[name] || null;\n\t\t}\n\n\t\tpublic getChildrenByName():Hash<Scene> {\n\t\t\treturn this.childrenByName;\n\t\t}\n\n\t\tpublic getNumChildren():number {\n\t\t\treturn this.numChildren;\n\t\t}\n\n\t\tpublic getManager():SceneManager {\n\t\t\tif (this.parent) {\n\t\t\t\treturn this.parent.getManager();\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getManager was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getPath():string {\n\t\t\tconst manager:SceneManager = this.getManager();\n\t\t\tif (manager) {\n\t\t\t\tconst names:string[] = [this.name];\n\t\t\t\tlet scene:Scene = this;\n\t\t\t\twhile (scene = scene.parent) {\n\t\t\t\t\tnames.unshift(scene.name);\n\t\t\t\t}\n\t\t\t\treturn manager.getScenePathByNames(names);\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getPath was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getTransferInfo():SceneTransferInfo {\n\t\t\treturn this.transferInfo || null;\n\t\t}\n\n\t\tpublic gotoScene(path:string):void {\n\t\t\tthis.getManager().goto(path);\n\t\t}\n\n\n\n\n\n\t\tpublic _load(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Loading;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLoad) == 'function' ? this.onLoad() : this.implOnLoad();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _unload(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Unloading;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onUnload) == 'function' ? this.onUnload() : this.implOnUnload();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _arrive(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Arriving;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onArrive) == 'function' ? this.onArrive() : this.implOnArrive();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _leave(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Leaving;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLeave) == 'function' ? this.onLeave() : this.implOnLeave();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _ascend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Ascending;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onAscend) == 'function' ? this.onAscend() : this.implOnAscend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _descend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Descending;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onDescend) == 'function' ? this.onDescend() : this.implOnDescend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\n\n\n\n\t\tprotected implOnLoad():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnUnload():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnArrive():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnLeave():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnAscend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnDescend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t// The callback function is called preferentially over the override\n\t\tpublic onLoad:() => cmd.Command;\n\t\tpublic onUnload:() => cmd.Command;\n\t\tpublic onArrive:() => cmd.Command;\n\t\tpublic onLeave:() => cmd.Command;\n\t\tpublic onAscend:() => cmd.Command;\n\t\tpublic onDescend:() => cmd.Command;\n\n\t\tprivate name:string;\n\t\tprivate state:SceneState;\n\t\tprivate lastState:SceneState;\n\t\tprivate parent:Scene;\n\t\tprivate childrenByName:alm.util.Hash<Scene>;\n\t\tprivate numChildren:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneEvent extends Event<Scene> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static LOAD:string = 'SceneEvent.load';\n\t\tpublic static UNLOAD:string = 'SceneEvent.unload';\n\t\tpublic static ARRIVE:string = 'SceneEvent.arrive';\n\t\tpublic static LEAVE:string = 'SceneEvent.leave';\n\t\tpublic static ASCEND:string = 'SceneEvent.ascend';\n\t\tpublic static DESCEND:string = 'SceneEvent.descend';\n\n\t\tpublic static LOAD_COMPLETE:string = 'SceneEvent.loadComplete';\n\t\tpublic static UNLOAD_COMPLETE:string = 'SceneEvent.unloadComplete';\n\t\tpublic static ARRIVE_COMPLETE:string = 'SceneEvent.arriveComplete';\n\t\tpublic static LEAVE_COMPLETE:string = 'SceneEvent.leaveComplete';\n\t\tpublic static ASCEND_COMPLETE:string = 'SceneEvent.ascendComplete';\n\t\tpublic static DESCEND_COMPLETE:string = 'SceneEvent.descendComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Scene) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneEvent {\n\t\t\treturn new SceneEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\texport class SceneTransferInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(transferId:number, departurePath:string, destinationPath:string, message:any = null) {\n\t\t\tthis.transferId = transferId;\n\t\t\tthis.departurePath = departurePath;\n\t\t\tthis.destinationPath = destinationPath;\n\t\t\tthis.message = message;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTransferId():number {\n\t\t\treturn this.transferId;\n\t\t}\n\n\t\tpublic getDeparturePath():string {\n\t\t\treturn this.departurePath;\n\t\t}\n\n\t\tpublic getDestinationPath():string {\n\t\t\treturn this.destinationPath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic message:any;\n\n\t\tprivate transferId:number;\n\t\tprivate departurePath:string;\n\t\tprivate destinationPath:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\texport enum SceneState {\n\t\tIdling,\n\t\tLoading,\n\t\tUnloading,\n\t\tArriving,\n\t\tLeaving,\n\t\tAscending,\n\t\tDescending,\n\t}\n\n\texport function getSceneStateString(state:SceneState):string {\n\t\tswitch (state) {\n\t\t\tcase SceneState.Idling:\n\t\t\t\treturn 'idling';\n\t\t\tcase SceneState.Loading:\n\t\t\t\treturn 'loading';\n\t\t\tcase SceneState.Unloading:\n\t\t\t\treturn 'unloading';\n\t\t\tcase SceneState.Arriving:\n\t\t\t\treturn 'arriving';\n\t\t\tcase SceneState.Leaving:\n\t\t\t\treturn 'leaving';\n\t\t\tcase SceneState.Ascending:\n\t\t\t\treturn 'ascending';\n\t\t\tcase SceneState.Descending:\n\t\t\t\treturn 'descending';\n\t\t}\n\t\treturn '';\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport enum Direction {\n\t\tStatic,\n\t\tSibling,\n\t\tAscend,\n\t\tDescend,\n\t}\n\n\texport function getDirectionString(direction:Direction):string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.Static:\n\t\t\t\treturn 'static';\n\t\t\tcase Direction.Sibling:\n\t\t\t\treturn 'sibling';\n\t\t\tcase Direction.Ascend:\n\t\t\t\treturn 'ascend';\n\t\t\tcase Direction.Descend:\n\t\t\t\treturn 'descend';\n\t\t}\n\t\treturn '';\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport class Waypoint {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(path:string, level:number) {\n\t\t\tthis.path = path;\n\t\t\tthis.level = level;\n\t\t\tthis.from = Direction.Static;\n\t\t\tthis.to = Direction.Static;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getPath():string {\n\t\t\treturn this.path;\n\t\t}\n\n\t\tpublic getLevel():number {\n\t\t\treturn this.level;\n\t\t}\n\n\t\tpublic getFrom():Direction {\n\t\t\treturn this.from;\n\t\t}\n\n\t\tpublic getTo():Direction {\n\t\t\treturn this.to;\n\t\t}\n\n\t\tpublic _setFrom(from:Direction):void {\n\t\t\tthis.from = from;\n\t\t}\n\n\t\tpublic _setTo(to:Direction):void {\n\t\t\tthis.to = to;\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[Waypoint] path = \\'' + this.path + '\\', level = ' + this.level + ', from = ' + getDirectionString(this.from) + ', to = ' + getDirectionString(this.to);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate path:string;\n\t\tprivate level:number;\n\t\tprivate from:Direction;\n\t\tprivate to:Direction;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport class RootScene extends Scene {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(manager:SceneManager) {\n\t\t\tsuper('');\n\t\t\tthis.manager = manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getManager():SceneManager {\n\t\t\treturn this.manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate manager:SceneManager;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport LoggerLevel = alm.debug.LoggerLevel;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Obj = alm.util.Obj;\n\timport RootScene = scn.core.RootScene;\n\n\texport class SceneManager extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string = '', rootSceneClass:(new (sceneManager:SceneManager) => RootScene) = RootScene) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.root = new rootSceneClass(this);\n\t\t\tthis.currentScene = null;\n\n\t\t\tthis.waypoints = [];\n\t\t\tthis.waypointIndex = -1;\n\t\t\tthis.lastState = SceneState.Idling;\n\t\t\tthis.eventIndex = -1;\n\t\t\tthis.transferId = -1;\n\t\t\tthis.transferInfo = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start(message:any = null):void {\n\t\t\tLogger.verbose('----- scene manager start -----');\n\t\t\tthis.goto('/', message);\n\t\t}\n\n\t\tpublic goto(path:string, message:any = null):void {\n\t\t\tpath = this.resolvePath(path);\n\n\t\t\t// Return if current destination and new destination is same.\n\t\t\tif (this.transferInfo && this.transferInfo.getDestinationPath() == path) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Build waypoints\n\t\t\tlet newWaypoints:core.Waypoint[] = [];\n\t\t\tif (this.waypointIndex != -1) {\n\t\t\t\tnewWaypoints = this.createWaypoints(this.waypoints[this.waypointIndex].getPath(), path);\n\t\t\t} else {\n\t\t\t\t// Init\n\t\t\t\tnewWaypoints = [new core.Waypoint('/', 0)];\n\t\t\t}\n\n\t\t\t// Transfer\n\t\t\tif (newWaypoints.length > 0) {\n\t\t\t\tconst isDestinationChanged:boolean = this.transferInfo != null;\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.waypointIndex = 0;\n\t\t\t\t\tthis.eventIndex = 0;\n\t\t\t\t\t++this.transferId;\n\t\t\t\t\tthis.waypoints = newWaypoints;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.verbose('destination is changed');\n\t\t\t\t\tLogger.verbose('waypoint index : ' + this.waypointIndex);\n\t\t\t\t\tthis.waypoints = this.waypoints.slice(0, this.waypointIndex + 1).concat(newWaypoints.slice(1));\n\t\t\t\t\tthis.setDirection(this.waypoints);\n\t\t\t\t\tthis.dumpWaypoint(this.waypoints);\n\t\t\t\t}\n\n\t\t\t\tthis.transferInfo = new SceneTransferInfo(this.transferId, this.waypoints[this.waypointIndex].getPath(), this.waypoints[this.waypoints.length - 1].getPath(), message);\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_START, this));\n\t\t\t\t}\n\n\t\t\t\tthis.checkState();\n\t\t\t}\n\t\t}\n\n\t\tpublic resolvePath(path:string):string {\n\t\t\t// Relative to absolute\n\t\t\tif (path[0] != '/') {\n\t\t\t\tif (this.currentScene) {\n\t\t\t\t\tpath = this.currentScene.getPath() + '/' + path;\n\t\t\t\t} else {\n\t\t\t\t\tpath = '/' + path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Normalize\n\t\t\tconst names:string[] = path.split('/');\n\t\t\tconst normalized:string[] = [];\n\t\t\tfor (let i:number = 0; i < names.length; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (name == '') continue;\n\t\t\t\tif (name == '.') continue;\n\t\t\t\tif (name == '..') {\n\t\t\t\t\tnormalized.pop();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnormalized.push(name);\n\t\t\t}\n\n\t\t\treturn '/' + normalized.join('/');\n\t\t}\n\n\t\tpublic addSceneAt(path:string):Scene {\n\t\t\tlet success:boolean = false;\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (i == n - 1) {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tLogger.warn('[SceneManager \\'' + this.name + '\\'] addSceneAt was failed, because path \\'' + path + '\\' is already exist.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tscene = scene.getChildByName(name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn success ? scene : null;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getRoot():Scene {\n\t\t\treturn this.root;\n\t\t}\n\n\t\tpublic getSceneByPath(path:string):Scene {\n\t\t\treturn this.getSceneBySceneNames(this.getSceneNamesByPath(path));\n\t\t}\n\n\t\tpublic getParentSceneByPath(path:string):Scene {\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tnames.pop();\n\t\t\treturn this.getSceneBySceneNames(names);\n\t\t}\n\n\t\tprivate getSceneBySceneNames(names:string[]):Scene {\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tscene = scene.getChildByName(names[i]);\n\t\t\t}\n\t\t\treturn scene;\n\t\t}\n\n\t\tpublic getSceneNamesByPath(path:string):string[] {\n\t\t\treturn path == '/' ? [''] : this.resolvePath(path).split('/');\n\t\t}\n\n\t\tpublic getSceneLevelByNames(names:string[]):number {\n\t\t\treturn names.length - 1;\n\t\t}\n\n\t\tpublic getScenePathByNames(names:string[]):string {\n\t\t\treturn names.length == 0 ? '/' : names.length == 1 ? ('/' + names[0]) : names.join('/');\n\t\t}\n\n\n\t\tprivate createWaypoints(departurePath:string, destinationPath:string):core.Waypoint[] {\n\t\t\tif (departurePath == destinationPath) {\n\t\t\t\tLogger.warn('[SceneManager] departure path and destination path is same, path = \\'' + departurePath + '\\'');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tLogger.verbose('----- scene flow -----');\n\n\t\t\tconst waypoints:core.Waypoint[] = [\n\t\t\t\tnew core.Waypoint(departurePath, this.getSceneLevelByNames(this.getSceneNamesByPath(departurePath)))\n\t\t\t];\n\n\t\t\tconst departureNames:string[] = this.getSceneNamesByPath(departurePath);\n\t\t\tconst destinationNames:string[] = this.getSceneNamesByPath(destinationPath);\n\n\t\t\tLogger.verbose('    path');\n\t\t\tLogger.verbose('        current    : \\'' + departurePath + '\\'');\n\t\t\tLogger.verbose('        destination: \\'' + destinationPath + '\\'');\n\n\t\t\tLogger.verbose('    names');\n\t\t\tLogger.verbose('        current(' + departureNames.length + ')    : \\'' + departureNames + '\\'');\n\t\t\tLogger.verbose('        destination(' + destinationNames.length + '): \\'' + destinationNames + '\\'');\n\n\t\t\t// 折り返しを見つける\n\t\t\tlet turningLevel:number = 0;\n\t\t\tlet turningNames:string[] = [];\n\t\t\tlet turningPath:string;\n\t\t\tif (destinationPath == '/') {\n\t\t\t\tturningLevel = -1;\n\t\t\t\tturningNames = [];\n\t\t\t\tturningPath = '/';\n\t\t\t} else {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (departureNames[turningLevel] == destinationNames[turningLevel]) {\n\t\t\t\t\t\tturningNames.push(departureNames[turningLevel]);\n\t\t\t\t\t\t++turningLevel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--turningLevel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tturningPath = this.getScenePathByNames(turningNames);\n\t\t\t}\n\n\t\t\tLogger.verbose('    turning');\n\t\t\tLogger.verbose('        path     : ' + turningPath);\n\t\t\tLogger.verbose('        level    : ' + turningLevel);\n\t\t\tLogger.verbose('        names(' + turningNames.length + ') : \\'' + turningNames + '\\'');\n\n\t\t\t// 出発シーンから折り返しまで\n\t\t\t{\n\t\t\t\tconst names:string[] = departureNames.concat();\n\t\t\t\tlet prevPath:string = departurePath;\n\t\t\t\tfor (let i:number = departureNames.length - 1; i > turningLevel + 1; --i) {\n\t\t\t\t\tnames.pop();\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (turningPath == destinationPath && turningLevel > 0) {\n\t\t\t\t// 折り返しと到着シーンが同一\n\t\t\t\tconst from:core.Direction = turningLevel == waypoints[waypoints.length - 1].getLevel() ? core.Direction.Sibling : core.Direction.Ascend;\n\t\t\t\twaypoints.push(new core.Waypoint(turningPath, turningLevel));\n\t\t\t} else {\n\n\t\t\t\t// 折り返しから到達シーンまで\n\t\t\t\tconst names:string[] = turningNames.concat();\n\t\t\t\tconst prev:core.Waypoint = waypoints[waypoints.length - 1];\n\t\t\t\tlet prevPath:string = prev.getPath();\n\t\t\t\tlet prevLevel:number = prev.getLevel();\n\t\t\t\tfor (let i:number = turningLevel + 1; i < destinationNames.length; ++i) {\n\t\t\t\t\tconst name:string = destinationNames[i];\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevLevel = level;\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 進行方向\n\t\t\tthis.setDirection(waypoints);\n\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tthis.dumpWaypoint(waypoints);\n\t\t\t}\n\n\t\t\treturn waypoints;\n\t\t}\n\n\t\tprivate setDirection(waypoints:core.Waypoint[]):void {\n\t\t\tconst n:number = waypoints.length;\n\t\t\tlet prev:core.Waypoint = null;\n\t\t\tlet point:core.Waypoint;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tpoint = waypoints[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst d:number = point.getLevel() - prev.getLevel();\n\t\t\t\t\tpoint._setFrom(d > 0 ? core.Direction.Descend : d < 0 ? core.Direction.Ascend : core.Direction.Sibling);\n\t\t\t\t\tprev._setTo(point.getFrom());\n\t\t\t\t}\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tprivate dumpWaypoint(waypoints:core.Waypoint[]):void {\n\t\t\tLogger.verbose('    waypoints');\n\t\t\tconst n:number = waypoints.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tLogger.verbose('        [' + i + '] ' + waypoints[i]);\n\t\t\t}\n\t\t\tLogger.verbose('');\n\t\t}\n\n\t\tpublic dumpAllPath():void {\n\t\t\tLogger.info('----- scene all path -----');\n\t\t\tthis._dumpAllPath(this.root);\n\t\t}\n\n\t\tprivate _dumpAllPath(parent:Scene):void {\n\t\t\tconst children = parent.getChildrenByName();\n\t\t\tObj.each(children, (name:string, child:Scene):void => {\n\t\t\t\tLogger.info(child.getPath());\n\t\t\t\tthis._dumpAllPath(child);\n\t\t\t});\n\t\t}\n\n\n\n\n\n\t\tprivate checkState():void {\n\t\t\t//trace('lastState : ' + scn.getSceneStateString(this.lastState));\n\n\t\t\t//trace(this.waypointIndex + ' / ' + this.waypoints.length);\n\n\t\t\tif (this.waypointIndex >= this.waypoints.length) {\n\t\t\t\tLogger.verbose('----- scene transfer complete -----');\n\t\t\t\tconst tmpTransferId:number = this.transferInfo.getTransferId();\n\t\t\t\tthis.waypointIndex = this.waypoints.length - 1;\n\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_COMPLETE, this));\n\t\t\t\tif (tmpTransferId == this.transferInfo.getTransferId()) {\n\t\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentScene) {\n\t\t\t\tconst currentWaypoint:core.Waypoint = this.waypoints[this.waypointIndex];\n\t\t\t\tconst currentWaypointPath = currentWaypoint.getPath();\n\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypointPath);\n\n\t\t\t\tif (!this.currentScene) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerRequireSceneEvent(SceneManagerRequireSceneEvent.REQUIRE_SCENE, this, currentWaypointPath));\n\t\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypointPath);\n\t\t\t\t}\n\t\t\t\tif (!this.currentScene) {\n\t\t\t\t\tLogger.warn('[SceneManager] scene is null : scene path =', currentWaypointPath);\n\t\t\t\t}\n\n\t\t\t\t// Departure scene\n\t\t\t\tif (this.waypoints.length > 1 && this.waypointIndex == 0) {\n\t\t\t\t\t//trace('Departure scene');\n\n\t\t\t\t\t// Leave\n\t\t\t\t\tif (this.lastState != SceneState.Leaving && this.currentScene.getLastState() == SceneState.Arriving) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Leave   : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._leave(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Departure to child\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tthis.checkState();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Through scene\n\t\t\t\tif (this.waypointIndex > 0 && this.waypointIndex < this.waypoints.length - 1) {\n\t\t\t\t\t//trace('Through scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ascend\n\t\t\t\t\tif (this.lastState != SceneState.Ascending && currentWaypoint.getFrom() == core.Direction.Ascend) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Ascend  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._ascend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Descend\n\t\t\t\t\tif (this.lastState != SceneState.Descending && currentWaypoint.getTo() == core.Direction.Descend) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Descend : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._descend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Destination scene\n\t\t\t\tif (this.waypointIndex == this.waypoints.length - 1) {\n\t\t\t\t\t//trace('Destination scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Arrive\n\t\t\t\t\tif (this.lastState != SceneState.Arriving) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Arrive  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._arrive(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t//trace('Init scene');\n\n\t\t\t\t// Init\n\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\tthis.currentScene = this.root;\n\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t}\n\t\t}\n\n\t\tprivate sceneLoadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Loading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneUnloadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Unloading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneArriveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Arriving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneLeaveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Leaving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneAscendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Ascending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneDescendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Descending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate name:string;\n\t\tprivate root:Scene;\n\t\tprivate currentScene:Scene;\n\n\t\tprivate waypoints:core.Waypoint[];\n\t\tprivate waypointIndex:number;\n\t\tprivate lastState:SceneState;\n\t\tprivate eventIndex:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t\tprivate transferId:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerEvent extends Event<SceneManager> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TRANSFER_START:string = 'SceneManagerEvent.transferStart';\n\t\tpublic static TRANSFER_COMPLETE:string = 'SceneManagerEvent.transferComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:SceneManager) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerEvent {\n\t\t\treturn new SceneManagerEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n"]}