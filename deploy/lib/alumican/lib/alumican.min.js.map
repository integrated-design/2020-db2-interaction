{"version":3,"sources":["../src/alumican/cmd/Parallel.ts","../src/alumican/scn/core/Waypoint.ts","../src/alumican/include.ts","../src/alumican/alm/debug/Logger.ts","../src/alumican/alm/util/Time.ts","../src/alumican/alm/math/Easing.ts","../src/alumican/alm/browser/QueryString.ts","../src/alumican/alm/debug/FpsMonitor.ts","../src/alumican/alm/event/Event.ts","../src/alumican/alm/event/EventDispatcher.ts","../src/alumican/cmd/CommandState.ts","../src/alumican/cmd/CommandEvent.ts","../src/alumican/cmd/Command.ts","../src/alumican/cmd/CommandList.ts","../src/alumican/cmd/Break.ts","../src/alumican/cmd/Return.ts","../src/alumican/cmd/Log.ts","../src/alumican/cmd/Wait.ts","../src/alumican/cmd/Func.ts","../src/alumican/cmd/Listen.ts","../src/alumican/cmd/Tween.ts","../src/alumican/cmd/Serial.ts","../src/alumican/alm/geom/Vector2.ts","../src/alumican/alm/geom/Vector3.ts","../src/alumican/alm/geom/Rectangle.ts","../src/alumican/alm/geom/Boxer.ts","../src/alumican/alm/util/Obj.ts","../src/alumican/alm/util/Arr.ts","../src/alumican/alm/util/Num.ts","../src/alumican/alm/util/Str.ts","../src/alumican/alm/util/Cmd.ts","../src/alumican/alm/resource/ObjectPool.ts","../src/alumican/alm/state/Lottery.ts","../src/alumican/alm/state/Switcher.ts","../src/alumican/alm/state/SwitcherEvent.ts","../src/alumican/alm/state/LoHi.ts","../src/alumican/alm/state/LoHiEvent.ts","../src/alumican/alm/math/EasingValue.ts","../src/alumican/alm/math/SpringValue.ts","../src/alumican/alm/math/SimpleAverage.ts","../src/alumican/alm/math/SimpleMovingAverage.ts","../src/alumican/alm/math/MaxValue.ts","../src/alumican/alm/math/Circular.ts","../src/alumican/alm/time/AnimationFrameTicker.ts","../src/alumican/alm/time/AnimationFrameTickerEvent.ts","../src/alumican/alm/time/Timer.ts","../src/alumican/alm/time/TimerEvent.ts","../src/alumican/alm/io/FileLoader.ts","../src/alumican/alm/io/FileLoaderProgressEvent.ts","../src/alumican/alm/io/FileLoaderSuccessEvent.ts","../src/alumican/alm/io/FileLoaderErrorEvent.ts","../src/alumican/alm/io/FileQuery.ts","../src/alumican/alm/view/View.ts","../src/alumican/alm/view/ButtonBehavior.ts","../src/alumican/alm/view/SelectionBehavior.ts","../src/alumican/alm/browser/DeviceInfo.ts","../src/alumican/alm/browser/LocalStorage.ts","../src/alumican/alm/browser/KeyWatcher.ts","../src/alumican/alm/browser/KeyWatcherEvent.ts","../src/alumican/alm/browser/WindowWatcher.ts","../src/alumican/alm/browser/WindowWatcherEvent.ts","../src/alumican/scn/Scene.ts","../src/alumican/scn/SceneEvent.ts","../src/alumican/scn/SceneManager.ts","../src/alumican/scn/SceneManagerEvent.ts","../src/alumican/scn/SceneTransferInfo.ts","../src/alumican/scn/SceneState.ts","../src/alumican/scn/core/Direction.ts","../src/alumican/scn/core/RootScene.ts"],"names":["cmd","scn","alm","trace","messages","_i","arguments","length","debug","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","util","Time","now","window","performance","Date","math","Easing","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","createEaseInElastic","s","p","a","asin","createEaseOutElastic","createEaseInOutElastic","easeInElastic","defaultEaseInElastic","easeOutElastic","defaultEaseOutElastic","easeInOutElastic","defaultEaseInOutElastic","createEaseInBack","createEaseOutBack","createEaseInOutBack","easeInBack","easeOutBack","defaultEaseOutBack","easeInOutBack","defaultEaseInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","defaultEaseInBack","browser","QueryString","url","this","set","prototype","search","index","indexOf","substring","location","hash","pair","pairs","split","i","getString","key","defaultValue","value","undefined","getInt","parseInt","isNaN","getFloat","parseFloat","getBool","getHash","LoggerLevel","NullLogging","verbose","prefix","warn","error","ConsoleLogging","console","Array","slice","call","concat","log","DOMLogging","dom","html","print","line","join","innerHTML","innerText","ParallelLogging","loggers","n","setLevelByQuery","level","Silent","setNamespace","namespace","Verbose","logger","Info","Warn","stackTrace","Error","FpsMonitor","reset","frameRate","frameCount","startTime","actualFrameRate","dummyFrameRate","update","currentTime","elapsedTime","setDummyFrameRate","clearDummyFrameRate","getFrameRate","event","Event","type","data","getType","getTarget","getData","setData","event_1","EventDispatcher","listeners","addEventListener","eventType","listener","numListeners","push","removeEventListener","splice","removeAllEventListener","hasEventListener","dispatchEvent","dispatchEventType","CommandState","CommandEvent","_super","eventTarget","__extends","clone","toString","COMPLETE","Command","executeFunction","interruptFunction","destroyFunction","_this","setExecuteFunction","setInterruptFunction","setDestroyFunction","state","Sleeping","self","parent","execute","Executing","getExecuteFunction","interrupt","Interrupting","getInterruptFunction","destroy","getDestroyFunction","notifyComplete","implExecuteFunction","command","implInterruptFunction","implDestroyFunction","func","getState","getParent","setParent","getSelf","CommandList","commands","addCommand","preProcess","getCommands","insertCommand","insertCommandAt","addCommandArray","insertCommandArray","insertCommandArrayAt","getLength","getCommandByIndex","numCommands","Func","Break","Return","Log","getMessages","setMessages","Wait","time","completeHandler","timerId","setTimeout","cancel","clearTimeout","getTime","setTime","args","eventDispatcher","getFunction","setFunction","getArguments","setArguments","getEventDispatcher","setEventDispatcher","getEventType","setEventType","Listen","Tween","to","from","duration","easing","onStart","onUpdate","onComplete","intervalHandler","progressTime","progressValue","tweenTarget","internalFrom","setInterval","updateInterval","clearInterval","timeRatio","value0","setTarget","getDuration","setDuration","getTo","setTo","getFrom","setFrom","getEasing","setEasing","getOnStart","setOnStart","getOnUpdate","setOnUpdate","getOnComplete","setOnComplete","getProgressTime","getProgressValue","getUpdateInterval","setUpdateInterval","milliseconds","Serial","currentCommand","position","next","isPaused","isCompleteOnPaused","implNotifyBreak","implNotifyReturn","getPosition","Parallel","completeCount","command_1","command_2","command_3","getCompleteCount","geom","Vector2","x","y","copyTo","point","getClone","zero","normalize","l","getSquareDistance","dx","dy","getDistance","Vector3","z","dz","Rectangle","width","height","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","tw","th","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","Obj","each","Object","keys","forEach","get","Arr","sequence","count","init","step","result","v","unique","list","filter","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","m","Num","map","srcA","srcB","dstA","dstB","clamp","ease","random","min","max","randomInt","floor","clampAbs","minAbs","maxAbs","abs","dist","x1","y1","x2","y2","squared","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","PI3","PI2","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","Str","toTimeString","hours","minutes","seconds","h","substr","Cmd","stop","c","single","resource","ObjectPool","onRequireItem","onDestroyItem","initCount","growthCount","items","getItem","unshift","returnItem","item","reduce","shift","Lottery","values","initValues","restValues","restCount","isEmpty","onCheck","isAutoResetEnabled","add","getRestCount","getIsEmply","getIsAutoResetEnabled","setIsAutoResetEnabled","enabled","createIndices","Switcher","isLoopEnabled","itemCount","itemIds","itemIndexById","onChange","onPrev","onNext","setupById","ids","setup","setupByCount","newItemIndex","oldItemIndex","newItemId","oldItemId","gotoByIndex","itemIndex","useTransition","dispatchPagerEvent","SwitcherEvent","CHANGE","gotoById","itemId","hasOwnProperty","prev","PREV","NEXT","getIsLoopEnabled","setIsLoopEnabled","getNewItemIndex","getOldItemIndex","getItemCount","getNewItemId","getOldItemId","getItemIds","LoHi","lowThreshold","highThreshold","initValue","isHigh","_set","getIsHigh","getValue","getLowThreshold","getHighThreshold","setLowThreshold","threshold","setHighThreshold","LoHiEvent","LOW","HIGH","EasingValue","tolerance","d","SpringValue","spring","friction","acceleration","velocity","SimpleAverage","_value","_count","SimpleMovingAverage","maxCount","_maxCount","oldest","latest","MaxValue","maxLatestCount","_maxLatestCount","Number","MAX_VALUE","Circular","angle","setAngle","setVelocity","getAngle","getVelocity","getSin","getCos","getTan","tan","getMagnitude","getVector","xy","AnimationFrameTicker","updateHandler","requestId","requestAnimationFrame","targetFrameRate","frameStartTime","interval","toleranceDuration","AnimationFrameTickerEvent","TICK","isRunning","start","cancelAnimationFrame","getIsRunning","getTargetFrameRate","Timer","repeatCount","timerHandler","tStartTime","elapsedCount","isCompleted","tInterval","startInterval","dispatch","TimerEvent","tId","tRestTime","stopInterval","restart","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","io","FileLoader","totalThreadCount","fileLoadCompleteHandler","query","content","currentThreadCount","isLoading","isLoadComplete","param","onLoad","FileLoaderSuccessEvent","SUCCESS","fileLoadErrorHandler","onError","FileLoaderErrorEvent","ERROR","isLoading_","currentCount","totalCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","handlersByType","require","id","addQuery","FileQuery","String","load","progress","FileLoaderProgressEvent","START","PROGRESS","this_1","query_1","handler","addHandler","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getContentByUrl","getContentByQueryId","textureId","getCurrentThreadCount","getTotalThreadCount","loadedCount","view_1","View","view","viewCount","name","autoHideWithInit","isInitializing","isInitialized","isReadying","isReadied","isShowing","isShown","isHiding","viewsById","initialize","implInitialize","hide","ready","implReady","finalize","implFinalize","show","getShowCommand","getHideCommand","showCommand","hideCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReadying","getIsReadied","getIsShowing","getIsShown","getIsHiding","getIsHidden","getId","getView","getName","setName","getAutoHideWithInit","setAutoHideWithInit","getViewById","ButtonBehavior","hitArea","isHoverCursorEnabled","isPreventDefaultEnabled","isStopPropagationEnabled","mouseOverHandler","preventDefault","stopPropagation","over","applyMouseCursor","mouseOutHandler","out","mouseDownHandler","down","mouseUpHandler","up","clickHandler","click","touchStartHandler","touchEndHandler","touchCancelHandler","isEnabled","isOver","isDown","isOverInternal","isDownInternal","defaultMouseCursor","setHitArea","implButtonOver","_out","checkEnabled","implButtonOut","implButtonDown","_up","implButtonUp","implButtonClick","on","off","getIsEnabled","setIsEnabled","implButtonChangeEnabled","getIsOver","getIsDown","getHitArea","clearHitArea","getIsPreventDefaultEnabled","setIsPreventDefaultEnabled","getIsStopPropagationEnabled","setIsStopPropagationEnabled","getIsHoverCursorEnabled","setIsHoverCursorEnabled","style","cursor","SelectionBehavior","select","isSelected","implSelectionChanged","deselect","getIsSelected","DeviceInfo","u","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isIE","isEdge","isChrome","isSafari","isFireFox","isOpera","isUnknownBrowser","isTouchEnabled","ontouchstart","isDownloadEnabled","devicePixelRatio","isRetina","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsIE","getIsEdge","getIsChrome","getIsSafari","getIsFireFox","getIsOpera","getIsUnknownBrowser","getIsTouchEnabled","getIsDownloadEnabled","getIsRetina","getDevicePixelRatio","getDpi","dpi","div","document","createElement","setAttribute","body","appendChild","offsetHeight","removeChild","LocalStorage","save","expiredAt","isAvailable","record","JSON","stringify","localStorage","setItem","saveWithTerm","parse","removeItem","remove","isAvailable_","toMilliseconds","dates","KeyCode","KeyWatcher","windowKeyDownHandler","windowKeyUpHandler","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","KeyWatcherEvent","KEY_DOWN","KEY_UP","isLongPressed","originalEvent","altKey","ctrlKey","shiftKey","WindowWatcher","windowResizeHandler","windowScrollHandler","windowWidth","innerWidth","windowHeight","innerHeight","scrollTop","pageYOffset","documentElement","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","WindowWatcherEvent","RESIZE","getWindow","getScrollTop","getScrollBottom","getWindowWidth","getWindowHeight","getIsMobileOrientationResize","isMobileOrientationResize","setIsMobileOrientationResize","windowOrientationChangeHandler","SCROLL","Scene","SceneState","Idling","childrenByName","numChildren","isEntered","onUnload","onArrive","onLeave","onAscend","onDescend","addChild","child","childName","addChildren","children","addedChildren","removeChildren","removedChildren","removeAllChildren","name_1","contains","getLastState","lastState","getChildByName","getNumChildren","getManager","getPath","manager","names","scene","getScenePathByNames","gotoScene","path","goto","_load","transferInfo","Loading","SceneEvent","LOAD","implOnLoad","LOAD_COMPLETE","_unload","Unloading","UNLOAD","implOnUnload","UNLOAD_COMPLETE","_arrive","Arriving","ARRIVE","implOnArrive","ARRIVE_COMPLETE","_leave","Leaving","LEAVE","implOnLeave","LEAVE_COMPLETE","_ascend","Ascending","ASCEND","implOnAscend","ASCEND_COMPLETE","_descend","Descending","DESCEND","implOnDescend","DESCEND_COMPLETE","SceneManager","sceneLoadCompleteHandler","currentScene","eventIndex","checkState","sceneUnloadCompleteHandler","sceneArriveCompleteHandler","sceneLeaveCompleteHandler","sceneAscendCompleteHandler","sceneDescendCompleteHandler","root","core","RootScene","waypoints","waypointIndex","transferId","resolvePath","getDestinationPath","newWaypoints","createWaypoints","Waypoint","isDestinationChanged","setDirection","printWaypoint","SceneTransferInfo","SceneManagerEvent","TRANSFER_START","normalized","name_2","pop","addSceneAt","createScene","success","getSceneNamesByPath","name_3","getRoot","getSceneByPath","getSceneLevelByNames","departurePath","destinationPath","departureNames","destinationNames","turningPath","turningLevel","turningNames","prevPath","getLevel","Direction","Sibling","Ascend","name_4","_setFrom","Descend","_setTo","getSceneStateString","tmpTransferId","getTransferId","TRANSFER_COMPLETE","currentWaypoint","relay","getDeparturePath","getDirectionString","direction","Static","getVersion"],"mappings":"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","file":"alumican.min.js","sourcesContent":["/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Parallel extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.completeCount = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tif (++this.completeCount >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.completeCount = 0;\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.execute();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.interrupt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getCompleteCount():number { return this.completeCount; }\n\t\tprivate completeCount:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace scn.core {\n\n\texport class Waypoint {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(path:string, level:number) {\n\t\t\tthis.path = path;\n\t\t\tthis.level = level;\n\t\t\tthis.from = Direction.Static;\n\t\t\tthis.to = Direction.Static;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getPath():string {\n\t\t\treturn this.path;\n\t\t}\n\n\t\tpublic getLevel():number {\n\t\t\treturn this.level;\n\t\t}\n\n\t\tpublic getFrom():Direction {\n\t\t\treturn this.from;\n\t\t}\n\n\t\tpublic getTo():Direction {\n\t\t\treturn this.to;\n\t\t}\n\n\t\tpublic _setFrom(from:Direction):void {\n\t\t\tthis.from = from;\n\t\t}\n\n\t\tpublic _setTo(to:Direction):void {\n\t\t\tthis.to = to;\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[Waypoint] path = \\'' + this.path + '\\', level = ' + this.level + ', from = ' + getDirectionString(this.from) + ', to = ' + getDirectionString(this.to);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate path:string;\n\t\tprivate level:number;\n\t\tprivate from:Direction;\n\t\tprivate to:Direction;\n\t}\n}","/* ---------- dependency ---------- */\n\n/* ---------- project ---------- */\n/// <reference path='alm/util/Time.ts' />\n/// <reference path='alm/math/Easing.ts' />\n/// <reference path='alm/browser/QueryString.ts' />\n\n/// <reference path='alm/debug/Logger.ts' />\n/// <reference path='alm/debug/FpsMonitor.ts' />\n\n/// <reference path='alm/event/Event.ts' />\n/// <reference path='alm/event/EventDispatcher.ts' />\n\n/// <reference path='cmd/CommandState.ts' />\n/// <reference path='cmd/CommandEvent.ts' />\n/// <reference path='cmd/Command.ts' />\n/// <reference path='cmd/CommandList.ts' />\n/// <reference path='cmd/Break.ts' />\n/// <reference path='cmd/Return.ts' />\n/// <reference path='cmd/Log.ts' />\n/// <reference path='cmd/Wait.ts' />\n/// <reference path='cmd/Func.ts' />\n/// <reference path='cmd/Listen.ts' />\n/// <reference path='cmd/Tween.ts' />\n/// <reference path='cmd/Serial.ts' />\n/// <reference path='cmd/Parallel.ts' />\n\n/// <reference path='alm/geom/Vector2.ts' />\n/// <reference path='alm/geom/Vector3.ts' />\n/// <reference path='alm/geom/Rectangle.ts' />\n/// <reference path='alm/geom/Boxer.ts' />\n\n/// <reference path='alm/util/Hash.ts' />\n/// <reference path='alm/util/Obj.ts' />\n/// <reference path='alm/util/Arr.ts' />\n/// <reference path='alm/util/Num.ts' />\n/// <reference path='alm/util/Str.ts' />\n/// <reference path='alm/util/Cmd.ts' />\n\n/// <reference path='alm/resource/ObjectPool.ts' />\n\n/// <reference path='alm/state/Lottery.ts' />\n/// <reference path='alm/state/Switcher.ts' />\n/// <reference path='alm/state/SwitcherEvent.ts' />\n/// <reference path='alm/state/LoHi.ts' />\n/// <reference path='alm/state/LoHiEvent.ts' />\n\n/// <reference path='alm/math/EasingValue.ts' />\n/// <reference path='alm/math/SpringValue.ts' />\n/// <reference path='alm/math/SimpleAverage.ts' />\n/// <reference path='alm/math/SimpleMovingAverage.ts' />\n/// <reference path='alm/math/MaxValue.ts' />\n/// <reference path='alm/math/Circular.ts' />\n\n/// <reference path='alm/time/AnimationFrameTicker.ts' />\n/// <reference path='alm/time/AnimationFrameTickerEvent.ts' />\n/// <reference path='alm/time/Timer.ts' />\n/// <reference path='alm/time/TimerEvent.ts' />\n\n/// <reference path='alm/io/FileLoader.ts' />\n/// <reference path='alm/io/FileLoaderProgressEvent.ts' />\n/// <reference path='alm/io/FileLoaderSuccessEvent.ts' />\n/// <reference path='alm/io/FileLoaderErrorEvent.ts' />\n/// <reference path='alm/io/FileQuery.ts' />\n/// <reference path='alm/io/IFileHandler.ts' />\n\n/// <reference path='alm/view/View.ts' />\n/// <reference path='alm/view/ButtonBehavior.ts' />\n/// <reference path='alm/view/IButton.ts' />\n/// <reference path='alm/view/SelectionBehavior.ts' />\n/// <reference path='alm/view/ISelection.ts' />\n\n/// <reference path='alm/browser/DeviceInfo.ts' />\n/// <reference path='alm/browser/LocalStorage.ts' />\n/// <reference path='alm/browser/KeyWatcher.ts' />\n/// <reference path='alm/browser/KeyWatcherEvent.ts' />\n/// <reference path='alm/browser/WindowWatcher.ts' />\n/// <reference path='alm/browser/WindowWatcherEvent.ts' />\n\n/// <reference path='scn/Scene.ts' />\n/// <reference path='scn/SceneEvent.ts' />\n/// <reference path='scn/SceneManager.ts' />\n/// <reference path='scn/SceneManagerEvent.ts' />\n/// <reference path='scn/SceneTransferInfo.ts' />\n/// <reference path='scn/SceneState.ts' />\n/// <reference path='scn/core/Direction.ts' />\n/// <reference path='scn/core/RootScene.ts' />\n/// <reference path='scn/core/Waypoint.ts' />\n\nnamespace alm {\n\n\t// Library version info\n\texport function getVersion():string {\n\t\treturn '0.0.1';\n\t}\n\n\t// Credit info\n\tconst style:string = 'color:#999;';\n\tconst print:Function = console.debug;\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('%c+ alumican.js', style);\n\tprint('%c+ version ' + getVersion(), style);\n\tprint('%c+ http://alumican.net', style);\n\tprint('%c+ https://github.com/alumican/alumican.js', style);\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('');\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.debug {\n\n\timport QueryString = alm.browser.QueryString;\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\n\n\n\n\texport interface ILogging {\n\n\t\tverbose(prefix:string, messages:any[]):void;\n\t\tinfo(prefix:string, messages:any[]):void;\n\t\twarn(prefix:string, messages:any[]):void;\n\t\terror(prefix:string, messages:any[]):void;\n\t}\n\n\n\n\n\n\texport class NullLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t}\n\t}\n\n\n\n\n\n\texport class ConsoleLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconsole.debug.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconsole.warn.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconsole.error.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\t}\n\n\n\n\n\n\texport class DOMLogging implements ILogging {\n\n\t\tconstructor(dom:HTMLElement, html:boolean) {\n\t\t\tthis.dom = dom;\n\t\t\tthis.html = html;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tprivate print(prefix:string, messages:any[]):void {\n\t\t\tconst line:string = prefix + messages.join(', ');\n\t\t\tif (this.html) {\n\t\t\t\tthis.dom.innerHTML = line + '<br>\\n' + this.dom.innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.dom.innerText = line + '\\n' + this.dom.innerText;\n\t\t\t}\n\t\t}\n\n\t\tprivate dom:HTMLElement;\n\t\tprivate html:boolean;\n\t}\n\n\n\n\n\n\texport class ParallelLogging implements ILogging {\n\n\t\tconstructor(loggers:ILogging[]) {\n\t\t\tthis.loggers = loggers;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].verbose(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].info(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].warn(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].error(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tprivate loggers:ILogging[];\n\t}\n\n\n\n\n\n\texport class Logger {\n\n\t\tpublic static level:number = LoggerLevel.Verbose;\n\t\tpublic static logger:ILogging = new ConsoleLogging();\n\t\tprivate static namespace:string = '';\n\n\t\tpublic static setLevelByQuery(key:string):void {\n\t\t\tconst level:number = new QueryString().getInt(key, LoggerLevel.Silent);\n\t\t\tLogger.level = isNaN(level) ? LoggerLevel.Silent : level;\n\t\t}\n\n\t\tpublic static setNamespace(namespace:string):void {\n\t\t\tLogger.namespace = namespace != '' ? (namespace + '#') : '';\n\t\t}\n\n\t\tpublic static verbose(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tLogger.logger.verbose('[' + Logger.namespace + 'Verbose] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static info(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) {\n\t\t\t\tLogger.logger.info('[' + Logger.namespace + 'Info   ] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static warn(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', messages);\n\t\t\t\tLogger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static error(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', messages);\n\t\t\t\tLogger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', [message + ' : ' + target]);\n\t\t\t\tLogger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', [message + ' : ' + target]);\n\t\t\t\tLogger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static stackTrace():void {\n\t\t\tconsole.trace();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n\nfunction trace(...messages:any[]):void {\n\talm.debug.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.errorIf.apply(null, arguments);\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Time {\n\n\t\t/**\n\t\t * 現在の時刻(ミリ秒)を取得する\n\t\t * @returns {number} UNIX時間（ミリ秒）\n\t\t */\n\t\tpublic static now():number {\n\t\t\treturn (window.performance || Date).now();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport type EasingFunction = (t:number)=>number;\n\n\texport class Easing {\n\n\t\tpublic static linear(t:number):number {\n\t\t\treturn t;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuad(t:number):number {\n\t\t\treturn (t /= 1) * t;\n\t\t}\n\n\t\tpublic static easeOutQuad(t:number):number {\n\t\t\treturn -(t /= 1) * (t - 2);\n\t\t}\n\n\t\tpublic static easeInOutQuad(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t;\n\t\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCubic(t:number):number {\n\t\t\treturn (t /= 1) * t * t;\n\t\t}\n\n\t\tpublic static easeOutCubic(t:number):number {\n\t\t\treturn (t = t - 1) * t * t + 1;\n\t\t}\n\n\t\tpublic static easeInOutCubic(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuart(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuart(t:number):number {\n\t\t\treturn -((t = t - 1) * t * t * t - 1);\n\t\t}\n\n\t\tpublic static easeInOutQuart(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t;\n\t\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuint(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuint(t:number):number {\n\t\t\treturn ((t = t - 1) * t * t * t * t + 1);\n\t\t}\n\n\t\tpublic static easeInOutQuint(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInSine(t:number):number {\n\t\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t\t}\n\n\t\tpublic static easeOutSine(t:number):number {\n\t\t\treturn Math.sin(t * (Math.PI / 2));\n\t\t}\n\n\t\tpublic static easeInOutSine(t:number):number {\n\t\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\treturn Math.pow(2, 10 * (t - 1));\n\t\t}\n\n\t\tpublic static easeOutExpo(t:number):number {\n\t\t\tif (t == 1) return 1;\n\t\t\treturn -Math.pow(2, -10 * t) + 1;\n\t\t}\n\n\t\tpublic static easeInOutExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\tif (t == 1) return 1;\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCirc(t:number):number {\n\t\t\treturn -(Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t}\n\n\t\tpublic static easeOutCirc(t:number):number {\n\t\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t\t}\n\n\t\tpublic static easeInOutCirc(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 0.5) == 2) return 1;\n\t\t\t\tif (p == 0) p = 0.3 * 1.5;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1) return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseOutElastic(t);\n\t\t}\n\n\t\tpublic static easeInOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutElastic(t);\n\t\t}\n\n\t\tprivate static defaultEaseInElastic:EasingFunction = Easing.createEaseInElastic();\n\t\tprivate static defaultEaseOutElastic:EasingFunction = Easing.createEaseOutElastic();\n\t\tprivate static defaultEaseInOutElastic:EasingFunction = Easing.createEaseInOutElastic();\n\n\n\n\n\n\t\tpublic static createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * (((s *= 1.525) + 1) * t - s);\n\t\t\t\treturn 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseOutBack(t);\n\t\t}\n\n\t\tpublic static easeInOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutBack(t);\n\t\t}\n\n\t\tprivate static defaultEaseInBack:EasingFunction = Easing.createEaseInBack();\n\t\tprivate static defaultEaseOutBack:EasingFunction = Easing.createEaseOutBack();\n\t\tprivate static defaultEaseInOutBack:EasingFunction = Easing.createEaseInOutBack();\n\n\n\n\n\n\t\tpublic static easeInBounce(t:number):number {\n\t\t\treturn 1 - Easing.easeOutBounce(1 - t);\n\t\t}\n\n\t\tpublic static easeOutBounce(t:number):number {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * t * t;\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInOutBounce(t:number):number {\n\t\t\tif (t < 0.5) return Easing.easeInBounce(t * 2) * 0.5;\n\t\t\treturn Easing.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t\t}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\timport Hash = alm.util.Hash;\n\n\texport class QueryString {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string = '') {\n\t\t\tthis.set(url);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(url:string = ''):void {\n\t\t\t// normalize url\n\t\t\tlet search:string = '';\n\t\t\tif (url != '') {\n\t\t\t\tconst index:number = url.indexOf('?');\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tsearch = url.substring(index);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsearch = location.search;\n\t\t\t}\n\t\t\t// parse query\n\t\t\tthis.hash = {};\n\t\t\tconst pairs:string[] = search.substring(1).split('&');\n\t\t\tlet pair:string[];\n\t\t\tfor(let i:number = 0; pairs[i]; ++i) {\n\t\t\t\tpair = pairs[i].split('=');\n\t\t\t\tthis.hash[pair[0]] = pair[1];\n\t\t\t}\n\t\t}\n\n\t\t// 'abc' -> 'abc'\n\t\tpublic getString(key:string, defaultValue:string):string {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : value;\n\t\t}\n\n\t\t// '123' -> 123\n\t\tpublic getInt(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseInt(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '1.23' -> 1.23\n\t\tpublic getFloat(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseFloat(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '0' -> false, otherwise true\n\t\tpublic getBool(key:string, defaultValue:boolean):boolean {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : (<any>value == true);\n\t\t}\n\n\t\tpublic getHash():Hash<string> {\n\t\t\treturn this.hash;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate hash:Hash<string>;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.debug {\n\n\timport Time = alm.util.Time;\n\n\texport class FpsMonitor {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic reset():void {\n\t\t\tthis.frameRate = 0;\n\t\t\tthis.frameCount = 0;\n\t\t\tthis.startTime = Time.now();\n\t\t\tthis.actualFrameRate = -1;\n\t\t\tthis.dummyFrameRate = -1;\n\t\t}\n\n\t\tpublic update():void {\n\t\t\t++this.frameCount;\n\t\t\tconst currentTime:number = Time.now();\n\t\t\tconst elapsedTime:number = currentTime - this.startTime;\n\t\t\tif (elapsedTime >= 1000) {\n\t\t\t\tthis.actualFrameRate = 1000 * this.frameCount / elapsedTime;\n\t\t\t\tthis.frameCount = 0;\n\t\t\t\tthis.startTime = currentTime;\n\t\t\t\tif (this.dummyFrameRate < 0) {\n\t\t\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic setDummyFrameRate(frameRate:number):void {\n\t\t\tthis.dummyFrameRate = frameRate;\n\t\t\tthis.frameRate = this.dummyFrameRate;\n\t\t}\n\n\t\tpublic clearDummyFrameRate():void {\n\t\t\tthis.dummyFrameRate = -1;\n\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t}\n\n\t\tpublic getFrameRate():number {\n\t\t\treturn this.frameRate;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate frameRate:number;\n\t\tprivate frameCount:number;\n\t\tprivate startTime:number;\n\t\tprivate actualFrameRate:number;\n\t\tprivate dummyFrameRate:number;\n\t}\n}","/// <reference path='../../include.ts' />\r\n\r\nnamespace alm.event {\r\n\r\n\texport class Event<T = any> {\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// CONSTRUCTOR\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tconstructor(type:string, target:Object, data:T = null) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.target = target;\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\t\tpublic getType():string {\r\n\t\t\treturn this.type;\r\n\t\t}\r\n\r\n\t\tpublic getTarget():Object {\r\n\t\t\treturn this.target;\r\n\t\t}\r\n\r\n\t\tpublic getData():T {\r\n\t\t\treturn this.data;\r\n\t\t}\r\n\r\n\t\tpublic setData(data:T):void {\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// MEMBER\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tprivate type:string;\r\n\t\tprivate target:Object;\r\n\t\tprivate data:T;\r\n\t}\r\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.event {\n\n\timport Logger = alm.debug.Logger;\n\texport type EventListener = (event:Event) => void;\n\n\texport class EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:any = null) {\n\t\t\tthis.target = target || this;\n\t\t\tthis.listeners = {};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] addEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) return;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.listeners[eventType] = listeners = [];\n\t\t\t}\n\t\t\tlisteners.push(listener);\n\t\t}\n\n\t\tpublic removeEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] removeEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) {\n\t\t\t\t\t\tlisteners.splice(i,  1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (listeners.length == 0) {\n\t\t\t\t\tdelete this.listeners[eventType];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic removeAllEventListener(eventType:string = null):void {\n\t\t\tif (eventType) {\n\t\t\t\tdelete this.listeners[eventType];\n\t\t\t} else {\n\t\t\t\tthis.listeners = {};\n\t\t\t}\n\t\t}\n\n\t\tpublic hasEventListener(eventType:string):boolean {\n\t\t\treturn this.listeners[eventType] != null;\n\t\t}\n\n\t\tpublic dispatchEvent(event:Event):void {\n\t\t\tlet listeners:EventListener[] = this.listeners[event.getType()];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tlisteners[i].call(this.target, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic dispatchEventType<T = any>(eventType:string, target:Object = null, data:T = null):void {\n\t\t\tthis.dispatchEvent(new Event<T>(eventType, target, data));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:any;\n\t\tprivate listeners:util.Hash<EventListener[]>;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport enum CommandState {\n\t\tSleeping     = 0,\n\t\tExecuting    = 1,\n\t\tInterrupting = 2,\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class CommandEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():CommandEvent {\n\t\t\treturn new CommandEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[CommandEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Command extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(executeFunction:Function = null, interruptFunction:Function = null, destroyFunction:Function = null) {\n\t\t\tsuper();\n\n\t\t\tthis.setExecuteFunction(executeFunction);\n\t\t\tthis.setInterruptFunction(interruptFunction);\n\t\t\tthis.setDestroyFunction(destroyFunction);\n\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.self = this;\n\t\t\tthis.parent = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic execute():void {\n\t\t\tif (this.state > CommandState.Sleeping) {\n\t\t\t\tthrow new Error('[Command.execute] + Command is already executing.');\n\t\t\t}\n\t\t\tthis.state = CommandState.Executing;\n\t\t\tthis.getExecuteFunction().call(this, this);\n\t\t}\n\n\t\tpublic interrupt():void {\n\t\t\tif (this.state == CommandState.Executing) {\n\t\t\t\tthis.state = CommandState.Interrupting;\n\t\t\t\tthis.getInterruptFunction().call(this, this);\n\t\t\t}\n\t\t}\n\n\t\tpublic destroy():void {\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.getDestroyFunction().call(this, this);\n\t\t\tthis.parent = null;\n\t\t\tthis.executeFunction = null;\n\t\t\tthis.interruptFunction = null;\n\t\t\tthis.destroyFunction = null;\n\t\t}\n\n\t\tprotected notifyComplete():void {\n\t\t\tswitch (this.state) {\n\t\t\t\tcase CommandState.Sleeping:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Executing:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Interrupting:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getExecuteFunction():Function { return this.executeFunction || this.implExecuteFunction };\n\t\tpublic setExecuteFunction(func:Function):void { this.executeFunction = func; }\n\t\tprivate executeFunction:Function;\n\n\t\tpublic getInterruptFunction():Function { return this.interruptFunction || this.implInterruptFunction };\n\t\tpublic setInterruptFunction(func:Function):void { this.interruptFunction = func; }\n\t\tprivate interruptFunction:Function;\n\n\t\tpublic getDestroyFunction():Function { return this.destroyFunction || this.implDestroyFunction };\n\t\tpublic setDestroyFunction(func:Function):void { this.destroyFunction = func; }\n\t\tprivate destroyFunction:Function;\n\n\t\tpublic getState():CommandState { return this.state; }\n\t\tprivate state:CommandState;\n\n\t\tpublic getParent():Command { return this.parent; }\n\t\tpublic setParent(parent:Command):void { this.parent = parent; }\n\t\tprivate parent:Command;\n\n\t\tpublic getSelf():Command { return this.self; }\n\t\tprivate self:Command;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport abstract class CommandList extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper();\n\t\t\tthis.commands = [];\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tthis.commands = this.getCommands().concat(<Command[]>commands);\n\t\t\t}\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(0, ...commands);\n\t\t}\n\n\t\tprotected insertCommandAt(index:number, ...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tArray.prototype.splice.apply(this.getCommands(), (<any[]>[index, 0]).concat(commands));\n\t\t\t}\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprotected insertCommandArrayAt(index:number, commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(index, ...commands);\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn this.commands.length;\n\t\t}\n\n\t\tpublic getCommandByIndex(index:number):Command { return this.commands[index]; }\n\t\tpublic getCommands():Command[] { return this.commands; }\n\n\t\tprivate preProcess(commands:(Command|Function)[]):void {\n\t\t\tconst numCommands:number = commands.length;\n\t\t\tlet command:Command|Function;\n\t\t\tfor (let i:number = 0; i < numCommands; ++i) {\n\t\t\t\tcommand = commands[i];\n\t\t\t\tif (typeof(command) == 'function') commands[i] = command = new Func(command);\n\t\t\t\tcommand.setParent(this);\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\t\tprotected abstract implNotifyBreak():void;\n\t\tprotected abstract implNotifyReturn():void;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate commands:Command[];\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Break extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyBreak'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Return extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Log extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...messages:any[]) {\n\t\t\tsuper();\n\t\t\tthis.messages = messages;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call(this.messages));\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.messages = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getMessages():any[] { return this.messages; }\n\t\tpublic setMessages(messages:any[]):void { this.messages = messages; }\n\t\tprivate messages:any[];\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Wait extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(time:number = 1000) {\n\t\t\tsuper();\n\t\t\tthis.time = time;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.timerId = window.setTimeout(this.completeHandler, this.time);\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearTimeout(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTime():number { return this.time; }\n\t\tpublic setTime(time:number):void { this.time = time; }\n\t\tprivate time:number;\n\n\t\tprivate timerId:number;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Func extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(func:Function = null, args:any[] = [], eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.func = func;\n\t\t\tthis.args = args;\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t\tthis.func(...this.args);\n\t\t\t} else {\n\t\t\t\tthis.func(...this.args);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.func = null;\n\t\t\tthis.args = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t\tthis.eventType = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getFunction():Function { return this.func; }\n\t\tpublic setFunction(func:Function):void { this.func = func; }\n\t\tprivate func:Function;\n\n\t\tpublic getArguments():any[] { return this.args; }\n\t\tpublic setArguments(args:any[]):void { this.args = args; }\n\t\tprivate args:any[];\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Listen extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.eventType = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Easing = alm.math.Easing;\n\timport EasingFunction = alm.math.EasingFunction;\n\timport Time = alm.util.Time;\n\n\texport type TweenCallbackFunction = (progressTime:number, progressValue:number) => void;\n\n\texport class Tween extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:Object, to:Object, from:Object = null, duration:number = 1000, easing:EasingFunction = Easing.linear, onStart:TweenCallbackFunction = null, onUpdate:TweenCallbackFunction = null, onComplete:TweenCallbackFunction = null) {\n\t\t\tsuper();\n\t\t\tthis.tweenTarget = target;\n\t\t\tthis.to = to;\n\t\t\tthis.from = from;\n\t\t\tthis.duration = duration;\n\t\t\tthis.easing = easing;\n\t\t\tthis.onStart = onStart;\n\t\t\tthis.onUpdate = onUpdate;\n\t\t\tthis.onComplete = onComplete;\n\t\t\tthis.progressTime = 0;\n\t\t\tthis.progressValue = 0;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.internalFrom = {};\n\t\t\tlet value0:number;\n\t\t\tlet value1:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue1 = this.to[key];\n\t\t\t\tif (this.from && this.from[key] != null) {\n\t\t\t\t\tthis.internalFrom[key] = this.from[key];\n\t\t\t\t} else {\n\t\t\t\t\tthis.internalFrom[key] = this.tweenTarget[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.duration > 0) {\n\t\t\t\tthis.timerId = window.setInterval(this.intervalHandler, Tween.updateInterval);\n\t\t\t\tthis.startTime = Time.now();\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t\tthis.apply(1);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\n\t\t\tthis.tweenTarget = null;\n\t\t\tthis.to = null;\n\t\t\tthis.from = null;\n\t\t\tthis.easing = null;\n\t\t\tthis.onStart = null;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.onComplete = null;\n\t\t\tthis.internalFrom = null;\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearInterval(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate apply(timeRatio:number):void {\n\t\t\tthis.progressTime = timeRatio;\n\t\t\tthis.progressValue = this.easing(this.progressTime);\n\t\t\tlet value0:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue0 = this.internalFrom[key];\n\t\t\t\tthis.tweenTarget[key] = value0 + (this.to[key] - value0) * this.progressValue;\n\t\t\t}\n\t\t}\n\n\t\tprivate intervalHandler = ():void => {\n\t\t\tconst elapsedTime:number = Time.now() - this.startTime;\n\t\t\tif (elapsedTime < this.duration) {\n\t\t\t\tthis.apply(elapsedTime / this.duration);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(1);\n\t\t\t\tthis.cancel();\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTarget():Object { return this.tweenTarget; }\n\t\tpublic setTarget(target:Object):void { this.tweenTarget = target; }\n\t\tprivate tweenTarget:Object;\n\n\t\tpublic getDuration():number { return this.duration; }\n\t\tpublic setDuration(duration:number):void { this.duration = duration; }\n\t\tprivate duration:number;\n\n\t\tpublic getTo():Object { return this.to; }\n\t\tpublic setTo(to:Object):void { this.to = to; }\n\t\tprivate to:Object;\n\n\t\tpublic getFrom():Object { return this.from; }\n\t\tpublic setFrom(from:Object):void { this.from = from; }\n\t\tprivate from:Object;\n\n\t\tpublic getEasing():EasingFunction { return this.easing; }\n\t\tpublic setEasing(easing:EasingFunction):void { this.easing = easing; }\n\t\tprivate easing:EasingFunction;\n\n\t\tpublic getOnStart():TweenCallbackFunction { return this.onStart; }\n\t\tpublic setOnStart(func:TweenCallbackFunction):void { this.onStart = func; }\n\t\tprivate onStart:TweenCallbackFunction;\n\n\t\tpublic getOnUpdate():TweenCallbackFunction { return this.onUpdate; }\n\t\tpublic setOnUpdate(func:TweenCallbackFunction):void { this.onUpdate = func; }\n\t\tprivate onUpdate:TweenCallbackFunction;\n\n\t\tpublic getOnComplete():TweenCallbackFunction { return this.onComplete; }\n\t\tpublic setOnComplete(func:TweenCallbackFunction):void { this.onComplete = func; }\n\t\tprivate onComplete:TweenCallbackFunction;\n\n\t\tpublic getProgressTime():number { return this.progressTime; }\n\t\tprivate progressTime:number;\n\n\t\tpublic getProgressValue():number { return this.progressValue; }\n\t\tprivate progressValue:number;\n\n\t\tprivate startTime:number;\n\t\tprivate timerId:number;\n\t\tprivate internalFrom:Object;\n\n\t\tpublic getUpdateInterval():number { return Tween.updateInterval; }\n\t\tpublic setUpdateInterval(milliseconds:number):void { Tween.updateInterval = milliseconds; }\n\t\tprivate static updateInterval:number = 1000 / 60;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Serial extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.currentCommand = null;\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.insertCommandAt(this.position + 1, ...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCommand = this.getCommandByIndex(this.position);\n\t\t\tthis.currentCommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand.execute();\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand = null;\n\t\t\tif (++this.position >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.position = 0;\n\t\t\tif (this.getLength() > 0) {\n\t\t\t\tthis.next();\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.destroy();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getPosition():number { return this.position; }\n\t\tprivate position:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:geom.Rectangle, bounds:geom.Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):geom.Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new geom.Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new geom.Rectangle(tx, ty, tw, th);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Obj {\n\n\t\tpublic static each(target:any, func:(key:string, value:any) => void):void {\n\t\t\tif (target == null) return;\n\t\t\tObject.keys(target).forEach((key:string):void => {\n\t\t\t\tfunc(key, target[key]);\n\t\t\t});\n\t\t}\n\n\t\tpublic static get(target:any, key:string, defaultValue:any):any {\n\t\t\tconst value:any = target[key];\n\t\t\treturn typeof value !== 'undefined' ? value : defaultValue;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 等差数列を生成する\n\t\t * @param {number} count 要素数\n\t\t * @param {number} init 初期値\n\t\t * @param {number} step 等差\n\t\t * @returns {number[]} 出力配列\n\t\t */\n\t\tpublic static sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\t\tconst result:number[] = new Array(count);\n\t\t\tlet v:number = init;\n\t\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\t\tresult[i] = v;\n\t\t\t\tv += step;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\timport EasingFunction = alm.math.EasingFunction;\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲から範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {boolean} clamp trueの場合は入力値を[srcA, srcB]の範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcA:number, srcB:number, dstA:number, dstB:number, clamp:boolean = true):number {\n\t\t\tif (srcA == srcB) return dstA;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcA < srcB) {\n\t\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcA) * (dstB - dstA) / (srcB - srcA) + dstA;\n\t\t}\n\n\t\t/**\n\t\t * 値を特定の範囲からイージング関数を経由して特定の範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {EasingFunction} easing イージング関関数\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static ease(value:number, srcA:number, srcB:number, dstA:number, dstB:number, easing:EasingFunction):number {\n\t\t\tif (srcA == srcB) return dstA;\n\t\t\tif (srcA < srcB) {\n\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\treturn easing((value - srcA) / (srcB - srcA)) * (dstB - dstA) + dstA;\n\t\t\t} else {\n\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\treturn easing((value - srcB) / (srcA - srcB)) * (dstB - dstA) + dstA;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 乱数（小数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 乱数（整数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomInt(min:number = 0, max:number = 1):number {\n\t\t\treturn Math.floor(Num.random(min, max));\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 富豪を保ったまま、値の絶対値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} minAbs 最小値\n\t\t * @param {number} maxAbs 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clampAbs(value:number, minAbs:number, maxAbs:number):number {\n\t\t\tif (value > 0) {\n\t\t\t\treturn value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value);\n\t\t\t} else {\n\t\t\t\tvalue = Math.abs(value);\n\t\t\t\treturn -(value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static PI2:number = Math.PI * 2;\n\t\tpublic static PI3:number = Math.PI * 3;\n\t\tpublic static PI4:number = Math.PI * 4;\n\t\tpublic static PI5:number = Math.PI * 5;\n\t\tpublic static PI6:number = Math.PI * 6;\n\t\tpublic static PI_2:number = Math.PI / 2;\n\t\tpublic static PI_3:number = Math.PI / 3;\n\t\tpublic static PI_4:number = Math.PI / 4;\n\t\tpublic static PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = ('0' + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != '0') {\n\t\t\t\treturn h + ':' + ('0' + m).substr(-2, 2) + ':' + s;\n\t\t\t} else {\n\t\t\t\treturn m + ':' + s;\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Cmd {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\n\t\tpublic static single(execute:boolean, command:cmd.Command):cmd.Command {\n\t\t\tif (execute && command) command.execute();\n\t\t\treturn command;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.resource {\n\n\texport class ObjectPool<T> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * ObjectPool class.\n\t\t * @class\n\t\t * @param {function} onRequireItem This callback function is called when new item is required.\n\t\t * @param {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @param {number} initCount Init item count.\n\t\t * @param {number} growthCount Growth item count.\n\t\t *\n\t\t * @property {number} initCount Init item count.\n\t\t * @property {number} growthCount Growth item count.\n\t\t * @property {function} onRequireItem This callback function is called when new item is required.\n\t\t * @property {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @property {Array} items Array of items.\n\t\t * @property {number} index Current index of items.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tconstructor(onRequireItem:() => T, onDestroyItem:(item:T) => void, initCount:number = 100, growthCount:number = 50) {\n\t\t\tthis.onRequireItem = onRequireItem;\n\t\t\tthis.onDestroyItem = onDestroyItem;\n\t\t\tthis.growthCount = growthCount;\n\t\t\tthis.items = new Array(initCount);\n\t\t\tfor (let i = 0; i < initCount; ++i) {\n\t\t\t\tthis.items[i] = this.onRequireItem();\n\t\t\t}\n\t\t\tthis.index = initCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * Get item from object pool.\n\t\t * @return {T} Item\n\t\t */\n\t\tpublic getItem():T {\n\t\t\tif (this.index > 0) {\n\t\t\t\treturn this.items[--this.index];\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.growthCount; ++i) {\n\t\t\t\tthis.items.unshift(this.onRequireItem());\n\t\t\t}\n\t\t\tthis.index = this.growthCount;\n\t\t\treturn this.getItem();\n\t\t}\n\n\t\t/**\n\t\t * Return item to object pool.\n\t\t * @param {T} Item.\n\t\t * @return void\n\t\t */\n\t\tpublic returnItem(item:T):void {\n\t\t\tthis.items[this.index++] = item;\n\t\t}\n\n\t\t/**\n\t\t * Optimize object pool size.\n\t\t * @return void\n\t\t */\n\t\tpublic reduce():void {\n\t\t\tconst n = this.index;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items.shift());\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t}\n\n\t\t/**\n\t\t * Destroy object pool.\n\t\t * @return void\n\t\t */\n\t\tpublic destroy():void {\n\t\t\tconst n = this.items.length;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items[i]);\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t\tthis.items = null;\n\t\t\tthis.onRequireItem = null;\n\t\t\tthis.onDestroyItem = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate items:T[];\n\t\tprivate index:number;\n\t\tprivate growthCount:number;\n\n\t\tpublic onRequireItem:() => T;\n\t\tpublic onDestroyItem:(item:T) => void;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\texport class Lottery<T = any> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(values:T[] = null) {\n\t\t\tif (values) {\n\t\t\t\tthis.set(values);\n\t\t\t} else {\n\t\t\t\tthis.initValues = this.restValues = null;\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t\tthis.onCheck = null;\n\t\t\tthis.isAutoResetEnabled = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(values:T[]):void {\n\t\t\tthis.initValues = values.concat();\n\t\t\tthis.reset();\n\t\t}\n\n\t\tpublic get():T {\n\t\t\tif (this.isEmpty && this.isAutoResetEnabled) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tconst index:number = Math.floor(Math.random() * this.restCount);\n\t\t\tconst value:T = this.restValues[index];\n\t\t\tlet result:boolean = true;\n\t\t\tif (this.onCheck) result = this.onCheck(value);\n\t\t\tif (result) {\n\t\t\t\tthis.restValues.splice(index, 1);\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic add(value:T, reset:boolean = false):void {\n\t\t\tthis.initValues.push(value);\n\t\t\tthis.restValues.push(value);\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\tif (reset) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.restValues = this.initValues.concat();\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t}\n\n\t\tpublic getRestCount():number {\n\t\t\treturn this.restCount;\n\t\t}\n\n\t\tpublic getIsEmply():boolean {\n\t\t\treturn this.isEmpty;\n\t\t}\n\n\t\tpublic getIsAutoResetEnabled():boolean {\n\t\t\treturn this.isAutoResetEnabled;\n\t\t}\n\n\t\tpublic setIsAutoResetEnabled(enabled:boolean):void {\n\t\t\tthis.isAutoResetEnabled = enabled;\n\t\t}\n\n\t\tpublic static createIndices(count:number):Lottery<number> {\n\t\t\tconst values:number[] = new Array(count);\n\t\t\tfor (let i:number = 0; i < count; ++i) values[i] = i;\n\t\t\treturn new Lottery<number>(values);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onCheck:(value:T) => boolean;\n\n\t\tprivate isAutoResetEnabled:boolean;\n\t\tprivate isEmpty:boolean;\n\t\tprivate restCount:number;\n\t\tprivate restValues:T[];\n\t\tprivate initValues:T[];\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\timport Hash = alm.util.Hash;\n\n\texport class Switcher<T = string> extends alm.event.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.isLoopEnabled = true;\n\n\t\t\tthis.itemCount = 0;\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.onChange = null;\n\t\t\tthis.onPrev = null;\n\t\t\tthis.onNext = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic setupById(ids:T[]):void {\n\t\t\tthis.itemCount = ids.length;\n\t\t\tthis.itemIds = ids;\n\n\t\t\tthis.itemIndexById = {};\n\t\t\tfor (let i:number = 0; i < this.itemCount; ++i) {\n\t\t\t\tthis.itemIndexById[this.itemIds[i] as unknown as string] = i;\n\t\t\t}\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tpublic setupByCount(itemCount:number):void {\n\t\t\tthis.itemCount = itemCount;\n\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tprivate setup():void {\n\t\t\tthis.newItemIndex = -1;\n\t\t\tthis.oldItemIndex = -1;\n\n\t\t\tthis.newItemId = null;\n\t\t\tthis.oldItemId = null;\n\t\t}\n\n\t\tpublic gotoByIndex(itemIndex:number, useTransition:boolean = true):boolean {\n\t\t\tif (itemIndex < 0 || itemIndex >= this.itemCount) itemIndex = -1;\n\t\t\tif (itemIndex == this.newItemIndex) return false;\n\n\t\t\tthis.oldItemIndex = this.newItemIndex;\n\t\t\tthis.newItemIndex = itemIndex;\n\n\t\t\tif (this.itemIds) {\n\t\t\t\tthis.oldItemId = this.oldItemIndex != -1 ? this.itemIds[this.oldItemIndex] : null;\n\t\t\t\tthis.newItemId = this.newItemIndex != -1 ? this.itemIds[this.newItemIndex] : null;\n\t\t\t}\n\n\t\t\tthis.dispatchPagerEvent(SwitcherEvent.CHANGE, this.onChange, useTransition);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic gotoById(itemId:string, useTransition:boolean = true):boolean {\n\t\t\tconst itemIndex:number = this.itemIndexById.hasOwnProperty(itemId) ? this.itemIndexById[itemId] : -1;\n\t\t\treturn this.gotoByIndex(itemIndex, useTransition);\n\t\t}\n\n\t\tpublic prev(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.newItemIndex - 1;\n\t\t\tif (this.isLoopEnabled && itemIndex < 0) itemIndex = this.itemCount - 1;\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.PREV, this.onPrev, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic next(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.newItemIndex + 1;\n\t\t\tif (this.isLoopEnabled && itemIndex >= this.itemCount) itemIndex = 0;\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.NEXT, this.onNext, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tprivate dispatchPagerEvent(eventType:string, callback:(event:SwitcherEvent<T>) => void, useTransition:boolean):void {\n\t\t\tconst oldItemId:T = (this.itemIds && this.oldItemIndex != -1) ? this.itemIds[this.oldItemIndex] : null;\n\t\t\tconst newItemId:T = (this.itemIds && this.newItemIndex != -1) ? this.itemIds[this.newItemIndex] : null;\n\n\t\t\tconst event:SwitcherEvent<T> = new SwitcherEvent<T>(eventType, this, this.newItemIndex, this.oldItemIndex, this.newItemId, this.oldItemId, useTransition);\n\t\t\tif (callback) {\n\t\t\t\tcallback(event);\n\t\t\t}\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsLoopEnabled():boolean { return this.isLoopEnabled; }\n\t\tpublic setIsLoopEnabled(value:boolean):void { this.isLoopEnabled = value; }\n\t\tprivate isLoopEnabled:boolean;\n\n\t\tpublic getNewItemIndex():number { return this.newItemIndex; }\n\t\tprivate newItemIndex:number;\n\n\t\tpublic getOldItemIndex():number { return this.oldItemIndex; }\n\t\tprivate oldItemIndex:number;\n\n\t\tpublic getItemCount():number { return this.itemCount; }\n\t\tprivate itemCount:number;\n\n\t\tpublic getNewItemId():T { return this.newItemId; }\n\t\tprivate newItemId:T;\n\n\t\tpublic getOldItemId():T { return this.oldItemId; }\n\t\tprivate oldItemId:T;\n\n\t\tpublic getItemIds():T[] { return this.itemIds; }\n\t\tprivate itemIds:T[];\n\n\t\tprivate itemIndexById:Hash<number>;\n\n\t\tpublic onChange:(event:SwitcherEvent<T>) => void;\n\t\tpublic onPrev:(event:SwitcherEvent<T>) => void;\n\t\tpublic onNext:(event:SwitcherEvent<T>) => void;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\texport class SwitcherEvent<T = string> extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static PREV:string = 'prev';\n\t\tpublic static NEXT:string = 'next';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any, newItemIndex:number, oldItemIndex:number, newItemId:T, oldItemId:T, useTransition:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.newItemIndex = newItemIndex;\n\t\t\tthis.oldItemIndex = oldItemIndex;\n\t\t\tthis.newItemId = newItemId;\n\t\t\tthis.oldItemId = oldItemId;\n\t\t\tthis.useTransition = useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SwitcherEvent<T> {\n\t\t\treturn new SwitcherEvent<T>(this.getType(), this.getTarget(), this.newItemIndex, this.oldItemIndex, this.newItemId, this.oldItemId, this.useTransition);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SwitcherEvent] type = ' + this.getType() + ', ' + this.oldItemIndex + ' -> ' + this.newItemIndex + ', transition = ' + this.useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic newItemIndex:number;\n\t\tpublic oldItemIndex:number;\n\t\tpublic newItemId:T;\n\t\tpublic oldItemId:T;\n\t\tpublic useTransition:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class LoHi extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(lowThreshold:number, highThreshold:number, initValue:number = 0) {\n\t\t\tsuper();\n\n\t\t\tthis.lowThreshold = lowThreshold;\n\t\t\tthis.highThreshold = highThreshold;\n\t\t\tthis.isHigh = false;\n\t\t\tthis._set(initValue, false);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * 新しい入力値を設定する\n\t\t * @param {number} value 入力値\n\t\t * @returns {boolean} 結果が更新されればtrue\n\t\t */\n\t\tpublic set(value:number):boolean {\n\t\t\treturn this._set(value, true);\n\t\t}\n\n\t\tpublic getIsHigh():boolean {\n\t\t\treturn this.isHigh;\n\t\t}\n\n\t\tpublic getValue():number {\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic getLowThreshold():number {\n\t\t\treturn this.lowThreshold;\n\t\t}\n\n\t\tpublic getHighThreshold():number {\n\t\t\treturn this.highThreshold;\n\t\t}\n\n\t\tpublic setLowThreshold(threshold:number):void {\n\t\t\tthis.lowThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tpublic setHighThreshold(threshold:number):void {\n\t\t\tthis.highThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tprivate _set(value:number, dispatchEvent:boolean):boolean {\n\t\t\tthis.value = value;\n\t\t\tif (this.isHigh && this.value < this.lowThreshold) {\n\t\t\t\tthis.isHigh = false;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.LOW, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (!this.isHigh && this.value > this.highThreshold) {\n\t\t\t\tthis.isHigh = true;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.HIGH, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate lowThreshold:number;\n\t\tprivate highThreshold:number;\n\t\tprivate value:number;\n\t\tprivate isHigh:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\texport class LoHiEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static LOW:string = 'low';\n\t\tpublic static HIGH:string = 'high';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any, isHigh:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.isHigh = isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():LoHiEvent {\n\t\t\treturn new LoHiEvent(this.getType(), this.getTarget(), this.isHigh);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[LoHiEvent] type = ' + this.getType() + ', isHigh = ' + this.isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic isHigh:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class EasingValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, easing:number = 0.1, tolerance:number = 0) {\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.easing = easing;\n\t\t\tthis.tolerance = tolerance;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tconst d:number = this.target - this.value;\n\t\t\t\tif (this.tolerance > 0 && Math.abs(d) <= this.tolerance) {\n\t\t\t\t\tthis.value = this.target;\n\t\t\t\t} else {\n\t\t\t\t\tthis.value += d * this.easing;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():EasingValue {\n\t\t\tconst v:EasingValue = new EasingValue(this.value, this.easing, this.tolerance);\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic easing:number;\n\t\tpublic tolerance:number;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class SpringValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, spring:number = 0.1, friction:number = 0.9) {\n\t\t\tthis.acceleration = 0;\n\t\t\tthis.velocity = 0;\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.spring = spring;\n\t\t\tthis.friction = friction;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tthis.acceleration = (this.target - this.value) * this.spring;\n\t\t\t\tthis.velocity += this.acceleration;\n\t\t\t\tthis.velocity *= this.friction;\n\t\t\t\tthis.value += this.velocity;\n\t\t\t} else {\n\t\t\t\tthis.acceleration = 0;\n\t\t\t\tthis.velocity = 0;\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():SpringValue {\n\t\t\tconst v:SpringValue = new SpringValue(this.value, this.spring, this.friction);\n\t\t\tv.acceleration = this.acceleration;\n\t\t\tv.velocity = this.velocity;\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic velocity:number;\n\t\tpublic acceleration:number;\n\t\tpublic spring:number;\n\t\tpublic friction:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tthis._value = (this._value * this._count + n) / ++this._count;\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _count:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleMovingAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxCount:number) {\n\t\t\tthis.maxCount = this._maxCount = maxCount;\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._count = this._maxCount;\n\n\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\tthis._value -= oldest;\n\n\t\t\t\tconst latest:number = n / this._maxCount;\n\t\t\t\tthis._value += latest;\n\n\t\t\t\tthis.values.push(latest);\n\n\t\t\t} else {\n\t\t\t\tthis._value *= (this._count - 1);\n\t\t\t\tthis._value += n;\n\t\t\t\tthis._value /= this._count;\n\n\t\t\t\tthis.values.push(n / this._maxCount);\n\t\t\t}\n\n\t\t\t/*\n\t\t\tthis._values.push(n);\n\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._values.shift();\n\t\t\t\tthis._count = this._maxCount;\n\t\t\t}\n\n\t\t\tthis._value = 0;\n\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\tthis._value += this._values[i];\n\t\t\t}\n\t\t\tthis._value /= this._count;\n\t\t\t*/\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class MaxValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxLatestCount:number = 0) {\n\t\t\tthis.maxLatestCount = this._maxLatestCount = maxLatestCount;\n\t\t\tthis.value = this._value = -Number.MAX_VALUE;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (this._maxLatestCount > 0) {\n\t\t\t\tif (++this._count > this._maxLatestCount) {\n\t\t\t\t\tthis._count = this._maxLatestCount;\n\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\t\tif (this._value > oldest) {\n\t\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._value = -Number.MAX_VALUE;\n\t\t\t\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\t\t\t\tconst v:number = this.values[i];\n\t\t\t\t\t\t\tif (this._value < v) {\n\t\t\t\t\t\t\t\tthis._value = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++this._count;\n\t\t\t\tif (this._value < n) {\n\t\t\t\t\tthis._value = n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxLatestCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxLatestCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class Circular {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class AnimationFrameTicker extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * requestAnimationFrameベースでのFPSタイマー\n\t\t * @param {number} frameRate 目標フレームレート（0の場合はフレームレートを制限しない）\n\t\t * @param {number} tolerance 許容誤差（frameRateに対する割合）\n\t\t */\n\t\tconstructor(frameRate:number = 0, tolerance:number = 0.1) {\n\t\t\tsuper();\n\n\t\t\tthis.targetFrameRate = frameRate;\n\t\t\tthis.interval = 1000 / this.targetFrameRate;\n\n\t\t\tthis.tolerance = tolerance;\n\t\t\tthis.toleranceDuration = this.interval * this.tolerance;\n\n\t\t\tthis.isRunning = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.frameStartTime = Time.now();\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\twindow.cancelAnimationFrame(this.requestId);\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getTargetFrameRate():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tprivate setInterval(callback:Function):number {\n\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t}\n\n\t\tprivate clearInterval(requestId:number):void {\n\t\t\twindow.clearInterval(requestId);\n\t\t}\n\n\t\tprivate updateHandler = ():void => {\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t\tif (this.targetFrameRate > 0) {\n\t\t\t\tconst currentTime:number = Time.now();\n\t\t\t\tconst elapsedTime:number = currentTime - this.frameStartTime;\n\t\t\t\tif (elapsedTime >= this.interval - this.toleranceDuration) {\n\t\t\t\t\t//trace('[AnimationFrameTicker] frameRate : ' + (1000 / elapsedTime));\n\t\t\t\t\tthis.frameStartTime = currentTime;\n\t\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate requestId:number;\n\n\t\tprivate targetFrameRate:number;\n\t\tprivate tolerance:number;\n\t\tprivate toleranceDuration:number;\n\t\tprivate interval:number;\n\t\tprivate frameStartTime:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class AnimationFrameTickerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():AnimationFrameTickerEvent {\n\t\t\treturn new AnimationFrameTickerEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[AnimationFrameTickerEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class Timer extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = Time.now();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = Time.now() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = Time.now();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return Time.now() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class TimerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.getType(), this.getTarget(), this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[TimerEvent] type = ' + this.getType() + ', elapsedCount = ' + this.elapsedCount + ', repeatCount=' + this.repeatCount + ', restCount=' + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic elapsedCount:number;\n\t\tpublic repeatCount:number;\n\t\tpublic restCount:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\texport type CompleteFunction = (content:any, info?:any) => void;\n\texport type ErrorFunction = (info?:any) => void;\n\n\texport class FileLoader extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(totalThreadCount:number = 3) {\n\t\t\tsuper();\n\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.currentThreadCount = 0;\n\t\t\tthis.totalThreadCount = totalThreadCount;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.handlersByType = {};\n\n\t\t\ttrace('[FileLoader] totalThreadCount : ' + this.totalThreadCount);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic require(url:string, type:string, id:string = ''):string {\n\t\t\treturn this.addQuery(type, url, {}, id);\n\t\t}\n\n\t\tprivate addQuery(type:string, url:string, param:any, id:string = ''):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:FileQuery = new FileQuery();\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\n\t\t\tif (id != '') {\n\t\t\t\tquery.id = id;\n\t\t\t} else {\n\t\t\t\tquery.id = String(FileLoader.id);\n\t\t\t\t++FileLoader.id;\n\t\t\t}\n\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tconst progress = this.currentCount / this.totalCount;\n\t\t\tif (this.currentCount == 0) {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.START, this, progress, this.currentCount, this.totalCount));\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.PROGRESS, this, progress, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\twhile (this.currentThreadCount < this.totalThreadCount) {\n\t\t\t\tif (this.loadingQueryIndex + 1 < this.totalCount) {\n\t\t\t\t\t// add thread\n\t\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\t\tquery.isLoading = true;\n\t\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\t\tif (handler) {\n\t\t\t\t\t\thandler.load(query.url, (content:any, info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content, info);\n\t\t\t\t\t\t},(info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadErrorHandler(query, info);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\t}\n\t\t\t\t\t// continue loop\n\n\t\t\t\t} else {\n\t\t\t\t\t// all finished\n\t\t\t\t\tthis.isLoading_ = false;\n\t\t\t\t\tthis.loadingQueries = [];\n\t\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.COMPLETE, this, progress, this.currentCount, this.totalCount));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\tif (handler) {\n\t\t\t\t\thandler.load(query.url, (content:any):void => {\n\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content);\n\t\t\t\t\t},(message:string = ''):void => {\n\t\t\t\t\t\tthis.fileLoadErrorHandler(query, message);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\tthis.next();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.dispatchEvent(new FileLoaderEvent(FileLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tpublic addHandler(handler:IFileHandler):void {\n\t\t\tthis.handlersByType[handler.getType()] = handler;\n\t\t}\n\n\t\tprivate fileLoadCompleteHandler = (query:FileQuery, content:any, info:object = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tquery.content = content;\n\t\t\tif (query.param.onLoad) {\n\t\t\t\tquery.param.onLoad(content, info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderSuccessEvent(FileLoaderSuccessEvent.SUCCESS, this, content, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tprivate fileLoadErrorHandler = (query:FileQuery, info:any = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tif (query.param.onError) {\n\t\t\t\tquery.param.onError(info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderErrorEvent(FileLoaderErrorEvent.ERROR, this, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tpublic getQueryByQueryId(queryId:string):FileQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\t\tpublic getQueryByUrl(url:string):FileQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\t\tpublic isLoading():boolean {\n\t\t\treturn this.isLoading_;\n\t\t}\n\n\t\tpublic getCurrentCount():number {\n\t\t\treturn this.currentCount;\n\t\t}\n\n\t\tpublic getTotalCount():number {\n\t\t\treturn this.totalCount;\n\t\t}\n\n\t\tpublic getContentByUrl<T = any>(url:string):T {\n\t\t\treturn this.queriesByUrl[url].content;\n\t\t}\n\n\t\tpublic getContentByQueryId<T = any>(textureId:string):T {\n\t\t\treturn this.queriesByQueryId[textureId].content;\n\t\t}\n\n\t\tpublic getCurrentThreadCount():number {\n\t\t\treturn this.currentThreadCount;\n\t\t}\n\n\t\tpublic getTotalThreadCount():number {\n\t\t\treturn this.totalThreadCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isLoading_:boolean;\n\n\t\tprivate currentCount:number;\n\t\tprivate totalCount:number;\n\n\t\tprivate currentThreadCount:number;\n\t\tprivate totalThreadCount:number;\n\n\t\tprivate loadingQueries:FileQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:util.Hash<FileQuery>;\n\t\tprivate queriesByUrl:util.Hash<FileQuery>;\n\n\t\tprivate handlersByType:util.Hash<IFileHandler>;\n\n\t\tprivate static id:number = 0;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderProgressEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic START:string = 'start';\n\t\tstatic PROGRESS:string = 'progress';\n\t\tstatic COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, progress:number = 0, loadedCount:number = 0, totalCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderProgressEvent {\n\t\t\treturn new FileLoaderProgressEvent(this.getType(), this.getTarget(), this.progress, this.loadedCount, this.totalCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderProgressEvent] type = ' + this.getType() + ', progress = ' + this.progress + ', loadedCount = ' + this.loadedCount + ', totalCount = ' + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic progress:number;\n\t\tpublic loadedCount:number;\n\t\tpublic totalCount:number;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderSuccessEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SUCCESS:string = 'success';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, content:any, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.content = content;\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderSuccessEvent {\n\t\t\treturn new FileLoaderSuccessEvent(this.getType(), this.getTarget(), this.content, this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderSuccessEvent] type = ' + this.getType() + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic content:any;\n\t\tpublic info:any;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderErrorEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic ERROR:string = 'error';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderErrorEvent {\n\t\t\treturn new FileLoaderErrorEvent(this.getType(), this.getTarget(), this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderErrorEvent] type = ' + this.getType() + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic info:any;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileQuery {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.view {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Logger = alm.debug.Logger;\n\n\texport abstract class View<T = any> extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null, id:string = null) {\n\t\t\tsuper();\n\t\t\tthis.id = id != null ? id : String(View.viewCount);\n\t\t\tthis.view = view;\n\t\t\tthis.name = '';\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\n\t\t\tif (View.viewsById[this.id]) {\n\t\t\t\tLogger.warn('view id \\'' + this.id + '\\' is duplicate');\n\t\t\t}\n\t\t\tView.viewsById[this.id] = this;\n\t\t\t++View.viewCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\n\t\t\t//if (View.viewsById[this.id] == null) {\n\t\t\t//\tView.viewsById[this.id] = this;\n\t\t\t//}\n\n\t\t\tthis.view = this.implInitialize();\n\t\t\tif (this.isInitializing) {\n\t\t\t\tthrowError(this.name || this, 'view is not assigned', !this.view);\n\t\t\t\tif (this.autoHideWithInit) {\n\t\t\t\t\tthis.hide(false);\n\t\t\t\t}\n\t\t\t\tthis.isInitializing = false;\n\t\t\t\tthis.isInitialized = true;\n\t\t\t} else {\n\t\t\t\t// finalized while initializing\n\t\t\t\tthis.view = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReadying || this.isReadied) return;\n\t\t\tthis.isReadying = true;\n\t\t\tthrowError(this.name || this, 'ready() must be called after initialize()', !this.isInitialized);\n\t\t\tthis.implReady();\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = true;\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tif (!this.isInitializing && !this.isInitialized) return;\n\t\t\tthis.implFinalize();\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\n\t\t\tdelete View.viewsById[this.id];\n\t\t\tView.viewsById[this.id] = null;\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, 'getShowCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, 'getShowCommand() is must be called after ready()', this.isReadying|| !this.isReadied);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, 'getHideCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, 'getHideCommand() is must be called after ready()', this.isReadying || !this.isReadied);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getIsInitializing():boolean {\n\t\t\treturn this.isInitializing;\n\t\t}\n\n\t\tpublic getIsInitialized():boolean {\n\t\t\treturn this.isInitialized;\n\t\t}\n\n\t\tpublic getIsReadying():boolean {\n\t\t\treturn this.isReadying;\n\t\t}\n\n\t\tpublic getIsReadied():boolean {\n\t\t\treturn this.isReadied;\n\t\t}\n\n\t\tpublic getIsShowing():boolean {\n\t\t\treturn this.isShowing;\n\t\t}\n\n\t\tpublic getIsShown():boolean {\n\t\t\treturn this.isShown;\n\t\t}\n\n\t\tpublic getIsHiding():boolean {\n\t\t\treturn this.isHiding;\n\t\t}\n\n\t\tpublic getIsHidden():boolean {\n\t\t\treturn !this.isShown;\n\t\t}\n\n\t\tpublic getId():string {\n\t\t\treturn this.id;\n\t\t}\n\n\t\tpublic getView():T {\n\t\t\treturn this.view;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic setName(value:string):void {\n\t\t\tthis.name = value;\n\t\t}\n\n\t\tpublic getAutoHideWithInit():boolean {\n\t\t\treturn this.autoHideWithInit;\n\t\t}\n\n\t\tpublic setAutoHideWithInit(value:boolean):void {\n\t\t\tthis.autoHideWithInit = value;\n\t\t}\n\n\n\n\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\tpublic static getViewById(id:string):View {\n\t\t\treturn View.viewsById[id];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate id:string;\n\t\tprivate view:T;\n\t\tprivate name:string;\n\t\tprivate autoHideWithInit:boolean;\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t\tprivate isInitializing:boolean;\n\t\tprivate isInitialized:boolean;\n\t\tprivate isReadying:boolean;\n\t\tprivate isReadied:boolean;\n\t\tprivate isShowing:boolean;\n\t\tprivate isShown:boolean;\n\t\tprivate isHiding:boolean;\n\n\t\tprivate static viewCount:number = 0;\n\t\tprivate static viewsById:util.Hash<View> = {};\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.view {\n\n\texport class ButtonBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:IButton, hitArea:HTMLElement = null, isHoverCursorEnabled:boolean = true, isPreventDefaultEnabled:boolean = true, isStopPropagationEnabled:boolean = true) {\n\t\t\tthis.target = target;\n\t\t\tthis.hitArea = null;\n\t\t\tthis.isHoverCursorEnabled = isHoverCursorEnabled;\n\t\t\tthis.isPreventDefaultEnabled = isPreventDefaultEnabled;\n\t\t\tthis.isStopPropagationEnabled = isStopPropagationEnabled;\n\t\t\tthis.isEnabled = true;\n\t\t\tthis.isOver = false;\n\t\t\tthis.isDown = false;\n\t\t\tthis.isOverInternal = false;\n\t\t\tthis.isDownInternal = false;\n\t\t\tthis.defaultMouseCursor = '';\n\n\t\t\tthis.setHitArea(hitArea);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic over(useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isOver) return;\n\t\t\t\tthis.isOver = true;\n\t\t\t\tthis.target.implButtonOver(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic out(useTransition:boolean = true):void {\n\t\t\tthis._out(true, useTransition);\n\t\t}\n\n\t\tprivate _out(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isOver) return;\n\t\t\t\tthis.isOver = false;\n\t\t\t\tthis.target.implButtonOut(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic down(useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isDown) return;\n\t\t\t\tthis.isDown = true;\n\t\t\t\tthis.target.implButtonDown(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic up(useTransition:boolean = true):void {\n\t\t\tthis._up(true, useTransition);\n\t\t}\n\n\t\tprivate _up(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isDown) return;\n\t\t\t\tthis.isDown = false;\n\t\t\t\tthis.target.implButtonUp(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic click(useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled) {\n\t\t\t\tthis.target.implButtonClick(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tprivate on():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.addEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.addEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.addEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.addEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.addEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.addEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.addEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.addEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tprivate off():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.removeEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.removeEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.removeEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.removeEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.removeEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.removeEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tpublic getIsEnabled():boolean {\n\t\t\treturn this.isEnabled;\n\t\t}\n\n\t\tpublic setIsEnabled(value:boolean, useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled != value) {\n\t\t\t\tthis.isEnabled = value;\n\t\t\t\tif (this.isEnabled) {\n\t\t\t\t\tif (this.isOverInternal) {\n\t\t\t\t\t\tthis.over();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDownInternal) {\n\t\t\t\t\t\tthis.down();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.isOver) {\n\t\t\t\t\t\tthis._out(false);\n\t\t\t\t\t\tthis.isOverInternal = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDown) {\n\t\t\t\t\t\tthis._up(false);\n\t\t\t\t\t\tthis.isDownInternal = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.target.implButtonChangeEnabled(this.isEnabled, useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsOver():boolean {\n\t\t\treturn this.isOver;\n\t\t}\n\n\t\tpublic getIsDown():boolean {\n\t\t\treturn this.isDown;\n\t\t}\n\n\t\tpublic getHitArea():HTMLElement {\n\t\t\treturn this.hitArea;\n\t\t}\n\n\t\tpublic setHitArea(hitArea:HTMLElement):void {\n\t\t\tif (this.hitArea !== hitArea) {\n\t\t\t\tthis.off();\n\t\t\t\tthis.hitArea = hitArea;\n\t\t\t\tthis.on();\n\t\t\t}\n\t\t}\n\n\t\tpublic clearHitArea():void {\n\t\t\tthis.setHitArea(null);\n\t\t}\n\n\t\tpublic getIsPreventDefaultEnabled():boolean {\n\t\t\treturn this.isPreventDefaultEnabled;\n\t\t}\n\n\t\tpublic setIsPreventDefaultEnabled(enabled:boolean):void {\n\t\t\tthis.isPreventDefaultEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsStopPropagationEnabled():boolean {\n\t\t\treturn this.isStopPropagationEnabled;\n\t\t}\n\n\t\tpublic setIsStopPropagationEnabled(enabled:boolean):void {\n\t\t\tthis.isStopPropagationEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsHoverCursorEnabled():boolean {\n\t\t\treturn this.isHoverCursorEnabled;\n\t\t}\n\n\t\tpublic setIsHoverCursorEnabled(enabled:boolean):void {\n\t\t\tthis.isHoverCursorEnabled = enabled;\n\t\t}\n\n\t\tprivate applyMouseCursor():void {\n\t\t\tif (this.isHoverCursorEnabled) {\n\t\t\t\tif (this.isOverInternal && this.isEnabled && this.hitArea != null) {\n\t\t\t\t\tthis.defaultMouseCursor = this.hitArea.style.cursor;\n\t\t\t\t\tthis.hitArea.style.cursor = 'pointer';\n\t\t\t\t} else {\n\t\t\t\t\tthis.hitArea.style.cursor = this.defaultMouseCursor != '' ? this.defaultMouseCursor : 'auto';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// --------------------------------------------------\n\t\t// Mouse Event\n\n\t\tprivate mouseOverHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.over();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseOutHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.out();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseDownHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate mouseUpHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\t\tprivate clickHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.click();\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Touch Event\n\n\t\tprivate touchStartHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate touchEndHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t\tthis.click();\n\t\t};\n\n\t\tprivate touchCancelHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:IButton;\n\t\tprivate hitArea:HTMLElement;\n\t\tprivate isEnabled:boolean;\n\t\tprivate isOver:boolean;\n\t\tprivate isDown:boolean;\n\t\tprivate isOverInternal:boolean;\n\t\tprivate isDownInternal:boolean;\n\t\tprivate isPreventDefaultEnabled:boolean;\n\t\tprivate isStopPropagationEnabled:boolean;\n\t\tprivate isHoverCursorEnabled:boolean;\n\t\tprivate defaultMouseCursor:string;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.view {\n\n\texport class SelectionBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:ISelection) {\n\t\t\tthis.target = target;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic select(useTransition:boolean = true):void {\n\t\t\tif (this.isSelected) return;\n\t\t\tthis.isSelected = true;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic deselect(useTransition:boolean = true):void {\n\t\t\tif (!this.isSelected) return;\n\t\t\tthis.isSelected = false;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic getIsSelected():boolean {\n\t\t\treturn this.isSelected;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:ISelection;\n\t\tprivate isSelected:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\t// Device\n\t\t\tthis.isTablet = (u.indexOf('windows') != -1 && u.indexOf('touch') != -1)\n\t\t\t\t|| u.indexOf('ipad') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') == -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('tablet') != -1)\n\t\t\t\t|| u.indexOf('kindle') != -1\n\t\t\t\t|| u.indexOf('silk') != -1\n\t\t\t\t|| u.indexOf('playbook') != -1;\n\n\t\t\tthis.isMobile = (u.indexOf('windows') != -1 && u.indexOf('phone') != -1)\n\t\t\t\t|| u.indexOf('iphone') != -1\n\t\t\t\t|| u.indexOf('ipod') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| u.indexOf('blackberry') != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\t// OS\n\t\t\tthis.isIOS = u.indexOf('ipad') != -1 || u.indexOf('iphone') != -1 || u.indexOf('ipod') != -1;\n\t\t\tthis.isAndroid = u.indexOf('android') != -1 && u.indexOf('mobile') != -1;\n\n\t\t\t// Browser\n\t\t\tif(u.indexOf('msie') != -1 || u.indexOf('trident') != -1) {\n\t\t\t\tthis.isIE = true;\n\t\t\t} else if(u.indexOf('edge') != -1) {\n\t\t\t\tthis.isEdge = true;\n\t\t\t} else if(u.indexOf('chrome') != -1) {\n\t\t\t\tthis.isChrome = true;\n\t\t\t} else if(u.indexOf('safari') != -1) {\n\t\t\t\tthis.isSafari = true;\n\t\t\t} else if(u.indexOf('firefox') != -1) {\n\t\t\t\tthis.isFireFox = true;\n\t\t\t} else if(u.indexOf('opera') != -1) {\n\t\t\t\tthis.isOpera = true;\n\t\t\t} else {\n\t\t\t\tthis.isUnknownBrowser = true;\n\t\t\t}\n\n\t\t\t// Function\n\t\t\tthis.isTouchEnabled = (typeof window.ontouchstart) !== 'undefined';\n\t\t\tthis.isDownloadEnabled = !this.isIOS;\n\n\t\t\t// Resolution\n\t\t\tthis.devicePixelRatio = window.devicePixelRatio;\n\t\t\tthis.isRetina = this.devicePixelRatio > 1;\n\t\t}\n\n\t\t// --------------------\n\t\t// Device\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\t// --------------------\n\t\t// OS\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\t// --------------------\n\t\t// Browser\n\n\t\tpublic static getIsIE():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIE;\n\t\t}\n\n\t\tpublic static getIsEdge():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isEdge;\n\t\t}\n\n\t\tpublic static getIsChrome():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isChrome;\n\t\t}\n\n\t\tpublic static getIsSafari():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isSafari;\n\t\t}\n\n\t\tpublic static getIsFireFox():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isFireFox;\n\t\t}\n\n\t\tpublic static getIsOpera():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isOpera;\n\t\t}\n\n\t\tpublic static getIsUnknownBrowser():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isUnknownBrowser;\n\t\t}\n\n\t\t// --------------------\n\t\t// Function\n\n\t\tpublic static getIsTouchEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTouchEnabled;\n\t\t}\n\n\t\tpublic static getIsDownloadEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDownloadEnabled;\n\t\t}\n\n\t\t// --------------------\n\t\t// Resolution\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\t\tpublic static getDevicePixelRatio():number {\n\t\t\tthis.initialize();\n\t\t\treturn this.devicePixelRatio;\n\t\t}\n\n\t\tpublic static getDpi():number {\n\t\t\tif (this.dpi == -1) {\n\t\t\t\tconst div:HTMLElement = document.createElement('div');\n\t\t\t\tdiv.setAttribute('style', 'height:1in;left:-100%;top:-100%;position:absolute;width:1in;');\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\tthis.dpi = div.offsetHeight;\n\t\t\t\tdocument.body.removeChild(div);\n\t\t\t}\n\t\t\treturn this.dpi;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean = false;\n\t\tprivate static isTablet:boolean = false;\n\t\tprivate static isMobile:boolean = false;\n\n\t\tprivate static isIOS:boolean = false;\n\t\tprivate static isAndroid:boolean = false;\n\n\t\tprivate static isIE:boolean = false;\n\t\tprivate static isEdge:boolean = false;\n\t\tprivate static isChrome:boolean = false;\n\t\tprivate static isSafari:boolean = false;\n\t\tprivate static isFireFox:boolean = false;\n\t\tprivate static isOpera:boolean = false;\n\t\tprivate static isUnknownBrowser:boolean = false;\n\n\t\tprivate static isTouchEnabled:boolean = false;\n\t\tprivate static isDownloadEnabled:boolean = false;\n\n\t\tprivate static isRetina:boolean = false;\n\t\tprivate static devicePixelRatio:number = 1;\n\t\tprivate static dpi:number = -1;\n\n\t\tprivate static isInitialized:boolean = false;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\timport Time = alm.util.Time;\n\n\texport class LocalStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データをCookieに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param minutes 保存期間（分）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? Time.now() + milliseconds : -1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (Time.now() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem('__CKECK__', '__CKECK__');\n\t\t\t\t\tlocalStorage.removeItem('__CKECK__');\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\t// https://github.com/nfriend/ts-keycode-enum\n\texport enum KeyCode {\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n\n\n\n\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] start');\n\n\t\t\twindow.addEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.addEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] stop');\n\n\t\t\twindow.removeEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.removeEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:util.Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class KeyWatcherEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = 'keyUp';\n\t\tstatic KEY_DOWN:string = 'keyDown';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, originalEvent:KeyboardEvent = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.key = this.originalEvent.key;\n\t\t\tthis.keyCode = this.originalEvent.keyCode;\n\t\t\tthis.altKey = this.originalEvent.altKey;\n\t\t\tthis.ctrlKey = this.originalEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.originalEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.getType(), this.getTarget(), this.originalEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[KeyWatcherEvent] type = ' + this.getType() + ', key = ' + this.key + ', keyCode = ' + this.keyCode + ', altKey = ' + this.altKey + ', ctrlKey = ' + this.ctrlKey + ', shiftKey = ' + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic originalEvent:KeyboardEvent;\n\t\tpublic key:string;\n\t\tpublic keyCode:number;\n\t\tpublic altKey:boolean;\n\t\tpublic ctrlKey:boolean;\n\t\tpublic shiftKey:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start(target:Window = null):void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] start');\n\n\t\t\tthis.window = target || window;\n\n\t\t\tthis.window.addEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('scroll', this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] stop');\n\n\t\t\tthis.window.removeEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('scroll', this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tthis.windowWidth = this.window.innerWidth;\n\t\t\tthis.windowHeight = this.window.innerHeight;\n\n\t\t\tthis.scrollTop = (this.window.pageYOffset !== undefined) ? this.window.pageYOffset : document.documentElement.scrollTop;\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\t\tprivate static resize(event:Event):void {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.RESIZE, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\tprivate static windowResizeHandler = (event:Event):void => {\n\t\t\tif (!DeviceInfo.getIsDesktop() && WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.resize');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowOrientationChangeHandler = (event:Event):void => {\n\t\t\tif (DeviceInfo.getIsDesktop() || !WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.orientationchange');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowScrollHandler = (event:Event):void => {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.SCROLL, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getWindow():Window { return this.window; }\n\t\tprivate static window:Window = null;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tpublic static getIsMobileOrientationResize():boolean { return this.isMobileOrientationResize; }\n\t\tpublic static setIsMobileOrientationResize(value:boolean):void { this.isMobileOrientationResize = value; }\n\t\tprivate static isMobileOrientationResize:boolean = true;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcherEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = 'scroll';\n\t\tstatic RESIZE:string = 'resize';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, originalEvent:Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():WindowWatcherEvent {\n\t\t\treturn new WindowWatcherEvent(this.getType(), this.getTarget(), this.originalEvent, this.scrollTop, this.scrollBottom, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[WindowWatcherEvent] type = ' + this.getType() + ', scrollTop = ' + this.scrollTop + ', scrollBottom = ' + this.scrollBottom + ', windowWidth = ' + this.windowWidth + ', windowHeight = ' + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic originalEvent:Event;\n\t\tpublic scrollTop:number;\n\t\tpublic scrollBottom:number;\n\t\tpublic windowWidth:number;\n\t\tpublic windowHeight:number;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Scene extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.state = SceneState.Idling;\n\t\t\tthis.parent = null;\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\tthis.isEntered = false;\n\t\t\tthis.onLoad = null;\n\t\t\tthis.onUnload = null;\n\t\t\tthis.onArrive = null;\n\t\t\tthis.onLeave = null;\n\t\t\tthis.onAscend = null;\n\t\t\tthis.onDescend = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child name \\'' + childName + '\\' is already contained.');\n\t\t\t\t} else {\n\t\t\t\t\t++this.numChildren;\n\t\t\t\t\tchild.parent = this;\n\t\t\t\t\tthis.childrenByName[childName] = child;\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic removeChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\t--this.numChildren;\n\t\t\t\t\tchild.parent = null;\n\t\t\t\t\tdelete this.childrenByName[childName];\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child name \\'' + childName + '\\' is not contained.');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic addChildren(children:Scene[]):Scene[] {\n\t\t\tconst addedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.addChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\taddedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn addedChildren;\n\t\t}\n\n\t\tpublic removeChildren(children:Scene[]):Scene[] {\n\t\t\tconst removedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.removeChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\tremovedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn removedChildren;\n\t\t}\n\n\t\tpublic removeAllChildren():Scene[] {\n\t\t\tconst children:Scene[] = [];\n\t\t\tlet child:Scene;\n\t\t\tfor (let name in this.childrenByName) {\n\t\t\t\tchild = this.childrenByName[name];\n\t\t\t\tchild.parent = null;\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\treturn children;\n\t\t}\n\n\t\tpublic contains(child:Scene|string):boolean {\n\t\t\tif (child) {\n\t\t\t\treturn this.childrenByName[typeof child == 'string' ? child : child.name] != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getState():SceneState {\n\t\t\treturn this.state;\n\t\t}\n\n\t\tpublic getLastState():SceneState {\n\t\t\treturn this.lastState;\n\t\t}\n\n\t\tpublic getParent():Scene {\n\t\t\treturn this.parent;\n\t\t}\n\n\t\tpublic getChildByName(name:string):Scene {\n\t\t\treturn this.childrenByName[name];\n\t\t}\n\n\t\tpublic getNumChildren():number {\n\t\t\treturn this.numChildren;\n\t\t}\n\n\t\tpublic getManager():SceneManager {\n\t\t\tif (this.parent) {\n\t\t\t\treturn this.parent.getManager();\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getManager was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getPath():string {\n\t\t\tconst manager:SceneManager = this.getManager();\n\t\t\tif (manager) {\n\t\t\t\tconst names:string[] = [this.name];\n\t\t\t\tlet scene:Scene = this;\n\t\t\t\twhile (scene = scene.parent) {\n\t\t\t\t\tnames.unshift(scene.name);\n\t\t\t\t}\n\t\t\t\treturn manager.getScenePathByNames(names);\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getPath was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic gotoScene(path:string):void {\n\t\t\tthis.getManager().goto(path);\n\t\t}\n\n\n\n\n\n\t\tpublic _load(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Loading;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLoad) == 'function' ? this.onLoad() : this.implOnLoad();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _unload(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Unloading;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onUnload) == 'function' ? this.onUnload() : this.implOnUnload();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _arrive(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Arriving;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onArrive) == 'function' ? this.onArrive() : this.implOnArrive();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _leave(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Leaving;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLeave) == 'function' ? this.onLeave() : this.implOnLeave();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _ascend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Ascending;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onAscend) == 'function' ? this.onAscend() : this.implOnAscend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _descend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Descending;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onDescend) == 'function' ? this.onDescend() : this.implOnDescend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\n\n\n\n\t\tprotected implOnLoad():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnUnload():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnArrive():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnLeave():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnAscend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnDescend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t// The callback function is called preferentially over the override\n\t\tpublic onLoad:() => cmd.Command;\n\t\tpublic onUnload:() => cmd.Command;\n\t\tpublic onArrive:() => cmd.Command;\n\t\tpublic onLeave:() => cmd.Command;\n\t\tpublic onAscend:() => cmd.Command;\n\t\tpublic onDescend:() => cmd.Command;\n\n\t\tprivate isEntered:boolean;\n\t\tprivate name:string;\n\t\tprivate state:SceneState;\n\t\tprivate lastState:SceneState;\n\t\tprivate parent:Scene;\n\t\tprivate childrenByName:alm.util.Hash<Scene>;\n\t\tprivate numChildren:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static LOAD:string = 'load';\n\t\tpublic static UNLOAD:string = 'unload';\n\t\tpublic static ARRIVE:string = 'arrive';\n\t\tpublic static LEAVE:string = 'leave';\n\t\tpublic static ASCEND:string = 'ascend';\n\t\tpublic static DESCEND:string = 'descend';\n\n\t\tpublic static LOAD_COMPLETE:string = 'loadComplete';\n\t\tpublic static UNLOAD_COMPLETE:string = 'unloadComplete';\n\t\tpublic static ARRIVE_COMPLETE:string = 'arriveComplete';\n\t\tpublic static LEAVE_COMPLETE:string = 'leaveComplete';\n\t\tpublic static ASCEND_COMPLETE:string = 'ascendComplete';\n\t\tpublic static DESCEND_COMPLETE:string = 'descendComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneEvent {\n\t\t\treturn new SceneEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport LoggerLevel = alm.debug.LoggerLevel;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class SceneManager extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string = '') {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.root = new core.RootScene(this);\n\t\t\tthis.currentScene = null;\n\n\t\t\tthis.waypoints = [];\n\t\t\tthis.waypointIndex = -1;\n\t\t\tthis.lastState = SceneState.Idling;\n\t\t\tthis.eventIndex = -1;\n\t\t\tthis.transferId = -1;\n\t\t\tthis.transferInfo = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tLogger.verbose('----- scene manager start -----');\n\t\t\tthis.goto('/');\n\t\t}\n\n\t\tpublic goto(path:string):void {\n\t\t\tpath = this.resolvePath(path);\n\n\t\t\t// Return if current destination and new destination is same.\n\t\t\tif (this.transferInfo && this.transferInfo.getDestinationPath() == path) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Build waypoints\n\t\t\tlet newWaypoints:core.Waypoint[] = [];\n\t\t\tif (this.waypointIndex != -1) {\n\t\t\t\tnewWaypoints = this.createWaypoints(this.waypoints[this.waypointIndex].getPath(), path);\n\t\t\t} else {\n\t\t\t\t// Init\n\t\t\t\tnewWaypoints = [new core.Waypoint('/', 0)];\n\t\t\t}\n\n\t\t\t// Transfer\n\t\t\tif (newWaypoints.length > 0) {\n\t\t\t\tconst isDestinationChanged:boolean = this.transferInfo != null;\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.waypointIndex = 0;\n\t\t\t\t\tthis.eventIndex = 0;\n\t\t\t\t\t++this.transferId;\n\t\t\t\t\tthis.waypoints = newWaypoints;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.verbose('destination is changed');\n\t\t\t\t\tLogger.verbose('waypoint index : ' + this.waypointIndex);\n\t\t\t\t\tthis.waypoints = this.waypoints.slice(0, this.waypointIndex + 1).concat(newWaypoints.slice(1));\n\t\t\t\t\tthis.setDirection(this.waypoints);\n\t\t\t\t\tthis.printWaypoint(this.waypoints);\n\t\t\t\t}\n\n\t\t\t\tthis.transferInfo = new SceneTransferInfo(this.transferId, this.waypoints[this.waypointIndex].getPath(), this.waypoints[this.waypoints.length - 1].getPath());\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_START, this));\n\t\t\t\t}\n\n\t\t\t\tthis.checkState();\n\t\t\t}\n\t\t}\n\n\t\tpublic resolvePath(path:string):string {\n\t\t\t// Relative to absolute\n\t\t\tif (path[0] != '/') {\n\t\t\t\tif (this.currentScene) {\n\t\t\t\t\tpath = this.currentScene.getPath() + '/' + path;\n\t\t\t\t} else {\n\t\t\t\t\tpath = '/' + path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Normalize\n\t\t\tconst names:string[] = path.split('/');\n\t\t\tconst normalized:string[] = [];\n\t\t\tfor (let i:number = 0; i < names.length; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (name == '') continue;\n\t\t\t\tif (name == '.') continue;\n\t\t\t\tif (name == '..') {\n\t\t\t\t\tnormalized.pop();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnormalized.push(name);\n\t\t\t}\n\n\t\t\treturn '/' + normalized.join('/');\n\t\t}\n\n\t\tpublic addSceneAt(path:string, createScene:boolean = false):Scene {\n\t\t\tlet success:boolean = false;\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (i == n - 1) {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tLogger.warn('[SceneManager \\'' + this.name + '\\'] addSceneAt was failed, because path \\'' + path + '\\' is already exist.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tscene = scene.getChildByName(name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn success ? scene : null;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getRoot():Scene {\n\t\t\treturn this.root;\n\t\t}\n\n\t\tpublic getSceneByPath(path:string):Scene {\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tscene = scene.getChildByName(names[i]);\n\t\t\t}\n\t\t\treturn scene;\n\t\t}\n\n\t\tpublic getSceneNamesByPath(path:string):string[] {\n\t\t\treturn path == '/' ? [''] : this.resolvePath(path).split('/');\n\t\t}\n\n\t\tpublic getSceneLevelByNames(names:string[]):number {\n\t\t\treturn names.length - 1;\n\t\t}\n\n\t\tpublic getScenePathByNames(names:string[]):string {\n\t\t\treturn names.length == 0 ? '/' : names.length == 1 ? ('/' + names[0]) : names.join('/');\n\t\t}\n\n\t\tprivate createWaypoints(departurePath:string, destinationPath:string):core.Waypoint[] {\n\t\t\tif (departurePath == destinationPath) {\n\t\t\t\tLogger.warn('[SceneManager] departure path and destination path is same, path = \\'' + departurePath + '\\'');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tLogger.verbose('----- scene flow -----');\n\n\t\t\tconst waypoints:core.Waypoint[] = [\n\t\t\t\tnew core.Waypoint(departurePath, this.getSceneLevelByNames(this.getSceneNamesByPath(departurePath)))\n\t\t\t];\n\n\t\t\tconst departureNames:string[] = this.getSceneNamesByPath(departurePath);\n\t\t\tconst destinationNames:string[] = this.getSceneNamesByPath(destinationPath);\n\n\t\t\tLogger.verbose('    path');\n\t\t\tLogger.verbose('        current    : \\'' + departurePath + '\\'');\n\t\t\tLogger.verbose('        destination: \\'' + destinationPath + '\\'');\n\n\t\t\tLogger.verbose('    names');\n\t\t\tLogger.verbose('        current(' + departureNames.length + ')    : \\'' + departureNames + '\\'');\n\t\t\tLogger.verbose('        destination(' + destinationNames.length + '): \\'' + destinationNames + '\\'');\n\n\t\t\t// 折り返しを見つける\n\t\t\tlet turningLevel:number = 0;\n\t\t\tlet turningNames:string[] = [];\n\t\t\tlet turningPath:string;\n\t\t\tif (destinationPath == '/') {\n\t\t\t\tturningLevel = -1;\n\t\t\t\tturningNames = [];\n\t\t\t\tturningPath = '/';\n\t\t\t} else {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (departureNames[turningLevel] == destinationNames[turningLevel]) {\n\t\t\t\t\t\tturningNames.push(departureNames[turningLevel]);\n\t\t\t\t\t\t++turningLevel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--turningLevel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tturningPath = this.getScenePathByNames(turningNames);\n\t\t\t}\n\n\t\t\tLogger.verbose('    turning');\n\t\t\tLogger.verbose('        path     : ' + turningPath);\n\t\t\tLogger.verbose('        level    : ' + turningLevel);\n\t\t\tLogger.verbose('        names(' + turningNames.length + ') : \\'' + turningNames + '\\'');\n\n\t\t\t// 出発シーンから折り返しまで\n\t\t\t{\n\t\t\t\tconst names:string[] = departureNames.concat();\n\t\t\t\tlet prevPath:string = departurePath;\n\t\t\t\tfor (let i:number = departureNames.length - 1; i > turningLevel + 1; --i) {\n\t\t\t\t\tnames.pop();\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (turningPath == destinationPath && turningLevel > 0) {\n\t\t\t\t// 折り返しと到着シーンが同一\n\t\t\t\tconst from:core.Direction = turningLevel == waypoints[waypoints.length - 1].getLevel() ? core.Direction.Sibling : core.Direction.Ascend;\n\t\t\t\twaypoints.push(new core.Waypoint(turningPath, turningLevel));\n\t\t\t} else {\n\n\t\t\t\t// 折り返しから到達シーンまで\n\t\t\t\tconst names:string[] = turningNames.concat();\n\t\t\t\tconst prev:core.Waypoint = waypoints[waypoints.length - 1];\n\t\t\t\tlet prevPath:string = prev.getPath();\n\t\t\t\tlet prevLevel:number = prev.getLevel();\n\t\t\t\tfor (let i:number = turningLevel + 1; i < destinationNames.length; ++i) {\n\t\t\t\t\tconst name:string = destinationNames[i];\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevLevel = level;\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 進行方向\n\t\t\tthis.setDirection(waypoints);\n\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tthis.printWaypoint(waypoints);\n\t\t\t}\n\n\t\t\treturn waypoints;\n\t\t}\n\n\t\tprivate setDirection(waypoints:core.Waypoint[]):void {\n\t\t\tconst n:number = waypoints.length;\n\t\t\tlet prev:core.Waypoint = null;\n\t\t\tlet point:core.Waypoint;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tpoint = waypoints[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst d:number = point.getLevel() - prev.getLevel();\n\t\t\t\t\tpoint._setFrom(d > 0 ? core.Direction.Descend : d < 0 ? core.Direction.Ascend : core.Direction.Sibling);\n\t\t\t\t\tprev._setTo(point.getFrom());\n\t\t\t\t}\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tprivate printWaypoint(waypoints:core.Waypoint[]):void {\n\t\t\tLogger.verbose('    waypoints');\n\t\t\tconst n:number = waypoints.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tLogger.verbose('        [' + i + '] ' + waypoints[i]);\n\t\t\t}\n\t\t\tLogger.verbose('');\n\t\t}\n\n\n\n\n\n\t\tprivate checkState():void {\n\t\t\ttrace('lastState : ' + scn.getSceneStateString(this.lastState));\n\n\t\t\t//trace(this.waypointIndex + ' / ' + this.waypoints.length);\n\n\t\t\tif (this.waypointIndex >= this.waypoints.length) {\n\t\t\t\tLogger.verbose('----- scene transfer complete -----');\n\t\t\t\tconst tmpTransferId:number = this.transferInfo.getTransferId();\n\t\t\t\tthis.waypointIndex = this.waypoints.length - 1;\n\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_COMPLETE, this));\n\t\t\t\tif (tmpTransferId == this.transferInfo.getTransferId()) {\n\t\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentScene) {\n\t\t\t\tconst currentWaypoint:core.Waypoint = this.waypoints[this.waypointIndex];\n\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypoint.getPath());\n\n\t\t\t\t// Departure scene\n\t\t\t\tif (this.waypoints.length > 1 && this.waypointIndex == 0) {\n\t\t\t\t\ttrace('Departure scene');\n\n\t\t\t\t\t// Leave\n\t\t\t\t\tif (this.lastState != SceneState.Leaving && this.currentScene.getLastState() == SceneState.Arriving) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Leave   : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._leave(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Departure to child\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tthis.checkState();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Through scene\n\t\t\t\tif (this.waypointIndex > 0 && this.waypointIndex < this.waypoints.length - 1) {\n\t\t\t\t\ttrace('Through scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ascend\n\t\t\t\t\tif (this.lastState != SceneState.Ascending && currentWaypoint.getFrom() == core.Direction.Ascend) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Ascend  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._ascend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Descend\n\t\t\t\t\tif (this.lastState != SceneState.Descending && currentWaypoint.getTo() == core.Direction.Descend) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Descend : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._descend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Destination scene\n\t\t\t\tif (this.waypointIndex == this.waypoints.length - 1) {\n\t\t\t\t\ttrace('Destination scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Arrive\n\t\t\t\t\tif (this.lastState != SceneState.Arriving) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Arrive  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._arrive(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ttrace('Init scene');\n\n\t\t\t\t// Init\n\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\tthis.currentScene = this.root;\n\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t}\n\t\t}\n\n\t\tprivate sceneLoadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Loading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneUnloadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Unloading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneArriveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Arriving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneLeaveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Leaving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneAscendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Ascending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneDescendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Descending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate name:string;\n\t\tprivate root:Scene;\n\t\tprivate currentScene:Scene;\n\n\t\tprivate waypoints:core.Waypoint[];\n\t\tprivate waypointIndex:number;\n\t\tprivate lastState:SceneState;\n\t\tprivate eventIndex:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t\tprivate transferId:number;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TRANSFER_START:string = 'transferStart';\n\t\tpublic static TRANSFER_COMPLETE:string = 'transferComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerEvent {\n\t\t\treturn new SceneManagerEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\texport class SceneTransferInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(transferId:number, departurePath:string, destinationPath:string) {\n\t\t\tthis.transferId = transferId;\n\t\t\tthis.departurePath = departurePath;\n\t\t\tthis.destinationPath = destinationPath;\n\t\t\tthis.relay = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTransferId():number {\n\t\t\treturn this.transferId;\n\t\t}\n\n\t\tpublic getDeparturePath():string {\n\t\t\treturn this.departurePath;\n\t\t}\n\n\t\tpublic getDestinationPath():string {\n\t\t\treturn this.destinationPath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic relay:any;\n\n\t\tprivate transferId:number;\n\t\tprivate departurePath:string;\n\t\tprivate destinationPath:string;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\texport enum SceneState {\n\t\tIdling,\n\t\tLoading,\n\t\tUnloading,\n\t\tArriving,\n\t\tLeaving,\n\t\tAscending,\n\t\tDescending,\n\t}\n\n\texport function getSceneStateString(state:SceneState):string {\n\t\tswitch (state) {\n\t\t\tcase SceneState.Idling:\n\t\t\t\treturn 'idling';\n\t\t\tcase SceneState.Loading:\n\t\t\t\treturn 'loading';\n\t\t\tcase SceneState.Unloading:\n\t\t\t\treturn 'unloading';\n\t\t\tcase SceneState.Arriving:\n\t\t\t\treturn 'arriving';\n\t\t\tcase SceneState.Leaving:\n\t\t\t\treturn 'leaving';\n\t\t\tcase SceneState.Ascending:\n\t\t\t\treturn 'ascending';\n\t\t\tcase SceneState.Descending:\n\t\t\t\treturn 'descending';\n\t\t}\n\t\treturn '';\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace scn.core {\n\n\texport enum Direction {\n\t\tStatic,\n\t\tSibling,\n\t\tAscend,\n\t\tDescend,\n\t}\n\n\texport function getDirectionString(direction:Direction):string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.Static:\n\t\t\t\treturn 'static';\n\t\t\tcase Direction.Sibling:\n\t\t\t\treturn 'sibling';\n\t\t\tcase Direction.Ascend:\n\t\t\t\treturn 'ascend';\n\t\t\tcase Direction.Descend:\n\t\t\t\treturn 'descend';\n\t\t}\n\t\treturn '';\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace scn.core {\n\n\texport class RootScene extends Scene {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(manager:SceneManager) {\n\t\t\tsuper('');\n\t\t\tthis.manager = manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getManager():SceneManager {\n\t\t\treturn this.manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate manager:SceneManager;\n\t}\n}"]}